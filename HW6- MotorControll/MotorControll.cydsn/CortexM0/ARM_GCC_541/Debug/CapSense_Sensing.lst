ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB17:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 1906 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 35


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 1910 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 1911 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 1916 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 1917 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 1922 0
  60 0020 0360     		str	r3, [r0]
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  61              		.loc 1 1923 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF0840 		.word	1074331392
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE17:
  71              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 36


  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	CapSense_SsTrimIdacs, %function
  77              	CapSense_SsTrimIdacs:
  78              	.LFB18:
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  79              		.loc 1 1944 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 1951 0
  88 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  90              		.loc 1 1955 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE18:
  95              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  96              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
  97              		.align	2
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 37


  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSDDisableMode, %function
 101              	CapSense_SsCSDDisableMode:
 102              	.LFB6:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 103              		.loc 1 769 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 111              		.loc 1 773 0
 112 0002 044A     		ldr	r2, .L6
 113 0004 1168     		ldr	r1, [r2]
 114              	.LVL5:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 115              		.loc 1 774 0
 116 0006 044B     		ldr	r3, .L6+4
 117 0008 0B40     		ands	r3, r1
 118              	.LVL6:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 119              		.loc 1 775 0
 120 000a 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 121              		.loc 1 789 0
 122 000c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 123              	.LVL7:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 124              		.loc 1 805 0
 125              		@ sp needed
 126 0010 10BD     		pop	{r4, pc}
 127              	.L7:
 128 0012 C046     		.align	2
 129              	.L6:
 130 0014 10000140 		.word	1073807376
 131 0018 FFF0FFFF 		.word	-3841
 132              		.cfi_endproc
 133              	.LFE6:
 134              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 135              		.section	.text.CapSense_IsBusy,"ax",%progbits
 136              		.align	2
 137              		.global	CapSense_IsBusy
 138              		.code	16
 139              		.thumb_func
 140              		.type	CapSense_IsBusy, %function
 141              	CapSense_IsBusy:
 142              	.LFB0:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 143              		.loc 1 234 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 38


 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 148              		.loc 1 235 0
 149 0000 024B     		ldr	r3, .L9
 150 0002 DB68     		ldr	r3, [r3, #12]
 151 0004 8020     		movs	r0, #128
 152 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 153              		.loc 1 236 0
 154              		@ sp needed
 155 0008 7047     		bx	lr
 156              	.L10:
 157 000a C046     		.align	2
 158              	.L9:
 159 000c 00000000 		.word	CapSense_dsRam
 160              		.cfi_endproc
 161              	.LFE0:
 162              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 163              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 164              		.align	2
 165              		.global	CapSense_SetupWidget
 166              		.code	16
 167              		.thumb_func
 168              		.type	CapSense_SetupWidget, %function
 169              	CapSense_SetupWidget:
 170              	.LFB1:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 171              		.loc 1 286 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL8:
 176 0000 10B5     		push	{r4, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 180              		.loc 1 289 0
 181 0002 0E4B     		ldr	r3, .L17
 182 0004 DB68     		ldr	r3, [r3, #12]
 183 0006 DB03     		lsls	r3, r3, #15
 184 0008 0DD4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 185              		.loc 1 299 0
 186 000a 0028     		cmp	r0, #0
 187 000c 0DD1     		bne	.L15
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 188              		.loc 1 300 0 discriminator 1
 189 000e 4309     		lsrs	r3, r0, #5
 190 0010 0433     		adds	r3, r3, #4
 191 0012 9B00     		lsls	r3, r3, #2
 192 0014 094A     		ldr	r2, .L17
 193 0016 9B58     		ldr	r3, [r3, r2]
 194 0018 1F22     		movs	r2, #31
 195 001a 0240     		ands	r2, r0
 196 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 197              		.loc 1 299 0 discriminator 1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 39


 198 001e DB07     		lsls	r3, r3, #31
 199 0020 05D4     		bmi	.L16
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 200              		.loc 1 307 0
 201 0022 0124     		movs	r4, #1
 202 0024 04E0     		b	.L12
 203              	.L14:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 204              		.loc 1 292 0
 205 0026 1124     		movs	r4, #17
 206 0028 02E0     		b	.L12
 207              	.L15:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 208              		.loc 1 307 0
 209 002a 0124     		movs	r4, #1
 210 002c 00E0     		b	.L12
 211              	.L16:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 212              		.loc 1 303 0
 213 002e 0024     		movs	r4, #0
 214              	.L12:
 215              	.LVL9:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 216              		.loc 1 314 0
 217 0030 002C     		cmp	r4, #0
 218 0032 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 219              		.loc 1 327 0
 220 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 221              	.LVL10:
 222              	.L13:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 223              		.loc 1 343 0
 224 0038 2000     		movs	r0, r4
 225              		@ sp needed
 226              	.LVL11:
 227 003a 10BD     		pop	{r4, pc}
 228              	.L18:
 229              		.align	2
 230              	.L17:
 231 003c 00000000 		.word	CapSense_dsRam
 232              		.cfi_endproc
 233              	.LFE1:
 234              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 235              		.section	.text.CapSense_Scan,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_Scan
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_Scan, %function
 241              	CapSense_Scan:
 242              	.LFB2:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 243              		.loc 1 369 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 40


 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251              	.LVL12:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 252              		.loc 1 372 0
 253 0002 084B     		ldr	r3, .L25
 254 0004 DB68     		ldr	r3, [r3, #12]
 255 0006 DB03     		lsls	r3, r3, #15
 256 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 257              		.loc 1 379 0
 258 000a 074B     		ldr	r3, .L25+4
 259 000c 1B78     		ldrb	r3, [r3]
 260 000e 012B     		cmp	r3, #1
 261 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 262              		.loc 1 388 0
 263 0012 FFF7FEFF 		bl	CapSense_CSDScan
 264              	.LVL13:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 265              		.loc 1 370 0
 266 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 267              		.loc 1 389 0
 268 0018 03E0     		b	.L20
 269              	.L22:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 270              		.loc 1 375 0
 271 001a 1120     		movs	r0, #17
 272 001c 01E0     		b	.L20
 273              	.L24:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 274              		.loc 1 397 0
 275 001e 0120     		movs	r0, #1
 276 0020 4042     		rsbs	r0, r0, #0
 277              	.L20:
 278              	.LVL14:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 279              		.loc 1 402 0
 280              		@ sp needed
 281 0022 10BD     		pop	{r4, pc}
 282              	.L26:
 283              		.align	2
 284              	.L25:
 285 0024 00000000 		.word	CapSense_dsRam
 286 0028 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE2:
 289              		.size	CapSense_Scan, .-CapSense_Scan
 290              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 291              		.align	2
 292              		.global	CapSense_ScanAllWidgets
 293              		.code	16
 294              		.thumb_func
 295              		.type	CapSense_ScanAllWidgets, %function
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 41


 296              	CapSense_ScanAllWidgets:
 297              	.LFB3:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 298              		.loc 1 431 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 10B5     		push	{r4, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306              	.LVL15:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307              		.loc 1 436 0
 308 0002 0C4B     		ldr	r3, .L33
 309 0004 DB68     		ldr	r3, [r3, #12]
 310 0006 1B06     		lsls	r3, r3, #24
 311 0008 12D4     		bmi	.L32
 312 000a 0024     		movs	r4, #0
 313 000c 0120     		movs	r0, #1
 314 000e 4042     		rsbs	r0, r0, #0
 315 0010 0BE0     		b	.L29
 316              	.LVL16:
 317              	.L31:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 318              		.loc 1 452 0
 319 0012 2000     		movs	r0, r4
 320              	.LVL17:
 321 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 322              	.LVL18:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 323              		.loc 1 454 0
 324 0018 0028     		cmp	r0, #0
 325 001a 05D1     		bne	.L30
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 326              		.loc 1 471 0
 327 001c 0022     		movs	r2, #0
 328 001e 064B     		ldr	r3, .L33+4
 329 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 330              		.loc 1 476 0
 331 0022 FFF7FEFF 		bl	CapSense_Scan
 332              	.LVL19:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 333              		.loc 1 478 0
 334 0026 04E0     		b	.L28
 335              	.L30:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 336              		.loc 1 449 0
 337 0028 0134     		adds	r4, r4, #1
 338              	.LVL20:
 339              	.L29:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 340              		.loc 1 447 0 discriminator 1
 341 002a 002C     		cmp	r4, #0
 342 002c F1D0     		beq	.L31
 343 002e 00E0     		b	.L28
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 42


 344              	.LVL21:
 345              	.L32:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 346              		.loc 1 439 0
 347 0030 1120     		movs	r0, #17
 348              	.LVL22:
 349              	.L28:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 350              		.loc 1 484 0
 351              		@ sp needed
 352 0032 10BD     		pop	{r4, pc}
 353              	.L34:
 354              		.align	2
 355              	.L33:
 356 0034 00000000 		.word	CapSense_dsRam
 357 0038 00000000 		.word	.LANCHOR0
 358              		.cfi_endproc
 359              	.LFE3:
 360              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 361              		.section	.text.CapSense_SetPinState,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_SetPinState
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_SetPinState, %function
 367              	CapSense_SetPinState:
 368              	.LFB5:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 369              		.loc 1 656 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              	.LVL23:
 374 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 375              		.cfi_def_cfa_offset 24
 376              		.cfi_offset 3, -24
 377              		.cfi_offset 4, -20
 378              		.cfi_offset 5, -16
 379              		.cfi_offset 6, -12
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 383              		.loc 1 681 0
 384 0004 2C23     		movs	r3, #44
 385 0006 5843     		muls	r0, r3
 386              	.LVL24:
 387 0008 234B     		ldr	r3, .L42
 388 000a C458     		ldr	r4, [r0, r3]
 389 000c CB00     		lsls	r3, r1, #3
 390 000e 591A     		subs	r1, r3, r1
 391              	.LVL25:
 392 0010 8B00     		lsls	r3, r1, #2
 393 0012 E418     		adds	r4, r4, r3
 394              	.LVL26:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 395              		.loc 1 686 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 43


 396 0014 0025     		movs	r5, #0
 397 0016 3CE0     		b	.L36
 398              	.LVL27:
 399              	.L41:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 400              		.loc 1 689 0
 401 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 402              	.LVL28:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 403              		.loc 1 690 0
 404 001c 2168     		ldr	r1, [r4]
 405 001e 0B68     		ldr	r3, [r1]
 406 0020 277E     		ldrb	r7, [r4, #24]
 407 0022 0F22     		movs	r2, #15
 408 0024 BA40     		lsls	r2, r2, r7
 409 0026 9343     		bics	r3, r2
 410 0028 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 411              		.loc 1 691 0
 412 002a 6168     		ldr	r1, [r4, #4]
 413 002c 0B68     		ldr	r3, [r1]
 414 002e A77E     		ldrb	r7, [r4, #26]
 415 0030 0722     		movs	r2, #7
 416 0032 BA40     		lsls	r2, r2, r7
 417 0034 9343     		bics	r3, r2
 418 0036 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 419              		.loc 1 692 0
 420 0038 FFF7FEFF 		bl	CyExitCriticalSection
 421              	.LVL29:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 422              		.loc 1 694 0
 423 003c 012E     		cmp	r6, #1
 424 003e 17D0     		beq	.L38
 425 0040 002E     		cmp	r6, #0
 426 0042 02D0     		beq	.L39
 427 0044 032E     		cmp	r6, #3
 428 0046 1FD0     		beq	.L40
 429 0048 21E0     		b	.L37
 430              	.L39:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 431              		.loc 1 698 0
 432 004a FFF7FEFF 		bl	CyEnterCriticalSection
 433              	.LVL30:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 434              		.loc 1 699 0
 435 004e 6268     		ldr	r2, [r4, #4]
 436 0050 1168     		ldr	r1, [r2]
 437 0052 A77E     		ldrb	r7, [r4, #26]
 438 0054 0623     		movs	r3, #6
 439 0056 BB40     		lsls	r3, r3, r7
 440 0058 0B43     		orrs	r3, r1
 441 005a 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 442              		.loc 1 700 0
 443 005c A168     		ldr	r1, [r4, #8]
 444 005e 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 44


 445 0060 677E     		ldrb	r7, [r4, #25]
 446 0062 0122     		movs	r2, #1
 447 0064 BA40     		lsls	r2, r2, r7
 448 0066 9343     		bics	r3, r2
 449 0068 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 450              		.loc 1 701 0
 451 006a FFF7FEFF 		bl	CyExitCriticalSection
 452              	.LVL31:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 453              		.loc 1 702 0
 454 006e 0EE0     		b	.L37
 455              	.L38:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 456              		.loc 1 705 0
 457 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 458              	.LVL32:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 459              		.loc 1 706 0
 460 0074 A168     		ldr	r1, [r4, #8]
 461 0076 0B68     		ldr	r3, [r1]
 462 0078 677E     		ldrb	r7, [r4, #25]
 463 007a 0122     		movs	r2, #1
 464 007c BA40     		lsls	r2, r2, r7
 465 007e 9343     		bics	r3, r2
 466 0080 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 467              		.loc 1 707 0
 468 0082 FFF7FEFF 		bl	CyExitCriticalSection
 469              	.LVL33:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 470              		.loc 1 708 0
 471 0086 02E0     		b	.L37
 472              	.L40:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 473              		.loc 1 713 0
 474 0088 2000     		movs	r0, r4
 475 008a FFF7FEFF 		bl	CapSense_CSDConnectSns
 476              	.LVL34:
 477              	.L37:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 478              		.loc 1 748 0 discriminator 2
 479 008e 1C34     		adds	r4, r4, #28
 480              	.LVL35:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 481              		.loc 1 686 0 discriminator 2
 482 0090 0135     		adds	r5, r5, #1
 483              	.LVL36:
 484              	.L36:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 485              		.loc 1 686 0 is_stmt 0 discriminator 1
 486 0092 002D     		cmp	r5, #0
 487 0094 C0D0     		beq	.L41
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 488              		.loc 1 750 0 is_stmt 1
 489              		@ sp needed
 490              	.LVL37:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 45


 491              	.LVL38:
 492              	.LVL39:
 493 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 494              	.L43:
 495              		.align	2
 496              	.L42:
 497 0098 00000000 		.word	CapSense_dsFlash
 498              		.cfi_endproc
 499              	.LFE5:
 500              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 501              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 502              		.align	2
 503              		.global	CapSense_SsSwitchSensingMode
 504              		.code	16
 505              		.thumb_func
 506              		.type	CapSense_SsSwitchSensingMode, %function
 507              	CapSense_SsSwitchSensingMode:
 508              	.LFB7:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 509              		.loc 1 908 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL40:
 514 0000 10B5     		push	{r4, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 518 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 519              		.loc 1 909 0
 520 0004 0C4B     		ldr	r3, .L48
 521 0006 1B78     		ldrb	r3, [r3]
 522 0008 8342     		cmp	r3, r0
 523 000a 14D0     		beq	.L44
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 524              		.loc 1 912 0
 525 000c 012B     		cmp	r3, #1
 526 000e 01D1     		bne	.L46
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 527              		.loc 1 915 0
 528 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 529              	.LVL41:
 530              	.L46:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 531              		.loc 1 945 0
 532 0014 012C     		cmp	r4, #1
 533 0016 05D1     		bne	.L47
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 534              		.loc 1 949 0
 535 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 536              	.LVL42:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 537              		.loc 1 950 0
 538 001c 0122     		movs	r2, #1
 539 001e 064B     		ldr	r3, .L48
 540 0020 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 46


 541 0022 08E0     		b	.L44
 542              	.L47:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 543              		.loc 1 953 0
 544 0024 022C     		cmp	r4, #2
 545 0026 06D0     		beq	.L44
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 546              		.loc 1 961 0
 547 0028 042C     		cmp	r4, #4
 548 002a 04D0     		beq	.L44
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 549              		.loc 1 969 0
 550 002c 032C     		cmp	r4, #3
 551 002e 02D0     		beq	.L44
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 552              		.loc 1 978 0
 553 0030 0022     		movs	r2, #0
 554 0032 014B     		ldr	r3, .L48
 555 0034 1A70     		strb	r2, [r3]
 556              	.L44:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 557              		.loc 1 981 0
 558              		@ sp needed
 559 0036 10BD     		pop	{r4, pc}
 560              	.L49:
 561              		.align	2
 562              	.L48:
 563 0038 00000000 		.word	.LANCHOR0
 564              		.cfi_endproc
 565              	.LFE7:
 566              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 567              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 568              		.align	2
 569              		.global	CapSense_SsSetIOsInDefaultState
 570              		.code	16
 571              		.thumb_func
 572              		.type	CapSense_SsSetIOsInDefaultState, %function
 573              	CapSense_SsSetIOsInDefaultState:
 574              	.LFB8:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 575              		.loc 1 1007 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 30B5     		push	{r4, r5, lr}
 580              		.cfi_def_cfa_offset 12
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 5, -8
 583              		.cfi_offset 14, -4
 584              	.LVL43:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 585              		.loc 1 1013 0
 586 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 587              		.loc 1 1008 0
 588 0004 0D4B     		ldr	r3, .L53
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 47


 589              		.loc 1 1013 0
 590 0006 16E0     		b	.L51
 591              	.LVL44:
 592              	.L52:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 593              		.loc 1 1020 0 discriminator 3
 594 0008 1968     		ldr	r1, [r3]
 595 000a 0A68     		ldr	r2, [r1]
 596              	.LVL45:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 597              		.loc 1 1021 0 discriminator 3
 598 000c 1C69     		ldr	r4, [r3, #16]
 599 000e A243     		bics	r2, r4
 600              	.LVL46:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 601              		.loc 1 1022 0 discriminator 3
 602 0010 0A60     		str	r2, [r1]
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 603              		.loc 1 1024 0 discriminator 3
 604 0012 5C68     		ldr	r4, [r3, #4]
 605 0014 2268     		ldr	r2, [r4]
 606              	.LVL47:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 607              		.loc 1 1025 0 discriminator 3
 608 0016 9D7E     		ldrb	r5, [r3, #26]
 609 0018 0721     		movs	r1, #7
 610 001a A940     		lsls	r1, r1, r5
 611 001c 8A43     		bics	r2, r1
 612              	.LVL48:
 613 001e 1100     		movs	r1, r2
 614              	.LVL49:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 615              		.loc 1 1026 0 discriminator 3
 616 0020 0622     		movs	r2, #6
 617 0022 AA40     		lsls	r2, r2, r5
 618 0024 0A43     		orrs	r2, r1
 619              	.LVL50:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 620              		.loc 1 1027 0 discriminator 3
 621 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 622              		.loc 1 1029 0 discriminator 3
 623 0028 9968     		ldr	r1, [r3, #8]
 624 002a 0A68     		ldr	r2, [r1]
 625              	.LVL51:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 626              		.loc 1 1030 0 discriminator 3
 627 002c 5C69     		ldr	r4, [r3, #20]
 628 002e A243     		bics	r2, r4
 629              	.LVL52:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 630              		.loc 1 1031 0 discriminator 3
 631 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 632              		.loc 1 1034 0 discriminator 3
 633 0032 1C33     		adds	r3, r3, #28
 634              	.LVL53:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 48


1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 635              		.loc 1 1013 0 discriminator 3
 636 0034 0130     		adds	r0, r0, #1
 637              	.LVL54:
 638              	.L51:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 639              		.loc 1 1013 0 is_stmt 0 discriminator 1
 640 0036 0428     		cmp	r0, #4
 641 0038 E6D9     		bls	.L52
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 642              		.loc 1 1040 0 is_stmt 1
 643              		@ sp needed
 644 003a 30BD     		pop	{r4, r5, pc}
 645              	.L54:
 646              		.align	2
 647              	.L53:
 648 003c 00000000 		.word	CapSense_ioList
 649              		.cfi_endproc
 650              	.LFE8:
 651              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 652              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 653              		.align	2
 654              		.global	CapSense_SsPostAllWidgetsScan
 655              		.code	16
 656              		.thumb_func
 657              		.type	CapSense_SsPostAllWidgetsScan, %function
 658              	CapSense_SsPostAllWidgetsScan:
 659              	.LFB9:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 660              		.loc 1 1125 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665              		.loc 1 1182 0
 666              		@ sp needed
 667 0000 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE9:
 670              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 671 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 672              		.align	2
 673              		.global	CapSense_SsIsrInitialize
 674              		.code	16
 675              		.thumb_func
 676              		.type	CapSense_SsIsrInitialize, %function
 677              	CapSense_SsIsrInitialize:
 678              	.LFB10:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 679              		.loc 1 1202 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              	.LVL55:
 684 0000 10B5     		push	{r4, lr}
 685              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 49


 686              		.cfi_offset 4, -8
 687              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 688              		.loc 1 1203 0
 689 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 690              	.LVL56:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 691              		.loc 1 1204 0
 692              		@ sp needed
 693 0006 10BD     		pop	{r4, pc}
 694              		.cfi_endproc
 695              	.LFE10:
 696              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 697              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 698              		.align	2
 699              		.global	CapSense_SsSetModClkClockDivider
 700              		.code	16
 701              		.thumb_func
 702              		.type	CapSense_SsSetModClkClockDivider, %function
 703              	CapSense_SsSetModClkClockDivider:
 704              	.LFB11:
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 705              		.loc 1 1225 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL57:
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
 711              		.loc 1 1255 0
 712 0000 084B     		ldr	r3, .L58
 713 0002 1A68     		ldr	r2, [r3]
 714 0004 5200     		lsls	r2, r2, #1
 715 0006 5208     		lsrs	r2, r2, #1
 716 0008 1A60     		str	r2, [r3]
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
 717              		.loc 1 1263 0
 718 000a 1A68     		ldr	r2, [r3]
 719 000c 120C     		lsrs	r2, r2, #16
 720 000e 1204     		lsls	r2, r2, #16
 721              	.LVL58:
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
 722              		.loc 1 1264 0
 723 0010 0138     		subs	r0, r0, #1
 724              	.LVL59:
 725 0012 1043     		orrs	r0, r2
 726              	.LVL60:
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 727              		.loc 1 1265 0
 728 0014 1860     		str	r0, [r3]
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
 729              		.loc 1 1268 0
 730 0016 1A68     		ldr	r2, [r3]
 731 0018 8021     		movs	r1, #128
 732 001a 0906     		lsls	r1, r1, #24
 733 001c 0A43     		orrs	r2, r1
 734 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 50


1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735              		.loc 1 1272 0
 736              		@ sp needed
 737 0020 7047     		bx	lr
 738              	.L59:
 739 0022 C046     		.align	2
 740              	.L58:
 741 0024 00000240 		.word	1073872896
 742              		.cfi_endproc
 743              	.LFE11:
 744              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 745              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 746              		.align	2
 747              		.global	CapSense_SsSetSnsClockDivider
 748              		.code	16
 749              		.thumb_func
 750              		.type	CapSense_SsSetSnsClockDivider, %function
 751              	CapSense_SsSetSnsClockDivider:
 752              	.LFB12:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 753              		.loc 1 1293 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758              	.LVL61:
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
 759              		.loc 1 1336 0
 760 0000 084B     		ldr	r3, .L61
 761 0002 1A68     		ldr	r2, [r3]
 762 0004 5200     		lsls	r2, r2, #1
 763 0006 5208     		lsrs	r2, r2, #1
 764 0008 1A60     		str	r2, [r3]
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
 765              		.loc 1 1344 0
 766 000a 1A68     		ldr	r2, [r3]
 767 000c 120C     		lsrs	r2, r2, #16
 768 000e 1204     		lsls	r2, r2, #16
 769              	.LVL62:
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
 770              		.loc 1 1345 0
 771 0010 0138     		subs	r0, r0, #1
 772              	.LVL63:
 773 0012 1043     		orrs	r0, r2
 774              	.LVL64:
1346:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 775              		.loc 1 1346 0
 776 0014 1860     		str	r0, [r3]
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
 777              		.loc 1 1349 0
 778 0016 1A68     		ldr	r2, [r3]
 779 0018 8021     		movs	r1, #128
 780 001a 0906     		lsls	r1, r1, #24
 781 001c 0A43     		orrs	r2, r1
 782 001e 1A60     		str	r2, [r3]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 783              		.loc 1 1354 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 51


 784              		@ sp needed
 785 0020 7047     		bx	lr
 786              	.L62:
 787 0022 C046     		.align	2
 788              	.L61:
 789 0024 40000240 		.word	1073872960
 790              		.cfi_endproc
 791              	.LFE12:
 792              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 793              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 794              		.align	2
 795              		.global	CapSense_SsSetClockDividers
 796              		.code	16
 797              		.thumb_func
 798              		.type	CapSense_SsSetClockDividers, %function
 799              	CapSense_SsSetClockDividers:
 800              	.LFB13:
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 801              		.loc 1 1377 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              	.LVL65:
 806 0000 10B5     		push	{r4, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 4, -8
 809              		.cfi_offset 14, -4
 810 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 811              		.loc 1 1379 0
 812 0004 0800     		movs	r0, r1
 813              	.LVL66:
 814 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 815              	.LVL67:
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 816              		.loc 1 1382 0
 817 000a 2000     		movs	r0, r4
 818 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 819              	.LVL68:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 820              		.loc 1 1383 0
 821              		@ sp needed
 822              	.LVL69:
 823 0010 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE13:
 826              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 827 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 828              		.align	2
 829              		.global	CapSense_CalibrateWidget
 830              		.code	16
 831              		.thumb_func
 832              		.type	CapSense_CalibrateWidget, %function
 833              	CapSense_CalibrateWidget:
 834              	.LFB14:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 835              		.loc 1 1429 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 52


 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL70:
 840 0000 10B5     		push	{r4, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 4, -8
 843              		.cfi_offset 14, -4
 844 0002 031E     		subs	r3, r0, #0
 845              	.LVL71:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 846              		.loc 1 1434 0
 847 0004 01D1     		bne	.L67
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 848              		.loc 1 1430 0
 849 0006 0020     		movs	r0, #0
 850              	.LVL72:
 851 0008 00E0     		b	.L65
 852              	.LVL73:
 853              	.L67:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 854              		.loc 1 1436 0
 855 000a 0120     		movs	r0, #1
 856              	.LVL74:
 857              	.L65:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 858              		.loc 1 1454 0
 859 000c 0028     		cmp	r0, #0
 860 000e 03D1     		bne	.L66
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 861              		.loc 1 1483 0
 862 0010 5521     		movs	r1, #85
 863 0012 1800     		movs	r0, r3
 864              	.LVL75:
 865 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 866              	.LVL76:
 867              	.L66:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 868              		.loc 1 1505 0
 869              		@ sp needed
 870 0018 10BD     		pop	{r4, pc}
 871              		.cfi_endproc
 872              	.LFE14:
 873              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 874 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 875              		.align	2
 876              		.global	CapSense_CalibrateAllWidgets
 877              		.code	16
 878              		.thumb_func
 879              		.type	CapSense_CalibrateAllWidgets, %function
 880              	CapSense_CalibrateAllWidgets:
 881              	.LFB15:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 882              		.loc 1 1542 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 53


 886 0000 70B5     		push	{r4, r5, r6, lr}
 887              		.cfi_def_cfa_offset 16
 888              		.cfi_offset 4, -16
 889              		.cfi_offset 5, -12
 890              		.cfi_offset 6, -8
 891              		.cfi_offset 14, -4
 892              	.LVL77:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 893              		.loc 1 1546 0
 894 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 895              		.loc 1 1543 0
 896 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 897              		.loc 1 1546 0
 898 0006 04E0     		b	.L69
 899              	.LVL78:
 900              	.L70:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 901              		.loc 1 1548 0 discriminator 3
 902 0008 2000     		movs	r0, r4
 903 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 904              	.LVL79:
 905 000e 0543     		orrs	r5, r0
 906              	.LVL80:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 907              		.loc 1 1546 0 discriminator 3
 908 0010 0134     		adds	r4, r4, #1
 909              	.LVL81:
 910              	.L69:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 911              		.loc 1 1546 0 is_stmt 0 discriminator 1
 912 0012 002C     		cmp	r4, #0
 913 0014 F8D0     		beq	.L70
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 914              		.loc 1 1552 0 is_stmt 1
 915 0016 2800     		movs	r0, r5
 916              		@ sp needed
 917              	.LVL82:
 918              	.LVL83:
 919 0018 70BD     		pop	{r4, r5, r6, pc}
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 923 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_SsClearCSDSensors
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_SsClearCSDSensors, %function
 929              	CapSense_SsClearCSDSensors:
 930              	.LFB21:
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 54


1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 55


2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 56


2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 57


2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 58


2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 59


2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 60


2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 61


2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 62


2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 63


2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 64


2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 931              		.loc 1 2569 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
 941              	.LVL84:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 65


2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 942              		.loc 1 2585 0
 943 0002 0025     		movs	r5, #0
 944 0004 14E0     		b	.L72
 945              	.LVL85:
 946              	.L75:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 947              		.loc 1 2590 0
 948 0006 2C23     		movs	r3, #44
 949 0008 6B43     		muls	r3, r5
 950 000a 0B4A     		ldr	r2, .L76
 951 000c 9E58     		ldr	r6, [r3, r2]
 952              	.LVL86:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 953              		.loc 1 2594 0
 954 000e 0024     		movs	r4, #0
 955 0010 06E0     		b	.L73
 956              	.LVL87:
 957              	.L74:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 66


2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 958              		.loc 1 2622 0 discriminator 3
 959 0012 E300     		lsls	r3, r4, #3
 960 0014 1B1B     		subs	r3, r3, r4
 961 0016 9800     		lsls	r0, r3, #2
 962 0018 3018     		adds	r0, r6, r0
 963 001a FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 964              	.LVL88:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 965              		.loc 1 2594 0 discriminator 3
 966 001e 0134     		adds	r4, r4, #1
 967              	.LVL89:
 968              	.L73:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 969              		.loc 1 2594 0 is_stmt 0 discriminator 1
 970 0020 2C23     		movs	r3, #44
 971 0022 6B43     		muls	r3, r5
 972 0024 044A     		ldr	r2, .L76
 973 0026 D318     		adds	r3, r2, r3
 974 0028 1B7E     		ldrb	r3, [r3, #24]
 975 002a 9C42     		cmp	r4, r3
 976 002c F1D3     		bcc	.L74
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 977              		.loc 1 2585 0 is_stmt 1 discriminator 2
 978 002e 0135     		adds	r5, r5, #1
 979              	.LVL90:
 980              	.L72:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 981              		.loc 1 2585 0 is_stmt 0 discriminator 1
 982 0030 002D     		cmp	r5, #0
 983 0032 E8D0     		beq	.L75
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984              		.loc 1 2627 0 is_stmt 1
 985              		@ sp needed
 986              	.LVL91:
 987 0034 70BD     		pop	{r4, r5, r6, pc}
 988              	.L77:
 989 0036 C046     		.align	2
 990              	.L76:
 991 0038 00000000 		.word	CapSense_dsFlash
 992              		.cfi_endproc
 993              	.LFE21:
 994              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 995              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 996              		.align	2
 997              		.global	CapSense_SsCSDGetColSnsClkDivider
 998              		.code	16
 999              		.thumb_func
 1000              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 67


 1001              	CapSense_SsCSDGetColSnsClkDivider:
 1002              	.LFB22:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1003              		.loc 1 2651 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008              	.LVL92:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1009              		.loc 1 2658 0
 1010 0000 2C23     		movs	r3, #44
 1011 0002 5843     		muls	r0, r3
 1012              	.LVL93:
 1013 0004 024B     		ldr	r3, .L79
 1014 0006 1818     		adds	r0, r3, r0
 1015 0008 4368     		ldr	r3, [r0, #4]
 1016              	.LVL94:
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1017              		.loc 1 2661 0
 1018 000a 5889     		ldrh	r0, [r3, #10]
 1019              	.LVL95:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 68


2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1020              		.loc 1 2669 0
 1021              		@ sp needed
 1022 000c 7047     		bx	lr
 1023              	.L80:
 1024 000e C046     		.align	2
 1025              	.L79:
 1026 0010 00000000 		.word	CapSense_dsFlash
 1027              		.cfi_endproc
 1028              	.LFE22:
 1029              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1030              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1031              		.align	2
 1032              		.global	CapSense_SsCSDCalcPrsSize
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	CapSense_SsCSDCalcPrsSize, %function
 1036              	CapSense_SsCSDCalcPrsSize:
 1037              	.LFB23:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 69


2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1038              		.loc 1 2738 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043              	.LVL96:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1044              		.loc 1 2747 0
 1045 0000 0203     		lsls	r2, r0, #12
 1046 0002 121A     		subs	r2, r2, r0
 1047 0004 0123     		movs	r3, #1
 1048 0006 8B40     		lsls	r3, r3, r1
 1049 0008 013B     		subs	r3, r3, #1
 1050 000a 9A42     		cmp	r2, r3
 1051 000c 05D9     		bls	.L83
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 70


2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1052              		.loc 1 2752 0
 1053 000e 0202     		lsls	r2, r0, #8
 1054 0010 101A     		subs	r0, r2, r0
 1055              	.LVL97:
 1056 0012 8342     		cmp	r3, r0
 1057 0014 03D3     		bcc	.L84
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1058              		.loc 1 2755 0
 1059 0016 4020     		movs	r0, #64
 1060 0018 02E0     		b	.L82
 1061              	.LVL98:
 1062              	.L83:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1063              		.loc 1 2750 0
 1064 001a C020     		movs	r0, #192
 1065              	.LVL99:
 1066 001c 00E0     		b	.L82
 1067              	.L84:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1068              		.loc 1 2760 0
 1069 001e 0020     		movs	r0, #0
 1070              	.L82:
 1071              	.LVL100:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1072              		.loc 1 2763 0
 1073 0020 C0B2     		uxtb	r0, r0
 1074              	.LVL101:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1075              		.loc 1 2764 0
 1076              		@ sp needed
 1077 0022 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE23:
 1080              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1081              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1082              		.align	2
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1086              	CapSense_SsSetWidgetSenseClkSrc:
 1087              	.LFB20:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1088              		.loc 1 2241 0
 1089              		.cfi_startproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 71


 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              	.LVL102:
 1093 0000 10B5     		push	{r4, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 4, -8
 1096              		.cfi_offset 14, -4
 1097 0002 0C00     		movs	r4, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1098              		.loc 1 2253 0
 1099 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1100              	.LVL103:
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1101              		.loc 1 2273 0
 1102 0008 4000     		lsls	r0, r0, #1
 1103              	.LVL104:
 1104 000a 2188     		ldrh	r1, [r4]
 1105 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1106              	.LVL105:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1107              		.loc 1 2282 0
 1108 0010 2073     		strb	r0, [r4, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1109              		.loc 1 2317 0
 1110              		@ sp needed
 1111              	.LVL106:
 1112 0012 10BD     		pop	{r4, pc}
 1113              		.cfi_endproc
 1114              	.LFE20:
 1115              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1116              		.global	__aeabi_uidiv
 1117              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1118              		.align	2
 1119              		.global	CapSense_SsAutoTune
 1120              		.code	16
 1121              		.thumb_func
 1122              		.type	CapSense_SsAutoTune, %function
 1123              	CapSense_SsAutoTune:
 1124              	.LFB16:
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1125              		.loc 1 1578 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 40
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129 0000 70B5     		push	{r4, r5, r6, lr}
 1130              		.cfi_def_cfa_offset 16
 1131              		.cfi_offset 4, -16
 1132              		.cfi_offset 5, -12
 1133              		.cfi_offset 6, -8
 1134              		.cfi_offset 14, -4
 1135 0002 8AB0     		sub	sp, sp, #40
 1136              		.cfi_def_cfa_offset 56
 1137              	.LVL107:
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1138              		.loc 1 1592 0
 1139 0004 FA23     		movs	r3, #250
 1140 0006 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 72


 1141 0008 02AA     		add	r2, sp, #8
 1142 000a 1380     		strh	r3, [r2]
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
 1143              		.loc 1 1593 0
 1144 000c C833     		adds	r3, r3, #200
 1145 000e 5380     		strh	r3, [r2, #2]
1594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1146              		.loc 1 1594 0
 1147 0010 9380     		strh	r3, [r2, #4]
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1148              		.loc 1 1608 0
 1149 0012 434B     		ldr	r3, .L97
 1150 0014 197F     		ldrb	r1, [r3, #28]
 1151 0016 4348     		ldr	r0, .L97+4
 1152 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1153              	.LVL108:
 1154 001c 4008     		lsrs	r0, r0, #1
 1155 001e 02AB     		add	r3, sp, #8
 1156 0020 9881     		strh	r0, [r3, #12]
 1157              	.LVL109:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1158              		.loc 1 1625 0
 1159 0022 0026     		movs	r6, #0
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1160              		.loc 1 1579 0
 1161 0024 0025     		movs	r5, #0
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1162              		.loc 1 1625 0
 1163 0026 3DE0     		b	.L87
 1164              	.LVL110:
 1165              	.L91:
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1166              		.loc 1 1630 0
 1167 0028 2C23     		movs	r3, #44
 1168 002a 7343     		muls	r3, r6
 1169 002c 3E4A     		ldr	r2, .L97+8
 1170 002e D318     		adds	r3, r2, r3
 1171 0030 5C68     		ldr	r4, [r3, #4]
 1172              	.LVL111:
1634:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1173              		.loc 1 1634 0
 1174 0032 0C23     		movs	r3, #12
 1175 0034 2380     		strh	r3, [r4]
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
 1176              		.loc 1 1637 0
 1177 0036 0023     		movs	r3, #0
 1178 0038 2373     		strb	r3, [r4, #12]
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1179              		.loc 1 1638 0
 1180 003a 02AB     		add	r3, sp, #8
 1181 003c 9889     		ldrh	r0, [r3, #12]
 1182 003e 3B49     		ldr	r1, .L97+12
 1183 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1184              	.LVL112:
 1185 0044 6081     		strh	r0, [r4, #10]
1649:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1186              		.loc 1 1649 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 73


 1187 0046 5521     		movs	r1, #85
 1188 0048 3000     		movs	r0, r6
 1189 004a FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1190              	.LVL113:
1698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1191              		.loc 1 1698 0
 1192 004e 2300     		movs	r3, r4
 1193 0050 0A33     		adds	r3, r3, #10
 1194 0052 0693     		str	r3, [sp, #24]
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1195              		.loc 1 1701 0
 1196 0054 364B     		ldr	r3, .L97+16
 1197 0056 1B78     		ldrb	r3, [r3]
 1198 0058 02AA     		add	r2, sp, #8
 1199 005a 1376     		strb	r3, [r2, #24]
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
 1200              		.loc 1 1704 0
 1201 005c 354B     		ldr	r3, .L97+20
 1202 005e 1888     		ldrh	r0, [r3]
 1203 0060 FA23     		movs	r3, #250
 1204 0062 9B00     		lsls	r3, r3, #2
 1205 0064 5843     		muls	r0, r3
 1206 0066 3449     		ldr	r1, .L97+24
 1207 0068 FFF7FEFF 		bl	__aeabi_uidiv
 1208              	.LVL114:
 1209 006c 02AB     		add	r3, sp, #8
 1210 006e D881     		strh	r0, [r3, #14]
1708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1211              		.loc 1 1708 0
 1212 0070 1800     		movs	r0, r3
 1213 0072 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1214              	.LVL115:
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1215              		.loc 1 1710 0
 1216 0076 314B     		ldr	r3, .L97+28
 1217 0078 9842     		cmp	r0, r3
 1218 007a 03D9     		bls	.L89
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1219              		.loc 1 1712 0
 1220 007c 0625     		movs	r5, #6
 1221              	.LVL116:
 1222 007e 01E0     		b	.L89
 1223              	.LVL117:
 1224              	.L90:
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1225              		.loc 1 1722 0
 1226 0080 5B00     		lsls	r3, r3, #1
 1227 0082 6381     		strh	r3, [r4, #10]
 1228              	.LVL118:
 1229              	.L89:
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1230              		.loc 1 1719 0
 1231 0084 02AB     		add	r3, sp, #8
 1232 0086 9989     		ldrh	r1, [r3, #12]
 1233 0088 6389     		ldrh	r3, [r4, #10]
 1234 008a 2D4A     		ldr	r2, .L97+32
 1235 008c 5A43     		muls	r2, r3
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 74


 1236 008e 9142     		cmp	r1, r2
 1237 0090 F6D8     		bhi	.L90
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1238              		.loc 1 1719 0 is_stmt 0 discriminator 1
 1239 0092 002B     		cmp	r3, #0
 1240 0094 F4D0     		beq	.L90
1737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1241              		.loc 1 1737 0 is_stmt 1
 1242 0096 B300     		lsls	r3, r6, #2
 1243 0098 0AAA     		add	r2, sp, #40
 1244 009a 9446     		mov	ip, r2
 1245 009c 6344     		add	r3, r3, ip
 1246 009e 043B     		subs	r3, r3, #4
 1247 00a0 1860     		str	r0, [r3]
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1248              		.loc 1 1625 0
 1249 00a2 0136     		adds	r6, r6, #1
 1250              	.LVL119:
 1251              	.L87:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1252              		.loc 1 1625 0 is_stmt 0 discriminator 1
 1253 00a4 002E     		cmp	r6, #0
 1254 00a6 BFD0     		beq	.L91
 1255 00a8 0024     		movs	r4, #0
 1256 00aa 22E0     		b	.L92
 1257              	.LVL120:
 1258              	.L93:
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1259              		.loc 1 1771 0 is_stmt 1
 1260 00ac 2C23     		movs	r3, #44
 1261 00ae 6343     		muls	r3, r4
 1262 00b0 1D4A     		ldr	r2, .L97+8
 1263 00b2 D318     		adds	r3, r2, r3
 1264 00b4 5E68     		ldr	r6, [r3, #4]
 1265              	.LVL121:
1775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1266              		.loc 1 1775 0
 1267 00b6 5521     		movs	r1, #85
 1268 00b8 2000     		movs	r0, r4
 1269 00ba FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1270              	.LVL122:
 1271 00be 0543     		orrs	r5, r0
 1272              	.LVL123:
1778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1273              		.loc 1 1778 0
 1274 00c0 3300     		movs	r3, r6
 1275 00c2 0A33     		adds	r3, r3, #10
 1276 00c4 0693     		str	r3, [sp, #24]
1781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1277              		.loc 1 1781 0
 1278 00c6 A300     		lsls	r3, r4, #2
 1279 00c8 0AAA     		add	r2, sp, #40
 1280 00ca 9446     		mov	ip, r2
 1281 00cc 6344     		add	r3, r3, ip
 1282 00ce 043B     		subs	r3, r3, #4
 1283 00d0 1B68     		ldr	r3, [r3]
 1284 00d2 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 75


 1285 00d4 0493     		str	r3, [sp, #16]
1784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1286              		.loc 1 1784 0
 1287 00d6 164B     		ldr	r3, .L97+16
 1288 00d8 1B78     		ldrb	r3, [r3]
 1289 00da 02AA     		add	r2, sp, #8
 1290 00dc 1376     		strb	r3, [r2, #24]
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1291              		.loc 1 1807 0
 1292 00de F389     		ldrh	r3, [r6, #14]
 1293 00e0 D380     		strh	r3, [r2, #6]
1810:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1294              		.loc 1 1810 0
 1295 00e2 3300     		movs	r3, r6
 1296 00e4 1033     		adds	r3, r3, #16
 1297 00e6 0793     		str	r3, [sp, #28]
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1298              		.loc 1 1813 0
 1299 00e8 1000     		movs	r0, r2
 1300 00ea FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1301              	.LVL124:
 1302 00ee 3080     		strh	r0, [r6]
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1303              		.loc 1 1766 0
 1304 00f0 0134     		adds	r4, r4, #1
 1305              	.LVL125:
 1306              	.L92:
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1307              		.loc 1 1766 0 is_stmt 0 discriminator 1
 1308 00f2 002C     		cmp	r4, #0
 1309 00f4 DAD0     		beq	.L93
 1310 00f6 0024     		movs	r4, #0
 1311              	.LVL126:
 1312 00f8 0DE0     		b	.L94
 1313              	.LVL127:
 1314              	.L95:
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1315              		.loc 1 1830 0 is_stmt 1
 1316 00fa 2C23     		movs	r3, #44
 1317 00fc 6343     		muls	r3, r4
 1318 00fe 0A4A     		ldr	r2, .L97+8
 1319 0100 D318     		adds	r3, r2, r3
 1320 0102 5968     		ldr	r1, [r3, #4]
 1321              	.LVL128:
1833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1322              		.loc 1 1833 0
 1323 0104 2000     		movs	r0, r4
 1324 0106 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1325              	.LVL129:
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1326              		.loc 1 1836 0
 1327 010a 5521     		movs	r1, #85
 1328 010c 2000     		movs	r0, r4
 1329 010e FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1330              	.LVL130:
 1331 0112 0543     		orrs	r5, r0
 1332              	.LVL131:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 76


1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1333              		.loc 1 1825 0
 1334 0114 0134     		adds	r4, r4, #1
 1335              	.LVL132:
 1336              	.L94:
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1337              		.loc 1 1825 0 is_stmt 0 discriminator 1
 1338 0116 002C     		cmp	r4, #0
 1339 0118 EFD0     		beq	.L95
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1340              		.loc 1 1845 0 is_stmt 1
 1341 011a 2800     		movs	r0, r5
 1342 011c 0AB0     		add	sp, sp, #40
 1343              		@ sp needed
 1344              	.LVL133:
 1345              	.LVL134:
 1346 011e 70BD     		pop	{r4, r5, r6, pc}
 1347              	.L98:
 1348              		.align	2
 1349              	.L97:
 1350 0120 00000000 		.word	CapSense_dsRam
 1351 0124 C05D0000 		.word	24000
 1352 0128 00000000 		.word	CapSense_dsFlash
 1353 012c DC050000 		.word	1500
 1354 0130 00000000 		.word	CapSense_calibratedIdac
 1355 0134 00000000 		.word	CapSense_calibratedRawcount
 1356 0138 FF0F0000 		.word	4095
 1357 013c 870D0100 		.word	68999
 1358 0140 38310000 		.word	12600
 1359              		.cfi_endproc
 1360              	.LFE16:
 1361              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1362              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1363              		.align	2
 1364              		.global	CapSense_SsInitializeSourceSenseClk
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1368              	CapSense_SsInitializeSourceSenseClk:
 1369              	.LFB19:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1370              		.loc 1 2188 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 10B5     		push	{r4, lr}
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 4, -8
 1377              		.cfi_offset 14, -4
 1378              	.LVL135:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1379              		.loc 1 2192 0
 1380 0002 0024     		movs	r4, #0
 1381 0004 08E0     		b	.L100
 1382              	.LVL136:
 1383              	.L101:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 77


 1384              		.loc 1 2194 0
 1385 0006 2C23     		movs	r3, #44
 1386 0008 6343     		muls	r3, r4
 1387 000a 054A     		ldr	r2, .L102
 1388 000c D318     		adds	r3, r2, r3
 1389 000e 5968     		ldr	r1, [r3, #4]
 1390              	.LVL137:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1391              		.loc 1 2200 0
 1392 0010 2000     		movs	r0, r4
 1393 0012 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1394              	.LVL138:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1395              		.loc 1 2192 0
 1396 0016 0134     		adds	r4, r4, #1
 1397              	.LVL139:
 1398              	.L100:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1399              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1400 0018 002C     		cmp	r4, #0
 1401 001a F4D0     		beq	.L101
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1402              		.loc 1 2215 0 is_stmt 1
 1403              		@ sp needed
 1404              	.LVL140:
 1405 001c 10BD     		pop	{r4, pc}
 1406              	.L103:
 1407 001e C046     		.align	2
 1408              	.L102:
 1409 0020 00000000 		.word	CapSense_dsFlash
 1410              		.cfi_endproc
 1411              	.LFE19:
 1412              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1413              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1414              		.align	2
 1415              		.global	CapSense_SsInitialize
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	CapSense_SsInitialize, %function
 1419              	CapSense_SsInitialize:
 1420              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1421              		.loc 1 517 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425 0000 10B5     		push	{r4, lr}
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 4, -8
 1428              		.cfi_offset 14, -4
 1429              	.LVL141:
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1430              		.loc 1 551 0
 1431 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1432              	.LVL142:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1433              		.loc 1 556 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 78


 1434 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1435              	.LVL143:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1436              		.loc 1 561 0
 1437 000a FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1438              	.LVL144:
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 1439              		.loc 1 568 0
 1440 000e FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1441              	.LVL145:
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1442              		.loc 1 569 0
 1443 0012 0120     		movs	r0, #1
 1444 0014 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1445              	.LVL146:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1446              		.loc 1 584 0
 1447 0018 0020     		movs	r0, #0
 1448              		@ sp needed
 1449 001a 10BD     		pop	{r4, pc}
 1450              		.cfi_endproc
 1451              	.LFE4:
 1452              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1453              		.comm	CapSense_curSnsIOPtr,4,4
 1454              		.comm	CapSense_curRamSnsPtr,4,4
 1455              		.global	CapSense_requestScanAllWidget
 1456              		.global	CapSense_sensorIndex
 1457              		.global	CapSense_widgetIndex
 1458              		.global	CapSense_scanFreqIndex
 1459              		.global	CapSense_currentSenseMethod
 1460              		.section	.rodata
 1461              		.type	CapSense_scanFreqIndex, %object
 1462              		.size	CapSense_scanFreqIndex, 1
 1463              	CapSense_scanFreqIndex:
 1464 0000 00       		.space	1
 1465              		.bss
 1466              		.set	.LANCHOR0,. + 0
 1467              		.type	CapSense_currentSenseMethod, %object
 1468              		.size	CapSense_currentSenseMethod, 1
 1469              	CapSense_currentSenseMethod:
 1470 0000 00       		.space	1
 1471              		.type	CapSense_requestScanAllWidget, %object
 1472              		.size	CapSense_requestScanAllWidget, 1
 1473              	CapSense_requestScanAllWidget:
 1474 0001 00       		.space	1
 1475              		.type	CapSense_sensorIndex, %object
 1476              		.size	CapSense_sensorIndex, 1
 1477              	CapSense_sensorIndex:
 1478 0002 00       		.space	1
 1479              		.type	CapSense_widgetIndex, %object
 1480              		.size	CapSense_widgetIndex, 1
 1481              	CapSense_widgetIndex:
 1482 0003 00       		.space	1
 1483              		.text
 1484              	.Letext0:
 1485              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1486              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 79


 1487              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1488              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1489              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1490              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1491              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1492              		.section	.debug_info,"",%progbits
 1493              	.Ldebug_info0:
 1494 0000 02100000 		.4byte	0x1002
 1495 0004 0400     		.2byte	0x4
 1496 0006 00000000 		.4byte	.Ldebug_abbrev0
 1497 000a 04       		.byte	0x4
 1498 000b 01       		.uleb128 0x1
 1499 000c 9D020000 		.4byte	.LASF191
 1500 0010 0C       		.byte	0xc
 1501 0011 AE080000 		.4byte	.LASF192
 1502 0015 E3040000 		.4byte	.LASF193
 1503 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1504 001d 00000000 		.4byte	0
 1505 0021 00000000 		.4byte	.Ldebug_line0
 1506 0025 02       		.uleb128 0x2
 1507 0026 01       		.byte	0x1
 1508 0027 06       		.byte	0x6
 1509 0028 250B0000 		.4byte	.LASF0
 1510 002c 02       		.uleb128 0x2
 1511 002d 01       		.byte	0x1
 1512 002e 08       		.byte	0x8
 1513 002f EC090000 		.4byte	.LASF1
 1514 0033 02       		.uleb128 0x2
 1515 0034 02       		.byte	0x2
 1516 0035 05       		.byte	0x5
 1517 0036 A5070000 		.4byte	.LASF2
 1518 003a 02       		.uleb128 0x2
 1519 003b 02       		.byte	0x2
 1520 003c 07       		.byte	0x7
 1521 003d 4D0B0000 		.4byte	.LASF3
 1522 0041 02       		.uleb128 0x2
 1523 0042 04       		.byte	0x4
 1524 0043 05       		.byte	0x5
 1525 0044 DD070000 		.4byte	.LASF4
 1526 0048 02       		.uleb128 0x2
 1527 0049 04       		.byte	0x4
 1528 004a 07       		.byte	0x7
 1529 004b 47090000 		.4byte	.LASF5
 1530 004f 02       		.uleb128 0x2
 1531 0050 08       		.byte	0x8
 1532 0051 05       		.byte	0x5
 1533 0052 38050000 		.4byte	.LASF6
 1534 0056 02       		.uleb128 0x2
 1535 0057 08       		.byte	0x8
 1536 0058 07       		.byte	0x7
 1537 0059 27020000 		.4byte	.LASF7
 1538 005d 03       		.uleb128 0x3
 1539 005e 04       		.byte	0x4
 1540 005f 05       		.byte	0x5
 1541 0060 696E7400 		.ascii	"int\000"
 1542 0064 02       		.uleb128 0x2
 1543 0065 04       		.byte	0x4
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 80


 1544 0066 07       		.byte	0x7
 1545 0067 AF000000 		.4byte	.LASF8
 1546 006b 04       		.uleb128 0x4
 1547 006c BD0B0000 		.4byte	.LASF9
 1548 0070 02       		.byte	0x2
 1549 0071 E401     		.2byte	0x1e4
 1550 0073 2C000000 		.4byte	0x2c
 1551 0077 04       		.uleb128 0x4
 1552 0078 31040000 		.4byte	.LASF10
 1553 007c 02       		.byte	0x2
 1554 007d E501     		.2byte	0x1e5
 1555 007f 3A000000 		.4byte	0x3a
 1556 0083 04       		.uleb128 0x4
 1557 0084 4D060000 		.4byte	.LASF11
 1558 0088 02       		.byte	0x2
 1559 0089 E601     		.2byte	0x1e6
 1560 008b 48000000 		.4byte	0x48
 1561 008f 02       		.uleb128 0x2
 1562 0090 04       		.byte	0x4
 1563 0091 04       		.byte	0x4
 1564 0092 E0010000 		.4byte	.LASF12
 1565 0096 02       		.uleb128 0x2
 1566 0097 08       		.byte	0x8
 1567 0098 04       		.byte	0x4
 1568 0099 C30B0000 		.4byte	.LASF13
 1569 009d 02       		.uleb128 0x2
 1570 009e 01       		.byte	0x1
 1571 009f 08       		.byte	0x8
 1572 00a0 0B040000 		.4byte	.LASF14
 1573 00a4 04       		.uleb128 0x4
 1574 00a5 E3090000 		.4byte	.LASF15
 1575 00a9 02       		.byte	0x2
 1576 00aa 8602     		.2byte	0x286
 1577 00ac 48000000 		.4byte	0x48
 1578 00b0 04       		.uleb128 0x4
 1579 00b1 F8000000 		.4byte	.LASF16
 1580 00b5 02       		.byte	0x2
 1581 00b6 8E02     		.2byte	0x28e
 1582 00b8 BC000000 		.4byte	0xbc
 1583 00bc 05       		.uleb128 0x5
 1584 00bd 6B000000 		.4byte	0x6b
 1585 00c1 04       		.uleb128 0x4
 1586 00c2 F1060000 		.4byte	.LASF17
 1587 00c6 02       		.byte	0x2
 1588 00c7 9002     		.2byte	0x290
 1589 00c9 CD000000 		.4byte	0xcd
 1590 00cd 05       		.uleb128 0x5
 1591 00ce 83000000 		.4byte	0x83
 1592 00d2 04       		.uleb128 0x4
 1593 00d3 1B060000 		.4byte	.LASF18
 1594 00d7 02       		.byte	0x2
 1595 00d8 A002     		.2byte	0x2a0
 1596 00da DE000000 		.4byte	0xde
 1597 00de 06       		.uleb128 0x6
 1598 00df 04       		.byte	0x4
 1599 00e0 E4000000 		.4byte	0xe4
 1600 00e4 07       		.uleb128 0x7
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 81


 1601 00e5 04       		.uleb128 0x4
 1602 00e6 420A0000 		.4byte	.LASF19
 1603 00ea 03       		.byte	0x3
 1604 00eb 0101     		.2byte	0x101
 1605 00ed 77000000 		.4byte	0x77
 1606 00f1 04       		.uleb128 0x4
 1607 00f2 80040000 		.4byte	.LASF20
 1608 00f6 03       		.byte	0x3
 1609 00f7 0501     		.2byte	0x105
 1610 00f9 6B000000 		.4byte	0x6b
 1611 00fd 08       		.uleb128 0x8
 1612 00fe 1C       		.byte	0x1c
 1613 00ff 04       		.byte	0x4
 1614 0100 2F       		.byte	0x2f
 1615 0101 7E010000 		.4byte	0x17e
 1616 0105 09       		.uleb128 0x9
 1617 0106 E1060000 		.4byte	.LASF21
 1618 010a 04       		.byte	0x4
 1619 010b 34       		.byte	0x34
 1620 010c 77000000 		.4byte	0x77
 1621 0110 00       		.byte	0
 1622 0111 09       		.uleb128 0x9
 1623 0112 60090000 		.4byte	.LASF22
 1624 0116 04       		.byte	0x4
 1625 0117 39       		.byte	0x39
 1626 0118 77000000 		.4byte	0x77
 1627 011c 02       		.byte	0x2
 1628 011d 09       		.uleb128 0x9
 1629 011e 07010000 		.4byte	.LASF23
 1630 0122 04       		.byte	0x4
 1631 0123 3E       		.byte	0x3e
 1632 0124 77000000 		.4byte	0x77
 1633 0128 04       		.byte	0x4
 1634 0129 09       		.uleb128 0x9
 1635 012a 7F080000 		.4byte	.LASF24
 1636 012e 04       		.byte	0x4
 1637 012f 43       		.byte	0x43
 1638 0130 77000000 		.4byte	0x77
 1639 0134 06       		.byte	0x6
 1640 0135 09       		.uleb128 0x9
 1641 0136 260A0000 		.4byte	.LASF25
 1642 013a 04       		.byte	0x4
 1643 013b 48       		.byte	0x48
 1644 013c 83000000 		.4byte	0x83
 1645 0140 08       		.byte	0x8
 1646 0141 09       		.uleb128 0x9
 1647 0142 2B010000 		.4byte	.LASF26
 1648 0146 04       		.byte	0x4
 1649 0147 4D       		.byte	0x4d
 1650 0148 77000000 		.4byte	0x77
 1651 014c 0C       		.byte	0xc
 1652 014d 09       		.uleb128 0x9
 1653 014e 76030000 		.4byte	.LASF27
 1654 0152 04       		.byte	0x4
 1655 0153 52       		.byte	0x52
 1656 0154 77000000 		.4byte	0x77
 1657 0158 0E       		.byte	0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 82


 1658 0159 09       		.uleb128 0x9
 1659 015a 9A060000 		.4byte	.LASF28
 1660 015e 04       		.byte	0x4
 1661 015f 57       		.byte	0x57
 1662 0160 7E010000 		.4byte	0x17e
 1663 0164 10       		.byte	0x10
 1664 0165 09       		.uleb128 0x9
 1665 0166 8D030000 		.4byte	.LASF29
 1666 016a 04       		.byte	0x4
 1667 016b 5C       		.byte	0x5c
 1668 016c 7E010000 		.4byte	0x17e
 1669 0170 14       		.byte	0x14
 1670 0171 09       		.uleb128 0x9
 1671 0172 79060000 		.4byte	.LASF30
 1672 0176 04       		.byte	0x4
 1673 0177 61       		.byte	0x61
 1674 0178 6B000000 		.4byte	0x6b
 1675 017c 18       		.byte	0x18
 1676 017d 00       		.byte	0
 1677 017e 06       		.uleb128 0x6
 1678 017f 04       		.byte	0x4
 1679 0180 77000000 		.4byte	0x77
 1680 0184 0A       		.uleb128 0xa
 1681 0185 600B0000 		.4byte	.LASF31
 1682 0189 04       		.byte	0x4
 1683 018a 63       		.byte	0x63
 1684 018b FD000000 		.4byte	0xfd
 1685 018f 08       		.uleb128 0x8
 1686 0190 0C       		.byte	0xc
 1687 0191 04       		.byte	0x4
 1688 0192 6E       		.byte	0x6e
 1689 0193 EC010000 		.4byte	0x1ec
 1690 0197 09       		.uleb128 0x9
 1691 0198 D80B0000 		.4byte	.LASF32
 1692 019c 04       		.byte	0x4
 1693 019d 73       		.byte	0x73
 1694 019e 77000000 		.4byte	0x77
 1695 01a2 00       		.byte	0
 1696 01a3 09       		.uleb128 0x9
 1697 01a4 DF0B0000 		.4byte	.LASF33
 1698 01a8 04       		.byte	0x4
 1699 01a9 77       		.byte	0x77
 1700 01aa 77000000 		.4byte	0x77
 1701 01ae 02       		.byte	0x2
 1702 01af 09       		.uleb128 0x9
 1703 01b0 E60B0000 		.4byte	.LASF34
 1704 01b4 04       		.byte	0x4
 1705 01b5 7B       		.byte	0x7b
 1706 01b6 77000000 		.4byte	0x77
 1707 01ba 04       		.byte	0x4
 1708 01bb 09       		.uleb128 0x9
 1709 01bc ED0B0000 		.4byte	.LASF35
 1710 01c0 04       		.byte	0x4
 1711 01c1 7F       		.byte	0x7f
 1712 01c2 77000000 		.4byte	0x77
 1713 01c6 06       		.byte	0x6
 1714 01c7 09       		.uleb128 0x9
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 83


 1715 01c8 F40B0000 		.4byte	.LASF36
 1716 01cc 04       		.byte	0x4
 1717 01cd 83       		.byte	0x83
 1718 01ce 77000000 		.4byte	0x77
 1719 01d2 08       		.byte	0x8
 1720 01d3 09       		.uleb128 0x9
 1721 01d4 FB0B0000 		.4byte	.LASF37
 1722 01d8 04       		.byte	0x4
 1723 01d9 87       		.byte	0x87
 1724 01da 6B000000 		.4byte	0x6b
 1725 01de 0A       		.byte	0xa
 1726 01df 09       		.uleb128 0x9
 1727 01e0 020C0000 		.4byte	.LASF38
 1728 01e4 04       		.byte	0x4
 1729 01e5 8B       		.byte	0x8b
 1730 01e6 6B000000 		.4byte	0x6b
 1731 01ea 0B       		.byte	0xb
 1732 01eb 00       		.byte	0
 1733 01ec 0A       		.uleb128 0xa
 1734 01ed CF030000 		.4byte	.LASF39
 1735 01f1 04       		.byte	0x4
 1736 01f2 8C       		.byte	0x8c
 1737 01f3 8F010000 		.4byte	0x18f
 1738 01f7 0B       		.uleb128 0xb
 1739 01f8 01       		.byte	0x1
 1740 01f9 2C000000 		.4byte	0x2c
 1741 01fd 05       		.byte	0x5
 1742 01fe 6F       		.byte	0x6f
 1743 01ff 22020000 		.4byte	0x222
 1744 0203 0C       		.uleb128 0xc
 1745 0204 9A000000 		.4byte	.LASF40
 1746 0208 00       		.byte	0
 1747 0209 0C       		.uleb128 0xc
 1748 020a F6080000 		.4byte	.LASF41
 1749 020e 01       		.byte	0x1
 1750 020f 0C       		.uleb128 0xc
 1751 0210 FF070000 		.4byte	.LASF42
 1752 0214 02       		.byte	0x2
 1753 0215 0C       		.uleb128 0xc
 1754 0216 6B0A0000 		.4byte	.LASF43
 1755 021a 03       		.byte	0x3
 1756 021b 0C       		.uleb128 0xc
 1757 021c B9060000 		.4byte	.LASF44
 1758 0220 04       		.byte	0x4
 1759 0221 00       		.byte	0
 1760 0222 0A       		.uleb128 0xa
 1761 0223 B9040000 		.4byte	.LASF45
 1762 0227 05       		.byte	0x5
 1763 0228 75       		.byte	0x75
 1764 0229 F7010000 		.4byte	0x1f7
 1765 022d 08       		.uleb128 0x8
 1766 022e 12       		.byte	0x12
 1767 022f 05       		.byte	0x5
 1768 0230 8D       		.byte	0x8d
 1769 0231 C6020000 		.4byte	0x2c6
 1770 0235 09       		.uleb128 0x9
 1771 0236 55040000 		.4byte	.LASF46
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 84


 1772 023a 05       		.byte	0x5
 1773 023b 92       		.byte	0x92
 1774 023c 77000000 		.4byte	0x77
 1775 0240 00       		.byte	0
 1776 0241 09       		.uleb128 0x9
 1777 0242 D2090000 		.4byte	.LASF47
 1778 0246 05       		.byte	0x5
 1779 0247 97       		.byte	0x97
 1780 0248 E5000000 		.4byte	0xe5
 1781 024c 02       		.byte	0x2
 1782 024d 09       		.uleb128 0x9
 1783 024e 03040000 		.4byte	.LASF48
 1784 0252 05       		.byte	0x5
 1785 0253 9C       		.byte	0x9c
 1786 0254 6B000000 		.4byte	0x6b
 1787 0258 04       		.byte	0x4
 1788 0259 09       		.uleb128 0x9
 1789 025a 07060000 		.4byte	.LASF49
 1790 025e 05       		.byte	0x5
 1791 025f A1       		.byte	0xa1
 1792 0260 6B000000 		.4byte	0x6b
 1793 0264 05       		.byte	0x5
 1794 0265 09       		.uleb128 0x9
 1795 0266 94030000 		.4byte	.LASF50
 1796 026a 05       		.byte	0x5
 1797 026b A7       		.byte	0xa7
 1798 026c 6B000000 		.4byte	0x6b
 1799 0270 06       		.byte	0x6
 1800 0271 09       		.uleb128 0x9
 1801 0272 67050000 		.4byte	.LASF51
 1802 0276 05       		.byte	0x5
 1803 0277 AD       		.byte	0xad
 1804 0278 6B000000 		.4byte	0x6b
 1805 027c 07       		.byte	0x7
 1806 027d 09       		.uleb128 0x9
 1807 027e B8030000 		.4byte	.LASF52
 1808 0282 05       		.byte	0x5
 1809 0283 B4       		.byte	0xb4
 1810 0284 F1000000 		.4byte	0xf1
 1811 0288 08       		.byte	0x8
 1812 0289 09       		.uleb128 0x9
 1813 028a 65090000 		.4byte	.LASF53
 1814 028e 05       		.byte	0x5
 1815 028f BB       		.byte	0xbb
 1816 0290 C6020000 		.4byte	0x2c6
 1817 0294 09       		.byte	0x9
 1818 0295 09       		.uleb128 0x9
 1819 0296 D40A0000 		.4byte	.LASF54
 1820 029a 05       		.byte	0x5
 1821 029b C3       		.byte	0xc3
 1822 029c 77000000 		.4byte	0x77
 1823 02a0 0A       		.byte	0xa
 1824 02a1 09       		.uleb128 0x9
 1825 02a2 56070000 		.4byte	.LASF55
 1826 02a6 05       		.byte	0x5
 1827 02a7 C8       		.byte	0xc8
 1828 02a8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 85


 1829 02ac 0C       		.byte	0xc
 1830 02ad 09       		.uleb128 0x9
 1831 02ae 7F080000 		.4byte	.LASF24
 1832 02b2 05       		.byte	0x5
 1833 02b3 CE       		.byte	0xce
 1834 02b4 77000000 		.4byte	0x77
 1835 02b8 0E       		.byte	0xe
 1836 02b9 09       		.uleb128 0x9
 1837 02ba 8D030000 		.4byte	.LASF29
 1838 02be 05       		.byte	0x5
 1839 02bf D3       		.byte	0xd3
 1840 02c0 77000000 		.4byte	0x77
 1841 02c4 10       		.byte	0x10
 1842 02c5 00       		.byte	0
 1843 02c6 0D       		.uleb128 0xd
 1844 02c7 6B000000 		.4byte	0x6b
 1845 02cb D6020000 		.4byte	0x2d6
 1846 02cf 0E       		.uleb128 0xe
 1847 02d0 D6020000 		.4byte	0x2d6
 1848 02d4 00       		.byte	0
 1849 02d5 00       		.byte	0
 1850 02d6 02       		.uleb128 0x2
 1851 02d7 04       		.byte	0x4
 1852 02d8 07       		.byte	0x7
 1853 02d9 36090000 		.4byte	.LASF56
 1854 02dd 0A       		.uleb128 0xa
 1855 02de 28060000 		.4byte	.LASF57
 1856 02e2 05       		.byte	0x5
 1857 02e3 D4       		.byte	0xd4
 1858 02e4 2D020000 		.4byte	0x22d
 1859 02e8 08       		.uleb128 0x8
 1860 02e9 14       		.byte	0x14
 1861 02ea 05       		.byte	0x5
 1862 02eb D9       		.byte	0xd9
 1863 02ec 94030000 		.4byte	0x394
 1864 02f0 09       		.uleb128 0x9
 1865 02f1 55040000 		.4byte	.LASF46
 1866 02f5 05       		.byte	0x5
 1867 02f6 DE       		.byte	0xde
 1868 02f7 77000000 		.4byte	0x77
 1869 02fb 00       		.byte	0
 1870 02fc 09       		.uleb128 0x9
 1871 02fd D2090000 		.4byte	.LASF47
 1872 0301 05       		.byte	0x5
 1873 0302 E3       		.byte	0xe3
 1874 0303 E5000000 		.4byte	0xe5
 1875 0307 02       		.byte	0x2
 1876 0308 09       		.uleb128 0x9
 1877 0309 03040000 		.4byte	.LASF48
 1878 030d 05       		.byte	0x5
 1879 030e E8       		.byte	0xe8
 1880 030f 6B000000 		.4byte	0x6b
 1881 0313 04       		.byte	0x4
 1882 0314 09       		.uleb128 0x9
 1883 0315 07060000 		.4byte	.LASF49
 1884 0319 05       		.byte	0x5
 1885 031a ED       		.byte	0xed
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 86


 1886 031b 6B000000 		.4byte	0x6b
 1887 031f 05       		.byte	0x5
 1888 0320 09       		.uleb128 0x9
 1889 0321 94030000 		.4byte	.LASF50
 1890 0325 05       		.byte	0x5
 1891 0326 F3       		.byte	0xf3
 1892 0327 6B000000 		.4byte	0x6b
 1893 032b 06       		.byte	0x6
 1894 032c 09       		.uleb128 0x9
 1895 032d 67050000 		.4byte	.LASF51
 1896 0331 05       		.byte	0x5
 1897 0332 F9       		.byte	0xf9
 1898 0333 6B000000 		.4byte	0x6b
 1899 0337 07       		.byte	0x7
 1900 0338 0F       		.uleb128 0xf
 1901 0339 B8030000 		.4byte	.LASF52
 1902 033d 05       		.byte	0x5
 1903 033e 0001     		.2byte	0x100
 1904 0340 F1000000 		.4byte	0xf1
 1905 0344 08       		.byte	0x8
 1906 0345 0F       		.uleb128 0xf
 1907 0346 65090000 		.4byte	.LASF53
 1908 034a 05       		.byte	0x5
 1909 034b 0701     		.2byte	0x107
 1910 034d C6020000 		.4byte	0x2c6
 1911 0351 09       		.byte	0x9
 1912 0352 0F       		.uleb128 0xf
 1913 0353 D40A0000 		.4byte	.LASF54
 1914 0357 05       		.byte	0x5
 1915 0358 0F01     		.2byte	0x10f
 1916 035a 77000000 		.4byte	0x77
 1917 035e 0A       		.byte	0xa
 1918 035f 0F       		.uleb128 0xf
 1919 0360 56070000 		.4byte	.LASF55
 1920 0364 05       		.byte	0x5
 1921 0365 1401     		.2byte	0x114
 1922 0367 6B000000 		.4byte	0x6b
 1923 036b 0C       		.byte	0xc
 1924 036c 0F       		.uleb128 0xf
 1925 036d 7F080000 		.4byte	.LASF24
 1926 0371 05       		.byte	0x5
 1927 0372 1A01     		.2byte	0x11a
 1928 0374 77000000 		.4byte	0x77
 1929 0378 0E       		.byte	0xe
 1930 0379 0F       		.uleb128 0xf
 1931 037a 8D030000 		.4byte	.LASF29
 1932 037e 05       		.byte	0x5
 1933 037f 1F01     		.2byte	0x11f
 1934 0381 77000000 		.4byte	0x77
 1935 0385 10       		.byte	0x10
 1936 0386 0F       		.uleb128 0xf
 1937 0387 860C0000 		.4byte	.LASF58
 1938 038b 05       		.byte	0x5
 1939 038c 2401     		.2byte	0x124
 1940 038e 94030000 		.4byte	0x394
 1941 0392 12       		.byte	0x12
 1942 0393 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 87


 1943 0394 0D       		.uleb128 0xd
 1944 0395 77000000 		.4byte	0x77
 1945 0399 A4030000 		.4byte	0x3a4
 1946 039d 0E       		.uleb128 0xe
 1947 039e D6020000 		.4byte	0x2d6
 1948 03a2 00       		.byte	0
 1949 03a3 00       		.byte	0
 1950 03a4 04       		.uleb128 0x4
 1951 03a5 D8080000 		.4byte	.LASF59
 1952 03a9 05       		.byte	0x5
 1953 03aa 2501     		.2byte	0x125
 1954 03ac E8020000 		.4byte	0x2e8
 1955 03b0 10       		.uleb128 0x10
 1956 03b1 14       		.byte	0x14
 1957 03b2 05       		.byte	0x5
 1958 03b3 2B01     		.2byte	0x12b
 1959 03b5 C7030000 		.4byte	0x3c7
 1960 03b9 0F       		.uleb128 0xf
 1961 03ba 8E0A0000 		.4byte	.LASF60
 1962 03be 05       		.byte	0x5
 1963 03bf 3001     		.2byte	0x130
 1964 03c1 A4030000 		.4byte	0x3a4
 1965 03c5 00       		.byte	0
 1966 03c6 00       		.byte	0
 1967 03c7 04       		.uleb128 0x4
 1968 03c8 72010000 		.4byte	.LASF61
 1969 03cc 05       		.byte	0x5
 1970 03cd 3101     		.2byte	0x131
 1971 03cf B0030000 		.4byte	0x3b0
 1972 03d3 10       		.uleb128 0x10
 1973 03d4 0A       		.byte	0xa
 1974 03d5 05       		.byte	0x5
 1975 03d6 3701     		.2byte	0x137
 1976 03d8 2B040000 		.4byte	0x42b
 1977 03dc 11       		.uleb128 0x11
 1978 03dd 72617700 		.ascii	"raw\000"
 1979 03e1 05       		.byte	0x5
 1980 03e2 3C01     		.2byte	0x13c
 1981 03e4 94030000 		.4byte	0x394
 1982 03e8 00       		.byte	0
 1983 03e9 0F       		.uleb128 0xf
 1984 03ea 480B0000 		.4byte	.LASF62
 1985 03ee 05       		.byte	0x5
 1986 03ef 4101     		.2byte	0x141
 1987 03f1 94030000 		.4byte	0x394
 1988 03f5 02       		.byte	0x2
 1989 03f6 0F       		.uleb128 0xf
 1990 03f7 DB090000 		.4byte	.LASF63
 1991 03fb 05       		.byte	0x5
 1992 03fc 4701     		.2byte	0x147
 1993 03fe C6020000 		.4byte	0x2c6
 1994 0402 04       		.byte	0x4
 1995 0403 0F       		.uleb128 0xf
 1996 0404 F1070000 		.4byte	.LASF64
 1997 0408 05       		.byte	0x5
 1998 0409 4C01     		.2byte	0x14c
 1999 040b E5000000 		.4byte	0xe5
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 88


 2000 040f 06       		.byte	0x6
 2001 0410 0F       		.uleb128 0xf
 2002 0411 CA0B0000 		.4byte	.LASF65
 2003 0415 05       		.byte	0x5
 2004 0416 5101     		.2byte	0x151
 2005 0418 2B040000 		.4byte	0x42b
 2006 041c 08       		.byte	0x8
 2007 041d 0F       		.uleb128 0xf
 2008 041e D4040000 		.4byte	.LASF66
 2009 0422 05       		.byte	0x5
 2010 0423 5601     		.2byte	0x156
 2011 0425 C6020000 		.4byte	0x2c6
 2012 0429 09       		.byte	0x9
 2013 042a 00       		.byte	0
 2014 042b 0D       		.uleb128 0xd
 2015 042c F1000000 		.4byte	0xf1
 2016 0430 3B040000 		.4byte	0x43b
 2017 0434 0E       		.uleb128 0xe
 2018 0435 D6020000 		.4byte	0x2d6
 2019 0439 00       		.byte	0
 2020 043a 00       		.byte	0
 2021 043b 04       		.uleb128 0x4
 2022 043c 44030000 		.4byte	.LASF67
 2023 0440 05       		.byte	0x5
 2024 0441 5701     		.2byte	0x157
 2025 0443 D3030000 		.4byte	0x3d3
 2026 0447 10       		.uleb128 0x10
 2027 0448 32       		.byte	0x32
 2028 0449 05       		.byte	0x5
 2029 044a 5D01     		.2byte	0x15d
 2030 044c 5E040000 		.4byte	0x45e
 2031 0450 0F       		.uleb128 0xf
 2032 0451 8E0A0000 		.4byte	.LASF60
 2033 0455 05       		.byte	0x5
 2034 0456 6201     		.2byte	0x162
 2035 0458 5E040000 		.4byte	0x45e
 2036 045c 00       		.byte	0
 2037 045d 00       		.byte	0
 2038 045e 0D       		.uleb128 0xd
 2039 045f 3B040000 		.4byte	0x43b
 2040 0463 6E040000 		.4byte	0x46e
 2041 0467 0E       		.uleb128 0xe
 2042 0468 D6020000 		.4byte	0x2d6
 2043 046c 04       		.byte	0x4
 2044 046d 00       		.byte	0
 2045 046e 04       		.uleb128 0x4
 2046 046f 8F0C0000 		.4byte	.LASF68
 2047 0473 05       		.byte	0x5
 2048 0474 6301     		.2byte	0x163
 2049 0476 47040000 		.4byte	0x447
 2050 047a 10       		.uleb128 0x10
 2051 047b 6C       		.byte	0x6c
 2052 047c 05       		.byte	0x5
 2053 047d 6901     		.2byte	0x169
 2054 047f 61050000 		.4byte	0x561
 2055 0483 0F       		.uleb128 0xf
 2056 0484 0A070000 		.4byte	.LASF69
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 89


 2057 0488 05       		.byte	0x5
 2058 0489 7001     		.2byte	0x170
 2059 048b 77000000 		.4byte	0x77
 2060 048f 00       		.byte	0
 2061 0490 0F       		.uleb128 0xf
 2062 0491 250C0000 		.4byte	.LASF70
 2063 0495 05       		.byte	0x5
 2064 0496 7501     		.2byte	0x175
 2065 0498 77000000 		.4byte	0x77
 2066 049c 02       		.byte	0x2
 2067 049d 0F       		.uleb128 0xf
 2068 049e C8000000 		.4byte	.LASF71
 2069 04a2 05       		.byte	0x5
 2070 04a3 7A01     		.2byte	0x17a
 2071 04a5 77000000 		.4byte	0x77
 2072 04a9 04       		.byte	0x4
 2073 04aa 0F       		.uleb128 0xf
 2074 04ab F6070000 		.4byte	.LASF72
 2075 04af 05       		.byte	0x5
 2076 04b0 8001     		.2byte	0x180
 2077 04b2 77000000 		.4byte	0x77
 2078 04b6 06       		.byte	0x6
 2079 04b7 0F       		.uleb128 0xf
 2080 04b8 BC000000 		.4byte	.LASF73
 2081 04bc 05       		.byte	0x5
 2082 04bd 8501     		.2byte	0x185
 2083 04bf 77000000 		.4byte	0x77
 2084 04c3 08       		.byte	0x8
 2085 04c4 0F       		.uleb128 0xf
 2086 04c5 60040000 		.4byte	.LASF74
 2087 04c9 05       		.byte	0x5
 2088 04ca 8A01     		.2byte	0x18a
 2089 04cc CD000000 		.4byte	0xcd
 2090 04d0 0C       		.byte	0xc
 2091 04d1 0F       		.uleb128 0xf
 2092 04d2 E6070000 		.4byte	.LASF75
 2093 04d6 05       		.byte	0x5
 2094 04d7 9001     		.2byte	0x190
 2095 04d9 61050000 		.4byte	0x561
 2096 04dd 10       		.byte	0x10
 2097 04de 0F       		.uleb128 0xf
 2098 04df 89080000 		.4byte	.LASF76
 2099 04e3 05       		.byte	0x5
 2100 04e4 9701     		.2byte	0x197
 2101 04e6 61050000 		.4byte	0x561
 2102 04ea 14       		.byte	0x14
 2103 04eb 0F       		.uleb128 0xf
 2104 04ec 4C070000 		.4byte	.LASF77
 2105 04f0 05       		.byte	0x5
 2106 04f1 A701     		.2byte	0x1a7
 2107 04f3 C6020000 		.4byte	0x2c6
 2108 04f7 18       		.byte	0x18
 2109 04f8 0F       		.uleb128 0xf
 2110 04f9 10060000 		.4byte	.LASF78
 2111 04fd 05       		.byte	0x5
 2112 04fe AD01     		.2byte	0x1ad
 2113 0500 77000000 		.4byte	0x77
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 90


 2114 0504 1A       		.byte	0x1a
 2115 0505 0F       		.uleb128 0xf
 2116 0506 3A030000 		.4byte	.LASF79
 2117 050a 05       		.byte	0x5
 2118 050b B201     		.2byte	0x1b2
 2119 050d 6B000000 		.4byte	0x6b
 2120 0511 1C       		.byte	0x1c
 2121 0512 0F       		.uleb128 0xf
 2122 0513 8A050000 		.4byte	.LASF80
 2123 0517 05       		.byte	0x5
 2124 0518 B701     		.2byte	0x1b7
 2125 051a C7030000 		.4byte	0x3c7
 2126 051e 1E       		.byte	0x1e
 2127 051f 0F       		.uleb128 0xf
 2128 0520 1F020000 		.4byte	.LASF81
 2129 0524 05       		.byte	0x5
 2130 0525 BC01     		.2byte	0x1bc
 2131 0527 6E040000 		.4byte	0x46e
 2132 052b 32       		.byte	0x32
 2133 052c 0F       		.uleb128 0xf
 2134 052d 8A000000 		.4byte	.LASF82
 2135 0531 05       		.byte	0x5
 2136 0532 C101     		.2byte	0x1c1
 2137 0534 6B000000 		.4byte	0x6b
 2138 0538 64       		.byte	0x64
 2139 0539 0F       		.uleb128 0xf
 2140 053a 6C020000 		.4byte	.LASF83
 2141 053e 05       		.byte	0x5
 2142 053f C601     		.2byte	0x1c6
 2143 0541 6B000000 		.4byte	0x6b
 2144 0545 65       		.byte	0x65
 2145 0546 0F       		.uleb128 0xf
 2146 0547 F7060000 		.4byte	.LASF84
 2147 054b 05       		.byte	0x5
 2148 054c CB01     		.2byte	0x1cb
 2149 054e 77000000 		.4byte	0x77
 2150 0552 66       		.byte	0x66
 2151 0553 0F       		.uleb128 0xf
 2152 0554 E3050000 		.4byte	.LASF85
 2153 0558 05       		.byte	0x5
 2154 0559 D001     		.2byte	0x1d0
 2155 055b 94030000 		.4byte	0x394
 2156 055f 68       		.byte	0x68
 2157 0560 00       		.byte	0
 2158 0561 0D       		.uleb128 0xd
 2159 0562 83000000 		.4byte	0x83
 2160 0566 71050000 		.4byte	0x571
 2161 056a 0E       		.uleb128 0xe
 2162 056b D6020000 		.4byte	0x2d6
 2163 056f 00       		.byte	0
 2164 0570 00       		.byte	0
 2165 0571 04       		.uleb128 0x4
 2166 0572 AF070000 		.4byte	.LASF86
 2167 0576 05       		.byte	0x5
 2168 0577 D101     		.2byte	0x1d1
 2169 0579 7A040000 		.4byte	0x47a
 2170 057d 10       		.uleb128 0x10
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 91


 2171 057e 1C       		.byte	0x1c
 2172 057f 05       		.byte	0x5
 2173 0580 D701     		.2byte	0x1d7
 2174 0582 FC050000 		.4byte	0x5fc
 2175 0586 0F       		.uleb128 0xf
 2176 0587 44060000 		.4byte	.LASF87
 2177 058b 05       		.byte	0x5
 2178 058c DC01     		.2byte	0x1dc
 2179 058e FC050000 		.4byte	0x5fc
 2180 0592 00       		.byte	0
 2181 0593 0F       		.uleb128 0xf
 2182 0594 DD040000 		.4byte	.LASF88
 2183 0598 05       		.byte	0x5
 2184 0599 E101     		.2byte	0x1e1
 2185 059b FC050000 		.4byte	0x5fc
 2186 059f 04       		.byte	0x4
 2187 05a0 0F       		.uleb128 0xf
 2188 05a1 80030000 		.4byte	.LASF89
 2189 05a5 05       		.byte	0x5
 2190 05a6 E601     		.2byte	0x1e6
 2191 05a8 FC050000 		.4byte	0x5fc
 2192 05ac 08       		.byte	0x8
 2193 05ad 0F       		.uleb128 0xf
 2194 05ae 1B080000 		.4byte	.LASF90
 2195 05b2 05       		.byte	0x5
 2196 05b3 EB01     		.2byte	0x1eb
 2197 05b5 FC050000 		.4byte	0x5fc
 2198 05b9 0C       		.byte	0xc
 2199 05ba 0F       		.uleb128 0xf
 2200 05bb BE0A0000 		.4byte	.LASF91
 2201 05bf 05       		.byte	0x5
 2202 05c0 F001     		.2byte	0x1f0
 2203 05c2 83000000 		.4byte	0x83
 2204 05c6 10       		.byte	0x10
 2205 05c7 0F       		.uleb128 0xf
 2206 05c8 D0000000 		.4byte	.LASF92
 2207 05cc 05       		.byte	0x5
 2208 05cd F501     		.2byte	0x1f5
 2209 05cf 83000000 		.4byte	0x83
 2210 05d3 14       		.byte	0x14
 2211 05d4 0F       		.uleb128 0xf
 2212 05d5 26040000 		.4byte	.LASF93
 2213 05d9 05       		.byte	0x5
 2214 05da FA01     		.2byte	0x1fa
 2215 05dc 6B000000 		.4byte	0x6b
 2216 05e0 18       		.byte	0x18
 2217 05e1 0F       		.uleb128 0xf
 2218 05e2 3F090000 		.4byte	.LASF94
 2219 05e6 05       		.byte	0x5
 2220 05e7 FF01     		.2byte	0x1ff
 2221 05e9 6B000000 		.4byte	0x6b
 2222 05ed 19       		.byte	0x19
 2223 05ee 0F       		.uleb128 0xf
 2224 05ef E6010000 		.4byte	.LASF95
 2225 05f3 05       		.byte	0x5
 2226 05f4 0402     		.2byte	0x204
 2227 05f6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 92


 2228 05fa 1A       		.byte	0x1a
 2229 05fb 00       		.byte	0
 2230 05fc 06       		.uleb128 0x6
 2231 05fd 04       		.byte	0x4
 2232 05fe C1000000 		.4byte	0xc1
 2233 0602 04       		.uleb128 0x4
 2234 0603 53020000 		.4byte	.LASF96
 2235 0607 05       		.byte	0x5
 2236 0608 0502     		.2byte	0x205
 2237 060a 7D050000 		.4byte	0x57d
 2238 060e 10       		.uleb128 0x10
 2239 060f 2C       		.byte	0x2c
 2240 0610 05       		.byte	0x5
 2241 0611 3802     		.2byte	0x238
 2242 0613 C1060000 		.4byte	0x6c1
 2243 0617 0F       		.uleb128 0xf
 2244 0618 A40B0000 		.4byte	.LASF97
 2245 061c 05       		.byte	0x5
 2246 061d 4102     		.2byte	0x241
 2247 061f C1060000 		.4byte	0x6c1
 2248 0623 00       		.byte	0
 2249 0624 0F       		.uleb128 0xf
 2250 0625 360A0000 		.4byte	.LASF98
 2251 0629 05       		.byte	0x5
 2252 062a 4802     		.2byte	0x248
 2253 062c C8060000 		.4byte	0x6c8
 2254 0630 04       		.byte	0x4
 2255 0631 0F       		.uleb128 0xf
 2256 0632 13070000 		.4byte	.LASF99
 2257 0636 05       		.byte	0x5
 2258 0637 4E02     		.2byte	0x24e
 2259 0639 CA060000 		.4byte	0x6ca
 2260 063d 08       		.byte	0x8
 2261 063e 0F       		.uleb128 0xf
 2262 063f 54060000 		.4byte	.LASF100
 2263 0643 05       		.byte	0x5
 2264 0644 5402     		.2byte	0x254
 2265 0646 C8060000 		.4byte	0x6c8
 2266 064a 0C       		.byte	0xc
 2267 064b 0F       		.uleb128 0xf
 2268 064c 82090000 		.4byte	.LASF101
 2269 0650 05       		.byte	0x5
 2270 0651 5B02     		.2byte	0x25b
 2271 0653 D0060000 		.4byte	0x6d0
 2272 0657 10       		.byte	0x10
 2273 0658 0F       		.uleb128 0xf
 2274 0659 190A0000 		.4byte	.LASF102
 2275 065d 05       		.byte	0x5
 2276 065e 6002     		.2byte	0x260
 2277 0660 83000000 		.4byte	0x83
 2278 0664 14       		.byte	0x14
 2279 0665 0F       		.uleb128 0xf
 2280 0666 C3030000 		.4byte	.LASF103
 2281 066a 05       		.byte	0x5
 2282 066b 6702     		.2byte	0x267
 2283 066d 77000000 		.4byte	0x77
 2284 0671 18       		.byte	0x18
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 93


 2285 0672 0F       		.uleb128 0xf
 2286 0673 8B020000 		.4byte	.LASF104
 2287 0677 05       		.byte	0x5
 2288 0678 6E02     		.2byte	0x26e
 2289 067a 6B000000 		.4byte	0x6b
 2290 067e 1A       		.byte	0x1a
 2291 067f 0F       		.uleb128 0xf
 2292 0680 46050000 		.4byte	.LASF105
 2293 0684 05       		.byte	0x5
 2294 0685 7802     		.2byte	0x278
 2295 0687 6B000000 		.4byte	0x6b
 2296 068b 1B       		.byte	0x1b
 2297 068c 0F       		.uleb128 0xf
 2298 068d 80070000 		.4byte	.LASF106
 2299 0691 05       		.byte	0x5
 2300 0692 7D02     		.2byte	0x27d
 2301 0694 77000000 		.4byte	0x77
 2302 0698 1C       		.byte	0x1c
 2303 0699 0F       		.uleb128 0xf
 2304 069a BE090000 		.4byte	.LASF107
 2305 069e 05       		.byte	0x5
 2306 069f 8602     		.2byte	0x286
 2307 06a1 83000000 		.4byte	0x83
 2308 06a5 20       		.byte	0x20
 2309 06a6 0F       		.uleb128 0xf
 2310 06a7 7C020000 		.4byte	.LASF108
 2311 06ab 05       		.byte	0x5
 2312 06ac 8E02     		.2byte	0x28e
 2313 06ae D6060000 		.4byte	0x6d6
 2314 06b2 24       		.byte	0x24
 2315 06b3 0F       		.uleb128 0xf
 2316 06b4 8E010000 		.4byte	.LASF109
 2317 06b8 05       		.byte	0x5
 2318 06b9 9302     		.2byte	0x293
 2319 06bb 6B000000 		.4byte	0x6b
 2320 06bf 28       		.byte	0x28
 2321 06c0 00       		.byte	0
 2322 06c1 06       		.uleb128 0x6
 2323 06c2 04       		.byte	0x4
 2324 06c3 C7060000 		.4byte	0x6c7
 2325 06c7 12       		.uleb128 0x12
 2326 06c8 13       		.uleb128 0x13
 2327 06c9 04       		.byte	0x4
 2328 06ca 06       		.uleb128 0x6
 2329 06cb 04       		.byte	0x4
 2330 06cc 3B040000 		.4byte	0x43b
 2331 06d0 06       		.uleb128 0x6
 2332 06d1 04       		.byte	0x4
 2333 06d2 6B000000 		.4byte	0x6b
 2334 06d6 06       		.uleb128 0x6
 2335 06d7 04       		.byte	0x4
 2336 06d8 EC010000 		.4byte	0x1ec
 2337 06dc 04       		.uleb128 0x4
 2338 06dd 9F030000 		.4byte	.LASF110
 2339 06e1 05       		.byte	0x5
 2340 06e2 9402     		.2byte	0x294
 2341 06e4 0E060000 		.4byte	0x60e
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 94


 2342 06e8 10       		.uleb128 0x10
 2343 06e9 2C       		.byte	0x2c
 2344 06ea 05       		.byte	0x5
 2345 06eb 9A02     		.2byte	0x29a
 2346 06ed FF060000 		.4byte	0x6ff
 2347 06f1 0F       		.uleb128 0xf
 2348 06f2 AC0C0000 		.4byte	.LASF111
 2349 06f6 05       		.byte	0x5
 2350 06f7 9F02     		.2byte	0x29f
 2351 06f9 FF060000 		.4byte	0x6ff
 2352 06fd 00       		.byte	0
 2353 06fe 00       		.byte	0
 2354 06ff 0D       		.uleb128 0xd
 2355 0700 DC060000 		.4byte	0x6dc
 2356 0704 0F070000 		.4byte	0x70f
 2357 0708 0E       		.uleb128 0xe
 2358 0709 D6020000 		.4byte	0x2d6
 2359 070d 00       		.byte	0
 2360 070e 00       		.byte	0
 2361 070f 04       		.uleb128 0x4
 2362 0710 B0050000 		.4byte	.LASF112
 2363 0714 05       		.byte	0x5
 2364 0715 A002     		.2byte	0x2a0
 2365 0717 E8060000 		.4byte	0x6e8
 2366 071b 02       		.uleb128 0x2
 2367 071c 08       		.byte	0x8
 2368 071d 04       		.byte	0x4
 2369 071e D5060000 		.4byte	.LASF113
 2370 0722 14       		.uleb128 0x14
 2371 0723 38040000 		.4byte	.LASF114
 2372 0727 01       		.byte	0x1
 2373 0728 7107     		.2byte	0x771
 2374 072a 00000000 		.4byte	.LFB17
 2375 072e 2C000000 		.4byte	.LFE17-.LFB17
 2376 0732 01       		.uleb128 0x1
 2377 0733 9C       		.byte	0x9c
 2378 0734 49070000 		.4byte	0x749
 2379 0738 15       		.uleb128 0x15
 2380 0739 FA090000 		.4byte	.LASF117
 2381 073d 01       		.byte	0x1
 2382 073e 7307     		.2byte	0x773
 2383 0740 83000000 		.4byte	0x83
 2384 0744 00000000 		.4byte	.LLST0
 2385 0748 00       		.byte	0
 2386 0749 14       		.uleb128 0x14
 2387 074a 92090000 		.4byte	.LASF115
 2388 074e 01       		.byte	0x1
 2389 074f 9707     		.2byte	0x797
 2390 0751 00000000 		.4byte	.LFB18
 2391 0755 08000000 		.4byte	.LFE18-.LFB18
 2392 0759 01       		.uleb128 0x1
 2393 075a 9C       		.byte	0x9c
 2394 075b 69070000 		.4byte	0x769
 2395 075f 16       		.uleb128 0x16
 2396 0760 06000000 		.4byte	.LVL4
 2397 0764 22070000 		.4byte	0x722
 2398 0768 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 95


 2399 0769 14       		.uleb128 0x14
 2400 076a 3B000000 		.4byte	.LASF116
 2401 076e 01       		.byte	0x1
 2402 076f 0003     		.2byte	0x300
 2403 0771 00000000 		.4byte	.LFB6
 2404 0775 1C000000 		.4byte	.LFE6-.LFB6
 2405 0779 01       		.uleb128 0x1
 2406 077a 9C       		.byte	0x9c
 2407 077b 99070000 		.4byte	0x799
 2408 077f 15       		.uleb128 0x15
 2409 0780 B10B0000 		.4byte	.LASF118
 2410 0784 01       		.byte	0x1
 2411 0785 0203     		.2byte	0x302
 2412 0787 83000000 		.4byte	0x83
 2413 078b 1E000000 		.4byte	.LLST1
 2414 078f 16       		.uleb128 0x16
 2415 0790 10000000 		.4byte	.LVL7
 2416 0794 7A0F0000 		.4byte	0xf7a
 2417 0798 00       		.byte	0
 2418 0799 17       		.uleb128 0x17
 2419 079a 41010000 		.4byte	.LASF194
 2420 079e 01       		.byte	0x1
 2421 079f E9       		.byte	0xe9
 2422 07a0 83000000 		.4byte	0x83
 2423 07a4 00000000 		.4byte	.LFB0
 2424 07a8 10000000 		.4byte	.LFE0-.LFB0
 2425 07ac 01       		.uleb128 0x1
 2426 07ad 9C       		.byte	0x9c
 2427 07ae 18       		.uleb128 0x18
 2428 07af 21080000 		.4byte	.LASF120
 2429 07b3 01       		.byte	0x1
 2430 07b4 1D01     		.2byte	0x11d
 2431 07b6 A4000000 		.4byte	0xa4
 2432 07ba 00000000 		.4byte	.LFB1
 2433 07be 40000000 		.4byte	.LFE1-.LFB1
 2434 07c2 01       		.uleb128 0x1
 2435 07c3 9C       		.byte	0x9c
 2436 07c4 F2070000 		.4byte	0x7f2
 2437 07c8 19       		.uleb128 0x19
 2438 07c9 3B0C0000 		.4byte	.LASF125
 2439 07cd 01       		.byte	0x1
 2440 07ce 1D01     		.2byte	0x11d
 2441 07d0 83000000 		.4byte	0x83
 2442 07d4 3C000000 		.4byte	.LLST2
 2443 07d8 15       		.uleb128 0x15
 2444 07d9 2E0C0000 		.4byte	.LASF119
 2445 07dd 01       		.byte	0x1
 2446 07de 1F01     		.2byte	0x11f
 2447 07e0 A4000000 		.4byte	0xa4
 2448 07e4 5D000000 		.4byte	.LLST3
 2449 07e8 16       		.uleb128 0x16
 2450 07e9 38000000 		.4byte	.LVL10
 2451 07ed 860F0000 		.4byte	0xf86
 2452 07f1 00       		.byte	0
 2453 07f2 18       		.uleb128 0x18
 2454 07f3 C6050000 		.4byte	.LASF121
 2455 07f7 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 96


 2456 07f8 7001     		.2byte	0x170
 2457 07fa A4000000 		.4byte	0xa4
 2458 07fe 00000000 		.4byte	.LFB2
 2459 0802 2C000000 		.4byte	.LFE2-.LFB2
 2460 0806 01       		.uleb128 0x1
 2461 0807 9C       		.byte	0x9c
 2462 0808 26080000 		.4byte	0x826
 2463 080c 15       		.uleb128 0x15
 2464 080d 30000000 		.4byte	.LASF122
 2465 0811 01       		.byte	0x1
 2466 0812 7201     		.2byte	0x172
 2467 0814 A4000000 		.4byte	0xa4
 2468 0818 7B000000 		.4byte	.LLST4
 2469 081c 16       		.uleb128 0x16
 2470 081d 16000000 		.4byte	.LVL13
 2471 0821 920F0000 		.4byte	0xf92
 2472 0825 00       		.byte	0
 2473 0826 18       		.uleb128 0x18
 2474 0827 A60A0000 		.4byte	.LASF123
 2475 082b 01       		.byte	0x1
 2476 082c AE01     		.2byte	0x1ae
 2477 082e A4000000 		.4byte	0xa4
 2478 0832 00000000 		.4byte	.LFB3
 2479 0836 3C000000 		.4byte	.LFE3-.LFB3
 2480 083a 01       		.uleb128 0x1
 2481 083b 9C       		.byte	0x9c
 2482 083c 7E080000 		.4byte	0x87e
 2483 0840 15       		.uleb128 0x15
 2484 0841 30000000 		.4byte	.LASF122
 2485 0845 01       		.byte	0x1
 2486 0846 B001     		.2byte	0x1b0
 2487 0848 A4000000 		.4byte	0xa4
 2488 084c 9A000000 		.4byte	.LLST5
 2489 0850 15       		.uleb128 0x15
 2490 0851 A6060000 		.4byte	.LASF124
 2491 0855 01       		.byte	0x1
 2492 0856 B201     		.2byte	0x1b2
 2493 0858 83000000 		.4byte	0x83
 2494 085c E8000000 		.4byte	.LLST6
 2495 0860 1A       		.uleb128 0x1a
 2496 0861 18000000 		.4byte	.LVL18
 2497 0865 AE070000 		.4byte	0x7ae
 2498 0869 74080000 		.4byte	0x874
 2499 086d 1B       		.uleb128 0x1b
 2500 086e 01       		.uleb128 0x1
 2501 086f 50       		.byte	0x50
 2502 0870 02       		.uleb128 0x2
 2503 0871 74       		.byte	0x74
 2504 0872 00       		.sleb128 0
 2505 0873 00       		.byte	0
 2506 0874 16       		.uleb128 0x16
 2507 0875 26000000 		.4byte	.LVL19
 2508 0879 F2070000 		.4byte	0x7f2
 2509 087d 00       		.byte	0
 2510 087e 1C       		.uleb128 0x1c
 2511 087f 040A0000 		.4byte	.LASF132
 2512 0883 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 97


 2513 0884 8F02     		.2byte	0x28f
 2514 0886 00000000 		.4byte	.LFB5
 2515 088a 9C000000 		.4byte	.LFE5-.LFB5
 2516 088e 01       		.uleb128 0x1
 2517 088f 9C       		.byte	0x9c
 2518 0890 48090000 		.4byte	0x948
 2519 0894 19       		.uleb128 0x19
 2520 0895 3B0C0000 		.4byte	.LASF125
 2521 0899 01       		.byte	0x1
 2522 089a 8F02     		.2byte	0x28f
 2523 089c 83000000 		.4byte	0x83
 2524 08a0 FB000000 		.4byte	.LLST7
 2525 08a4 19       		.uleb128 0x19
 2526 08a5 22000000 		.4byte	.LASF126
 2527 08a9 01       		.byte	0x1
 2528 08aa 8F02     		.2byte	0x28f
 2529 08ac 83000000 		.4byte	0x83
 2530 08b0 1C010000 		.4byte	.LLST8
 2531 08b4 19       		.uleb128 0x19
 2532 08b5 880A0000 		.4byte	.LASF127
 2533 08b9 01       		.byte	0x1
 2534 08ba 8F02     		.2byte	0x28f
 2535 08bc 83000000 		.4byte	0x83
 2536 08c0 3D010000 		.4byte	.LLST9
 2537 08c4 1D       		.uleb128 0x1d
 2538 08c5 A6010000 		.4byte	.LASF128
 2539 08c9 01       		.byte	0x1
 2540 08ca 9102     		.2byte	0x291
 2541 08cc 83000000 		.4byte	0x83
 2542 08d0 01       		.byte	0x1
 2543 08d1 15       		.uleb128 0x15
 2544 08d2 9C0A0000 		.4byte	.LASF129
 2545 08d6 01       		.byte	0x1
 2546 08d7 9202     		.2byte	0x292
 2547 08d9 83000000 		.4byte	0x83
 2548 08dd 69010000 		.4byte	.LLST10
 2549 08e1 15       		.uleb128 0x15
 2550 08e2 E9000000 		.4byte	.LASF130
 2551 08e6 01       		.byte	0x1
 2552 08e7 9302     		.2byte	0x293
 2553 08e9 6B000000 		.4byte	0x6b
 2554 08ed 88010000 		.4byte	.LLST11
 2555 08f1 15       		.uleb128 0x15
 2556 08f2 300A0000 		.4byte	.LASF131
 2557 08f6 01       		.byte	0x1
 2558 08f7 9402     		.2byte	0x294
 2559 08f9 48090000 		.4byte	0x948
 2560 08fd B1010000 		.4byte	.LLST12
 2561 0901 16       		.uleb128 0x16
 2562 0902 1C000000 		.4byte	.LVL28
 2563 0906 9E0F0000 		.4byte	0xf9e
 2564 090a 16       		.uleb128 0x16
 2565 090b 3C000000 		.4byte	.LVL29
 2566 090f A90F0000 		.4byte	0xfa9
 2567 0913 16       		.uleb128 0x16
 2568 0914 4E000000 		.4byte	.LVL30
 2569 0918 9E0F0000 		.4byte	0xf9e
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 98


 2570 091c 16       		.uleb128 0x16
 2571 091d 6E000000 		.4byte	.LVL31
 2572 0921 A90F0000 		.4byte	0xfa9
 2573 0925 16       		.uleb128 0x16
 2574 0926 74000000 		.4byte	.LVL32
 2575 092a 9E0F0000 		.4byte	0xf9e
 2576 092e 16       		.uleb128 0x16
 2577 092f 86000000 		.4byte	.LVL33
 2578 0933 A90F0000 		.4byte	0xfa9
 2579 0937 1E       		.uleb128 0x1e
 2580 0938 8E000000 		.4byte	.LVL34
 2581 093c B40F0000 		.4byte	0xfb4
 2582 0940 1B       		.uleb128 0x1b
 2583 0941 01       		.uleb128 0x1
 2584 0942 50       		.byte	0x50
 2585 0943 02       		.uleb128 0x2
 2586 0944 74       		.byte	0x74
 2587 0945 00       		.sleb128 0
 2588 0946 00       		.byte	0
 2589 0947 00       		.byte	0
 2590 0948 06       		.uleb128 0x6
 2591 0949 04       		.byte	0x4
 2592 094a 4E090000 		.4byte	0x94e
 2593 094e 1F       		.uleb128 0x1f
 2594 094f 02060000 		.4byte	0x602
 2595 0953 1C       		.uleb128 0x1c
 2596 0954 DB0A0000 		.4byte	.LASF133
 2597 0958 01       		.byte	0x1
 2598 0959 8B03     		.2byte	0x38b
 2599 095b 00000000 		.4byte	.LFB7
 2600 095f 3C000000 		.4byte	.LFE7-.LFB7
 2601 0963 01       		.uleb128 0x1
 2602 0964 9C       		.byte	0x9c
 2603 0965 8C090000 		.4byte	0x98c
 2604 0969 19       		.uleb128 0x19
 2605 096a 3C010000 		.4byte	.LASF134
 2606 096e 01       		.byte	0x1
 2607 096f 8B03     		.2byte	0x38b
 2608 0971 22020000 		.4byte	0x222
 2609 0975 C4010000 		.4byte	.LLST13
 2610 0979 16       		.uleb128 0x16
 2611 097a 14000000 		.4byte	.LVL41
 2612 097e 69070000 		.4byte	0x769
 2613 0982 16       		.uleb128 0x16
 2614 0983 1C000000 		.4byte	.LVL42
 2615 0987 C00F0000 		.4byte	0xfc0
 2616 098b 00       		.byte	0
 2617 098c 1C       		.uleb128 0x1c
 2618 098d 55000000 		.4byte	.LASF135
 2619 0991 01       		.byte	0x1
 2620 0992 EE03     		.2byte	0x3ee
 2621 0994 00000000 		.4byte	.LFB8
 2622 0998 40000000 		.4byte	.LFE8-.LFB8
 2623 099c 01       		.uleb128 0x1
 2624 099d 9C       		.byte	0x9c
 2625 099e D3090000 		.4byte	0x9d3
 2626 09a2 15       		.uleb128 0x15
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 99


 2627 09a3 300A0000 		.4byte	.LASF131
 2628 09a7 01       		.byte	0x1
 2629 09a8 F003     		.2byte	0x3f0
 2630 09aa 48090000 		.4byte	0x948
 2631 09ae E5010000 		.4byte	.LLST14
 2632 09b2 15       		.uleb128 0x15
 2633 09b3 D6010000 		.4byte	.LASF136
 2634 09b7 01       		.byte	0x1
 2635 09b8 F103     		.2byte	0x3f1
 2636 09ba 83000000 		.4byte	0x83
 2637 09be F8010000 		.4byte	.LLST15
 2638 09c2 15       		.uleb128 0x15
 2639 09c3 E0000000 		.4byte	.LASF137
 2640 09c7 01       		.byte	0x1
 2641 09c8 F203     		.2byte	0x3f2
 2642 09ca 83000000 		.4byte	0x83
 2643 09ce 17020000 		.4byte	.LLST16
 2644 09d2 00       		.byte	0
 2645 09d3 20       		.uleb128 0x20
 2646 09d4 860B0000 		.4byte	.LASF195
 2647 09d8 01       		.byte	0x1
 2648 09d9 6404     		.2byte	0x464
 2649 09db 00000000 		.4byte	.LFB9
 2650 09df 02000000 		.4byte	.LFE9-.LFB9
 2651 09e3 01       		.uleb128 0x1
 2652 09e4 9C       		.byte	0x9c
 2653 09e5 1C       		.uleb128 0x1c
 2654 09e6 8C070000 		.4byte	.LASF138
 2655 09ea 01       		.byte	0x1
 2656 09eb B104     		.2byte	0x4b1
 2657 09ed 00000000 		.4byte	.LFB10
 2658 09f1 08000000 		.4byte	.LFE10-.LFB10
 2659 09f5 01       		.uleb128 0x1
 2660 09f6 9C       		.byte	0x9c
 2661 09f7 1D0A0000 		.4byte	0xa1d
 2662 09fb 19       		.uleb128 0x19
 2663 09fc 72050000 		.4byte	.LASF139
 2664 0a00 01       		.byte	0x1
 2665 0a01 B104     		.2byte	0x4b1
 2666 0a03 D2000000 		.4byte	0xd2
 2667 0a07 40020000 		.4byte	.LLST17
 2668 0a0b 1E       		.uleb128 0x1e
 2669 0a0c 06000000 		.4byte	.LVL56
 2670 0a10 CC0F0000 		.4byte	0xfcc
 2671 0a14 1B       		.uleb128 0x1b
 2672 0a15 01       		.uleb128 0x1
 2673 0a16 50       		.byte	0x50
 2674 0a17 03       		.uleb128 0x3
 2675 0a18 F3       		.byte	0xf3
 2676 0a19 01       		.uleb128 0x1
 2677 0a1a 50       		.byte	0x50
 2678 0a1b 00       		.byte	0
 2679 0a1c 00       		.byte	0
 2680 0a1d 1C       		.uleb128 0x1c
 2681 0a1e 51010000 		.4byte	.LASF140
 2682 0a22 01       		.byte	0x1
 2683 0a23 C804     		.2byte	0x4c8
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 100


 2684 0a25 00000000 		.4byte	.LFB11
 2685 0a29 28000000 		.4byte	.LFE11-.LFB11
 2686 0a2d 01       		.uleb128 0x1
 2687 0a2e 9C       		.byte	0x9c
 2688 0a2f 540A0000 		.4byte	0xa54
 2689 0a33 19       		.uleb128 0x19
 2690 0a34 86030000 		.4byte	.LASF141
 2691 0a38 01       		.byte	0x1
 2692 0a39 C804     		.2byte	0x4c8
 2693 0a3b 83000000 		.4byte	0x83
 2694 0a3f 61020000 		.4byte	.LLST18
 2695 0a43 15       		.uleb128 0x15
 2696 0a44 B10B0000 		.4byte	.LASF118
 2697 0a48 01       		.byte	0x1
 2698 0a49 E404     		.2byte	0x4e4
 2699 0a4b 83000000 		.4byte	0x83
 2700 0a4f 8F020000 		.4byte	.LLST19
 2701 0a53 00       		.byte	0
 2702 0a54 1C       		.uleb128 0x1c
 2703 0a55 9B040000 		.4byte	.LASF142
 2704 0a59 01       		.byte	0x1
 2705 0a5a 0C05     		.2byte	0x50c
 2706 0a5c 00000000 		.4byte	.LFB12
 2707 0a60 28000000 		.4byte	.LFE12-.LFB12
 2708 0a64 01       		.uleb128 0x1
 2709 0a65 9C       		.byte	0x9c
 2710 0a66 8B0A0000 		.4byte	0xa8b
 2711 0a6a 19       		.uleb128 0x19
 2712 0a6b D40A0000 		.4byte	.LASF54
 2713 0a6f 01       		.byte	0x1
 2714 0a70 0C05     		.2byte	0x50c
 2715 0a72 83000000 		.4byte	0x83
 2716 0a76 AD020000 		.4byte	.LLST20
 2717 0a7a 15       		.uleb128 0x15
 2718 0a7b B10B0000 		.4byte	.LASF118
 2719 0a7f 01       		.byte	0x1
 2720 0a80 3505     		.2byte	0x535
 2721 0a82 83000000 		.4byte	0x83
 2722 0a86 DB020000 		.4byte	.LLST21
 2723 0a8a 00       		.byte	0
 2724 0a8b 1C       		.uleb128 0x1c
 2725 0a8c 7E060000 		.4byte	.LASF143
 2726 0a90 01       		.byte	0x1
 2727 0a91 6005     		.2byte	0x560
 2728 0a93 00000000 		.4byte	.LFB13
 2729 0a97 12000000 		.4byte	.LFE13-.LFB13
 2730 0a9b 01       		.uleb128 0x1
 2731 0a9c 9C       		.byte	0x9c
 2732 0a9d E70A0000 		.4byte	0xae7
 2733 0aa1 19       		.uleb128 0x19
 2734 0aa2 D40A0000 		.4byte	.LASF54
 2735 0aa6 01       		.byte	0x1
 2736 0aa7 6005     		.2byte	0x560
 2737 0aa9 83000000 		.4byte	0x83
 2738 0aad F9020000 		.4byte	.LLST22
 2739 0ab1 19       		.uleb128 0x19
 2740 0ab2 86030000 		.4byte	.LASF141
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 101


 2741 0ab6 01       		.byte	0x1
 2742 0ab7 6005     		.2byte	0x560
 2743 0ab9 83000000 		.4byte	0x83
 2744 0abd 25030000 		.4byte	.LLST23
 2745 0ac1 1A       		.uleb128 0x1a
 2746 0ac2 0A000000 		.4byte	.LVL67
 2747 0ac6 1D0A0000 		.4byte	0xa1d
 2748 0aca D60A0000 		.4byte	0xad6
 2749 0ace 1B       		.uleb128 0x1b
 2750 0acf 01       		.uleb128 0x1
 2751 0ad0 50       		.byte	0x50
 2752 0ad1 03       		.uleb128 0x3
 2753 0ad2 F3       		.byte	0xf3
 2754 0ad3 01       		.uleb128 0x1
 2755 0ad4 51       		.byte	0x51
 2756 0ad5 00       		.byte	0
 2757 0ad6 1E       		.uleb128 0x1e
 2758 0ad7 10000000 		.4byte	.LVL68
 2759 0adb 540A0000 		.4byte	0xa54
 2760 0adf 1B       		.uleb128 0x1b
 2761 0ae0 01       		.uleb128 0x1
 2762 0ae1 50       		.byte	0x50
 2763 0ae2 02       		.uleb128 0x2
 2764 0ae3 74       		.byte	0x74
 2765 0ae4 00       		.sleb128 0
 2766 0ae5 00       		.byte	0
 2767 0ae6 00       		.byte	0
 2768 0ae7 18       		.uleb128 0x18
 2769 0ae8 67040000 		.4byte	.LASF144
 2770 0aec 01       		.byte	0x1
 2771 0aed 9405     		.2byte	0x594
 2772 0aef A4000000 		.4byte	0xa4
 2773 0af3 00000000 		.4byte	.LFB14
 2774 0af7 1A000000 		.4byte	.LFE14-.LFB14
 2775 0afb 01       		.uleb128 0x1
 2776 0afc 9C       		.byte	0x9c
 2777 0afd 390B0000 		.4byte	0xb39
 2778 0b01 19       		.uleb128 0x19
 2779 0b02 3B0C0000 		.4byte	.LASF125
 2780 0b06 01       		.byte	0x1
 2781 0b07 9405     		.2byte	0x594
 2782 0b09 83000000 		.4byte	0x83
 2783 0b0d 46030000 		.4byte	.LLST24
 2784 0b11 15       		.uleb128 0x15
 2785 0b12 7A050000 		.4byte	.LASF145
 2786 0b16 01       		.byte	0x1
 2787 0b17 9605     		.2byte	0x596
 2788 0b19 A4000000 		.4byte	0xa4
 2789 0b1d 88030000 		.4byte	.LLST25
 2790 0b21 1E       		.uleb128 0x1e
 2791 0b22 18000000 		.4byte	.LVL76
 2792 0b26 D70F0000 		.4byte	0xfd7
 2793 0b2a 1B       		.uleb128 0x1b
 2794 0b2b 01       		.uleb128 0x1
 2795 0b2c 50       		.byte	0x50
 2796 0b2d 03       		.uleb128 0x3
 2797 0b2e F3       		.byte	0xf3
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 102


 2798 0b2f 01       		.uleb128 0x1
 2799 0b30 50       		.byte	0x50
 2800 0b31 1B       		.uleb128 0x1b
 2801 0b32 01       		.uleb128 0x1
 2802 0b33 51       		.byte	0x51
 2803 0b34 02       		.uleb128 0x2
 2804 0b35 08       		.byte	0x8
 2805 0b36 55       		.byte	0x55
 2806 0b37 00       		.byte	0
 2807 0b38 00       		.byte	0
 2808 0b39 18       		.uleb128 0x18
 2809 0b3a 93050000 		.4byte	.LASF146
 2810 0b3e 01       		.byte	0x1
 2811 0b3f 0506     		.2byte	0x605
 2812 0b41 A4000000 		.4byte	0xa4
 2813 0b45 00000000 		.4byte	.LFB15
 2814 0b49 1A000000 		.4byte	.LFE15-.LFB15
 2815 0b4d 01       		.uleb128 0x1
 2816 0b4e 9C       		.byte	0x9c
 2817 0b4f 840B0000 		.4byte	0xb84
 2818 0b53 15       		.uleb128 0x15
 2819 0b54 7A050000 		.4byte	.LASF145
 2820 0b58 01       		.byte	0x1
 2821 0b59 0706     		.2byte	0x607
 2822 0b5b A4000000 		.4byte	0xa4
 2823 0b5f B2030000 		.4byte	.LLST26
 2824 0b63 15       		.uleb128 0x15
 2825 0b64 A6060000 		.4byte	.LASF124
 2826 0b68 01       		.byte	0x1
 2827 0b69 0806     		.2byte	0x608
 2828 0b6b 83000000 		.4byte	0x83
 2829 0b6f DC030000 		.4byte	.LLST27
 2830 0b73 1E       		.uleb128 0x1e
 2831 0b74 0E000000 		.4byte	.LVL79
 2832 0b78 E70A0000 		.4byte	0xae7
 2833 0b7c 1B       		.uleb128 0x1b
 2834 0b7d 01       		.uleb128 0x1
 2835 0b7e 50       		.byte	0x50
 2836 0b7f 02       		.uleb128 0x2
 2837 0b80 74       		.byte	0x74
 2838 0b81 00       		.sleb128 0
 2839 0b82 00       		.byte	0
 2840 0b83 00       		.byte	0
 2841 0b84 1C       		.uleb128 0x1c
 2842 0b85 EC010000 		.4byte	.LASF147
 2843 0b89 01       		.byte	0x1
 2844 0b8a 080A     		.2byte	0xa08
 2845 0b8c 00000000 		.4byte	.LFB21
 2846 0b90 3C000000 		.4byte	.LFE21-.LFB21
 2847 0b94 01       		.uleb128 0x1
 2848 0b95 9C       		.byte	0x9c
 2849 0b96 E50B0000 		.4byte	0xbe5
 2850 0b9a 15       		.uleb128 0x15
 2851 0b9b A6060000 		.4byte	.LASF124
 2852 0b9f 01       		.byte	0x1
 2853 0ba0 0A0A     		.2byte	0xa0a
 2854 0ba2 83000000 		.4byte	0x83
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 103


 2855 0ba6 FB030000 		.4byte	.LLST28
 2856 0baa 15       		.uleb128 0x15
 2857 0bab B0060000 		.4byte	.LASF148
 2858 0baf 01       		.byte	0x1
 2859 0bb0 0B0A     		.2byte	0xa0b
 2860 0bb2 83000000 		.4byte	0x83
 2861 0bb6 1A040000 		.4byte	.LLST29
 2862 0bba 15       		.uleb128 0x15
 2863 0bbb C80A0000 		.4byte	.LASF149
 2864 0bbf 01       		.byte	0x1
 2865 0bc0 170A     		.2byte	0xa17
 2866 0bc2 48090000 		.4byte	0x948
 2867 0bc6 39040000 		.4byte	.LLST30
 2868 0bca 1E       		.uleb128 0x1e
 2869 0bcb 1E000000 		.4byte	.LVL88
 2870 0bcf E30F0000 		.4byte	0xfe3
 2871 0bd3 1B       		.uleb128 0x1b
 2872 0bd4 01       		.uleb128 0x1
 2873 0bd5 50       		.byte	0x50
 2874 0bd6 0C       		.uleb128 0xc
 2875 0bd7 74       		.byte	0x74
 2876 0bd8 00       		.sleb128 0
 2877 0bd9 33       		.byte	0x33
 2878 0bda 24       		.byte	0x24
 2879 0bdb 74       		.byte	0x74
 2880 0bdc 00       		.sleb128 0
 2881 0bdd 1C       		.byte	0x1c
 2882 0bde 32       		.byte	0x32
 2883 0bdf 24       		.byte	0x24
 2884 0be0 76       		.byte	0x76
 2885 0be1 00       		.sleb128 0
 2886 0be2 22       		.byte	0x22
 2887 0be3 00       		.byte	0
 2888 0be4 00       		.byte	0
 2889 0be5 18       		.uleb128 0x18
 2890 0be6 00000000 		.4byte	.LASF150
 2891 0bea 01       		.byte	0x1
 2892 0beb 5A0A     		.2byte	0xa5a
 2893 0bed 83000000 		.4byte	0x83
 2894 0bf1 00000000 		.4byte	.LFB22
 2895 0bf5 14000000 		.4byte	.LFE22-.LFB22
 2896 0bf9 01       		.uleb128 0x1
 2897 0bfa 9C       		.byte	0x9c
 2898 0bfb 2C0C0000 		.4byte	0xc2c
 2899 0bff 19       		.uleb128 0x19
 2900 0c00 3B0C0000 		.4byte	.LASF125
 2901 0c04 01       		.byte	0x1
 2902 0c05 5A0A     		.2byte	0xa5a
 2903 0c07 83000000 		.4byte	0x83
 2904 0c0b 4C040000 		.4byte	.LLST31
 2905 0c0f 21       		.uleb128 0x21
 2906 0c10 59090000 		.4byte	.LASF151
 2907 0c14 01       		.byte	0x1
 2908 0c15 5C0A     		.2byte	0xa5c
 2909 0c17 83000000 		.4byte	0x83
 2910 0c1b 01       		.uleb128 0x1
 2911 0c1c 50       		.byte	0x50
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 104


 2912 0c1d 21       		.uleb128 0x21
 2913 0c1e AE010000 		.4byte	.LASF152
 2914 0c22 01       		.byte	0x1
 2915 0c23 600A     		.2byte	0xa60
 2916 0c25 2C0C0000 		.4byte	0xc2c
 2917 0c29 01       		.uleb128 0x1
 2918 0c2a 53       		.byte	0x53
 2919 0c2b 00       		.byte	0
 2920 0c2c 06       		.uleb128 0x6
 2921 0c2d 04       		.byte	0x4
 2922 0c2e DD020000 		.4byte	0x2dd
 2923 0c32 18       		.uleb128 0x18
 2924 0c33 5C030000 		.4byte	.LASF153
 2925 0c37 01       		.byte	0x1
 2926 0c38 B10A     		.2byte	0xab1
 2927 0c3a 6B000000 		.4byte	0x6b
 2928 0c3e 00000000 		.4byte	.LFB23
 2929 0c42 24000000 		.4byte	.LFE23-.LFB23
 2930 0c46 01       		.uleb128 0x1
 2931 0c47 9C       		.byte	0x9c
 2932 0c48 880C0000 		.4byte	0xc88
 2933 0c4c 19       		.uleb128 0x19
 2934 0c4d 090C0000 		.4byte	.LASF154
 2935 0c51 01       		.byte	0x1
 2936 0c52 B10A     		.2byte	0xab1
 2937 0c54 83000000 		.4byte	0x83
 2938 0c58 6D040000 		.4byte	.LLST32
 2939 0c5c 22       		.uleb128 0x22
 2940 0c5d 55040000 		.4byte	.LASF46
 2941 0c61 01       		.byte	0x1
 2942 0c62 B10A     		.2byte	0xab1
 2943 0c64 83000000 		.4byte	0x83
 2944 0c68 01       		.uleb128 0x1
 2945 0c69 51       		.byte	0x51
 2946 0c6a 15       		.uleb128 0x15
 2947 0c6b 2E090000 		.4byte	.LASF155
 2948 0c6f 01       		.byte	0x1
 2949 0c70 B30A     		.2byte	0xab3
 2950 0c72 83000000 		.4byte	0x83
 2951 0c76 A7040000 		.4byte	.LLST33
 2952 0c7a 1D       		.uleb128 0x1d
 2953 0c7b 170C0000 		.4byte	.LASF156
 2954 0c7f 01       		.byte	0x1
 2955 0c80 B40A     		.2byte	0xab4
 2956 0c82 83000000 		.4byte	0x83
 2957 0c86 01       		.byte	0x1
 2958 0c87 00       		.byte	0
 2959 0c88 14       		.uleb128 0x14
 2960 0c89 B6010000 		.4byte	.LASF157
 2961 0c8d 01       		.byte	0x1
 2962 0c8e C008     		.2byte	0x8c0
 2963 0c90 00000000 		.4byte	.LFB20
 2964 0c94 14000000 		.4byte	.LFE20-.LFB20
 2965 0c98 01       		.uleb128 0x1
 2966 0c99 9C       		.byte	0x9c
 2967 0c9a 080D0000 		.4byte	0xd08
 2968 0c9e 19       		.uleb128 0x19
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 105


 2969 0c9f A6060000 		.4byte	.LASF124
 2970 0ca3 01       		.byte	0x1
 2971 0ca4 C008     		.2byte	0x8c0
 2972 0ca6 83000000 		.4byte	0x83
 2973 0caa BA040000 		.4byte	.LLST34
 2974 0cae 19       		.uleb128 0x19
 2975 0caf AE010000 		.4byte	.LASF152
 2976 0cb3 01       		.byte	0x1
 2977 0cb4 C008     		.2byte	0x8c0
 2978 0cb6 2C0C0000 		.4byte	0xc2c
 2979 0cba DB040000 		.4byte	.LLST35
 2980 0cbe 21       		.uleb128 0x21
 2981 0cbf 94020000 		.4byte	.LASF158
 2982 0cc3 01       		.byte	0x1
 2983 0cc4 C208     		.2byte	0x8c2
 2984 0cc6 6B000000 		.4byte	0x6b
 2985 0cca 01       		.uleb128 0x1
 2986 0ccb 50       		.byte	0x50
 2987 0ccc 1D       		.uleb128 0x1d
 2988 0ccd FD000000 		.4byte	.LASF159
 2989 0cd1 01       		.byte	0x1
 2990 0cd2 C308     		.2byte	0x8c3
 2991 0cd4 6B000000 		.4byte	0x6b
 2992 0cd8 00       		.byte	0
 2993 0cd9 15       		.uleb128 0x15
 2994 0cda 090C0000 		.4byte	.LASF154
 2995 0cde 01       		.byte	0x1
 2996 0cdf C908     		.2byte	0x8c9
 2997 0ce1 83000000 		.4byte	0x83
 2998 0ce5 07050000 		.4byte	.LLST36
 2999 0ce9 1A       		.uleb128 0x1a
 3000 0cea 08000000 		.4byte	.LVL103
 3001 0cee E50B0000 		.4byte	0xbe5
 3002 0cf2 FE0C0000 		.4byte	0xcfe
 3003 0cf6 1B       		.uleb128 0x1b
 3004 0cf7 01       		.uleb128 0x1
 3005 0cf8 50       		.byte	0x50
 3006 0cf9 03       		.uleb128 0x3
 3007 0cfa F3       		.byte	0xf3
 3008 0cfb 01       		.uleb128 0x1
 3009 0cfc 50       		.byte	0x50
 3010 0cfd 00       		.byte	0
 3011 0cfe 16       		.uleb128 0x16
 3012 0cff 10000000 		.4byte	.LVL105
 3013 0d03 320C0000 		.4byte	0xc32
 3014 0d07 00       		.byte	0
 3015 0d08 23       		.uleb128 0x23
 3016 0d09 F3050000 		.4byte	.LASF160
 3017 0d0d 01       		.byte	0x1
 3018 0d0e 2906     		.2byte	0x629
 3019 0d10 A4000000 		.4byte	0xa4
 3020 0d14 00000000 		.4byte	.LFB16
 3021 0d18 44010000 		.4byte	.LFE16-.LFB16
 3022 0d1c 01       		.uleb128 0x1
 3023 0d1d 9C       		.byte	0x9c
 3024 0d1e 060E0000 		.4byte	0xe06
 3025 0d22 15       		.uleb128 0x15
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 106


 3026 0d23 2B030000 		.4byte	.LASF161
 3027 0d27 01       		.byte	0x1
 3028 0d28 2B06     		.2byte	0x62b
 3029 0d2a A4000000 		.4byte	0xa4
 3030 0d2e 1A050000 		.4byte	.LLST37
 3031 0d32 15       		.uleb128 0x15
 3032 0d33 A6060000 		.4byte	.LASF124
 3033 0d37 01       		.byte	0x1
 3034 0d38 2C06     		.2byte	0x62c
 3035 0d3a 83000000 		.4byte	0x83
 3036 0d3e 4F050000 		.4byte	.LLST38
 3037 0d42 24       		.uleb128 0x24
 3038 0d43 637000   		.ascii	"cp\000"
 3039 0d46 01       		.byte	0x1
 3040 0d47 2E06     		.2byte	0x62e
 3041 0d49 83000000 		.4byte	0x83
 3042 0d4d 84050000 		.4byte	.LLST39
 3043 0d51 21       		.uleb128 0x21
 3044 0d52 9D010000 		.4byte	.LASF162
 3045 0d56 01       		.byte	0x1
 3046 0d57 3306     		.2byte	0x633
 3047 0d59 61050000 		.4byte	0x561
 3048 0d5d 02       		.uleb128 0x2
 3049 0d5e 91       		.byte	0x91
 3050 0d5f 6C       		.sleb128 -20
 3051 0d60 15       		.uleb128 0x15
 3052 0d61 AE010000 		.4byte	.LASF152
 3053 0d65 01       		.byte	0x1
 3054 0d66 3406     		.2byte	0x634
 3055 0d68 2C0C0000 		.4byte	0xc2c
 3056 0d6c A3050000 		.4byte	.LLST40
 3057 0d70 21       		.uleb128 0x21
 3058 0d71 F4030000 		.4byte	.LASF163
 3059 0d75 01       		.byte	0x1
 3060 0d76 3506     		.2byte	0x635
 3061 0d78 84010000 		.4byte	0x184
 3062 0d7c 02       		.uleb128 0x2
 3063 0d7d 91       		.byte	0x91
 3064 0d7e 50       		.sleb128 -48
 3065 0d7f 1A       		.uleb128 0x1a
 3066 0d80 4E000000 		.4byte	.LVL113
 3067 0d84 D70F0000 		.4byte	0xfd7
 3068 0d88 990D0000 		.4byte	0xd99
 3069 0d8c 1B       		.uleb128 0x1b
 3070 0d8d 01       		.uleb128 0x1
 3071 0d8e 50       		.byte	0x50
 3072 0d8f 02       		.uleb128 0x2
 3073 0d90 76       		.byte	0x76
 3074 0d91 00       		.sleb128 0
 3075 0d92 1B       		.uleb128 0x1b
 3076 0d93 01       		.uleb128 0x1
 3077 0d94 51       		.byte	0x51
 3078 0d95 02       		.uleb128 0x2
 3079 0d96 08       		.byte	0x8
 3080 0d97 55       		.byte	0x55
 3081 0d98 00       		.byte	0
 3082 0d99 1A       		.uleb128 0x1a
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 107


 3083 0d9a 76000000 		.4byte	.LVL115
 3084 0d9e EF0F0000 		.4byte	0xfef
 3085 0da2 AD0D0000 		.4byte	0xdad
 3086 0da6 1B       		.uleb128 0x1b
 3087 0da7 01       		.uleb128 0x1
 3088 0da8 50       		.byte	0x50
 3089 0da9 02       		.uleb128 0x2
 3090 0daa 91       		.byte	0x91
 3091 0dab 50       		.sleb128 -48
 3092 0dac 00       		.byte	0
 3093 0dad 1A       		.uleb128 0x1a
 3094 0dae BE000000 		.4byte	.LVL122
 3095 0db2 D70F0000 		.4byte	0xfd7
 3096 0db6 C70D0000 		.4byte	0xdc7
 3097 0dba 1B       		.uleb128 0x1b
 3098 0dbb 01       		.uleb128 0x1
 3099 0dbc 50       		.byte	0x50
 3100 0dbd 02       		.uleb128 0x2
 3101 0dbe 74       		.byte	0x74
 3102 0dbf 00       		.sleb128 0
 3103 0dc0 1B       		.uleb128 0x1b
 3104 0dc1 01       		.uleb128 0x1
 3105 0dc2 51       		.byte	0x51
 3106 0dc3 02       		.uleb128 0x2
 3107 0dc4 08       		.byte	0x8
 3108 0dc5 55       		.byte	0x55
 3109 0dc6 00       		.byte	0
 3110 0dc7 1A       		.uleb128 0x1a
 3111 0dc8 EE000000 		.4byte	.LVL124
 3112 0dcc FA0F0000 		.4byte	0xffa
 3113 0dd0 DB0D0000 		.4byte	0xddb
 3114 0dd4 1B       		.uleb128 0x1b
 3115 0dd5 01       		.uleb128 0x1
 3116 0dd6 50       		.byte	0x50
 3117 0dd7 02       		.uleb128 0x2
 3118 0dd8 91       		.byte	0x91
 3119 0dd9 50       		.sleb128 -48
 3120 0dda 00       		.byte	0
 3121 0ddb 1A       		.uleb128 0x1a
 3122 0ddc 0A010000 		.4byte	.LVL129
 3123 0de0 880C0000 		.4byte	0xc88
 3124 0de4 EF0D0000 		.4byte	0xdef
 3125 0de8 1B       		.uleb128 0x1b
 3126 0de9 01       		.uleb128 0x1
 3127 0dea 50       		.byte	0x50
 3128 0deb 02       		.uleb128 0x2
 3129 0dec 74       		.byte	0x74
 3130 0ded 00       		.sleb128 0
 3131 0dee 00       		.byte	0
 3132 0def 1E       		.uleb128 0x1e
 3133 0df0 12010000 		.4byte	.LVL130
 3134 0df4 D70F0000 		.4byte	0xfd7
 3135 0df8 1B       		.uleb128 0x1b
 3136 0df9 01       		.uleb128 0x1
 3137 0dfa 50       		.byte	0x50
 3138 0dfb 02       		.uleb128 0x2
 3139 0dfc 74       		.byte	0x74
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 108


 3140 0dfd 00       		.sleb128 0
 3141 0dfe 1B       		.uleb128 0x1b
 3142 0dff 01       		.uleb128 0x1
 3143 0e00 51       		.byte	0x51
 3144 0e01 02       		.uleb128 0x2
 3145 0e02 08       		.byte	0x8
 3146 0e03 55       		.byte	0x55
 3147 0e04 00       		.byte	0
 3148 0e05 00       		.byte	0
 3149 0e06 1C       		.uleb128 0x1c
 3150 0e07 620C0000 		.4byte	.LASF164
 3151 0e0b 01       		.byte	0x1
 3152 0e0c 8B08     		.2byte	0x88b
 3153 0e0e 00000000 		.4byte	.LFB19
 3154 0e12 24000000 		.4byte	.LFE19-.LFB19
 3155 0e16 01       		.uleb128 0x1
 3156 0e17 9C       		.byte	0x9c
 3157 0e18 4D0E0000 		.4byte	0xe4d
 3158 0e1c 15       		.uleb128 0x15
 3159 0e1d A6060000 		.4byte	.LASF124
 3160 0e21 01       		.byte	0x1
 3161 0e22 8D08     		.2byte	0x88d
 3162 0e24 83000000 		.4byte	0x83
 3163 0e28 CC050000 		.4byte	.LLST41
 3164 0e2c 15       		.uleb128 0x15
 3165 0e2d AE010000 		.4byte	.LASF152
 3166 0e31 01       		.byte	0x1
 3167 0e32 8E08     		.2byte	0x88e
 3168 0e34 2C0C0000 		.4byte	0xc2c
 3169 0e38 EB050000 		.4byte	.LLST42
 3170 0e3c 1E       		.uleb128 0x1e
 3171 0e3d 16000000 		.4byte	.LVL138
 3172 0e41 880C0000 		.4byte	0xc88
 3173 0e45 1B       		.uleb128 0x1b
 3174 0e46 01       		.uleb128 0x1
 3175 0e47 50       		.byte	0x50
 3176 0e48 02       		.uleb128 0x2
 3177 0e49 74       		.byte	0x74
 3178 0e4a 00       		.sleb128 0
 3179 0e4b 00       		.byte	0
 3180 0e4c 00       		.byte	0
 3181 0e4d 18       		.uleb128 0x18
 3182 0e4e 1E070000 		.4byte	.LASF165
 3183 0e52 01       		.byte	0x1
 3184 0e53 0402     		.2byte	0x204
 3185 0e55 A4000000 		.4byte	0xa4
 3186 0e59 00000000 		.4byte	.LFB4
 3187 0e5d 1C000000 		.4byte	.LFE4-.LFB4
 3188 0e61 01       		.uleb128 0x1
 3189 0e62 9C       		.byte	0x9c
 3190 0e63 A80E0000 		.4byte	0xea8
 3191 0e67 1D       		.uleb128 0x1d
 3192 0e68 D5000000 		.4byte	.LASF166
 3193 0e6c 01       		.byte	0x1
 3194 0e6d 0602     		.2byte	0x206
 3195 0e6f A4000000 		.4byte	0xa4
 3196 0e73 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 109


 3197 0e74 16       		.uleb128 0x16
 3198 0e75 06000000 		.4byte	.LVL142
 3199 0e79 49070000 		.4byte	0x749
 3200 0e7d 16       		.uleb128 0x16
 3201 0e7e 0A000000 		.4byte	.LVL143
 3202 0e82 060E0000 		.4byte	0xe06
 3203 0e86 16       		.uleb128 0x16
 3204 0e87 0E000000 		.4byte	.LVL144
 3205 0e8b 8C090000 		.4byte	0x98c
 3206 0e8f 16       		.uleb128 0x16
 3207 0e90 12000000 		.4byte	.LVL145
 3208 0e94 C00F0000 		.4byte	0xfc0
 3209 0e98 1E       		.uleb128 0x1e
 3210 0e99 18000000 		.4byte	.LVL146
 3211 0e9d 53090000 		.4byte	0x953
 3212 0ea1 1B       		.uleb128 0x1b
 3213 0ea2 01       		.uleb128 0x1
 3214 0ea3 50       		.byte	0x50
 3215 0ea4 01       		.uleb128 0x1
 3216 0ea5 31       		.byte	0x31
 3217 0ea6 00       		.byte	0
 3218 0ea7 00       		.byte	0
 3219 0ea8 25       		.uleb128 0x25
 3220 0ea9 D4050000 		.4byte	.LASF167
 3221 0ead 05       		.byte	0x5
 3222 0eae 3404     		.2byte	0x434
 3223 0eb0 71050000 		.4byte	0x571
 3224 0eb4 25       		.uleb128 0x25
 3225 0eb5 6E080000 		.4byte	.LASF168
 3226 0eb9 05       		.byte	0x5
 3227 0eba 3504     		.2byte	0x435
 3228 0ebc C00E0000 		.4byte	0xec0
 3229 0ec0 1F       		.uleb128 0x1f
 3230 0ec1 0F070000 		.4byte	0x70f
 3231 0ec5 0D       		.uleb128 0xd
 3232 0ec6 4E090000 		.4byte	0x94e
 3233 0eca D50E0000 		.4byte	0xed5
 3234 0ece 0E       		.uleb128 0xe
 3235 0ecf D6020000 		.4byte	0x2d6
 3236 0ed3 04       		.byte	0x4
 3237 0ed4 00       		.byte	0
 3238 0ed5 25       		.uleb128 0x25
 3239 0ed6 760B0000 		.4byte	.LASF169
 3240 0eda 05       		.byte	0x5
 3241 0edb 3604     		.2byte	0x436
 3242 0edd E10E0000 		.4byte	0xee1
 3243 0ee1 1F       		.uleb128 0x1f
 3244 0ee2 C50E0000 		.4byte	0xec5
 3245 0ee6 26       		.uleb128 0x26
 3246 0ee7 75000000 		.4byte	.LASF170
 3247 0eeb 01       		.byte	0x1
 3248 0eec BB       		.byte	0xbb
 3249 0eed BC000000 		.4byte	0xbc
 3250 0ef1 05       		.uleb128 0x5
 3251 0ef2 03       		.byte	0x3
 3252 0ef3 00000000 		.4byte	CapSense_widgetIndex
 3253 0ef7 26       		.uleb128 0x26
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 110


 3254 0ef8 3E020000 		.4byte	.LASF171
 3255 0efc 01       		.byte	0x1
 3256 0efd BC       		.byte	0xbc
 3257 0efe BC000000 		.4byte	0xbc
 3258 0f02 05       		.uleb128 0x5
 3259 0f03 03       		.byte	0x3
 3260 0f04 00000000 		.4byte	CapSense_sensorIndex
 3261 0f08 26       		.uleb128 0x26
 3262 0f09 440C0000 		.4byte	.LASF172
 3263 0f0d 01       		.byte	0x1
 3264 0f0e BD       		.byte	0xbd
 3265 0f0f 6B000000 		.4byte	0x6b
 3266 0f13 05       		.uleb128 0x5
 3267 0f14 03       		.byte	0x3
 3268 0f15 00000000 		.4byte	CapSense_requestScanAllWidget
 3269 0f19 26       		.uleb128 0x26
 3270 0f1a 0F0B0000 		.4byte	.LASF173
 3271 0f1e 01       		.byte	0x1
 3272 0f1f C0       		.byte	0xc0
 3273 0f20 CA060000 		.4byte	0x6ca
 3274 0f24 05       		.uleb128 0x5
 3275 0f25 03       		.byte	0x3
 3276 0f26 00000000 		.4byte	CapSense_curRamSnsPtr
 3277 0f2a 26       		.uleb128 0x26
 3278 0f2b 12090000 		.4byte	.LASF174
 3279 0f2f 01       		.byte	0x1
 3280 0f30 AE       		.byte	0xae
 3281 0f31 22020000 		.4byte	0x222
 3282 0f35 05       		.uleb128 0x5
 3283 0f36 03       		.byte	0x3
 3284 0f37 00000000 		.4byte	CapSense_currentSenseMethod
 3285 0f3b 26       		.uleb128 0x26
 3286 0f3c 310B0000 		.4byte	.LASF175
 3287 0f40 01       		.byte	0x1
 3288 0f41 B7       		.byte	0xb7
 3289 0f42 4C0F0000 		.4byte	0xf4c
 3290 0f46 05       		.uleb128 0x5
 3291 0f47 03       		.byte	0x3
 3292 0f48 00000000 		.4byte	CapSense_scanFreqIndex
 3293 0f4c 1F       		.uleb128 0x1f
 3294 0f4d 6B000000 		.4byte	0x6b
 3295 0f51 26       		.uleb128 0x26
 3296 0f52 64060000 		.4byte	.LASF176
 3297 0f56 01       		.byte	0x1
 3298 0f57 CF       		.byte	0xcf
 3299 0f58 48090000 		.4byte	0x948
 3300 0f5c 05       		.uleb128 0x5
 3301 0f5d 03       		.byte	0x3
 3302 0f5e 00000000 		.4byte	CapSense_curSnsIOPtr
 3303 0f62 25       		.uleb128 0x25
 3304 0f63 34070000 		.4byte	.LASF177
 3305 0f67 06       		.byte	0x6
 3306 0f68 A501     		.2byte	0x1a5
 3307 0f6a 6B000000 		.4byte	0x6b
 3308 0f6e 25       		.uleb128 0x25
 3309 0f6f 52080000 		.4byte	.LASF178
 3310 0f73 06       		.byte	0x6
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 111


 3311 0f74 A601     		.2byte	0x1a6
 3312 0f76 77000000 		.4byte	0x77
 3313 0f7a 27       		.uleb128 0x27
 3314 0f7b 63070000 		.4byte	.LASF179
 3315 0f7f 63070000 		.4byte	.LASF179
 3316 0f83 06       		.byte	0x6
 3317 0f84 D401     		.2byte	0x1d4
 3318 0f86 27       		.uleb128 0x27
 3319 0f87 07020000 		.4byte	.LASF180
 3320 0f8b 07020000 		.4byte	.LASF180
 3321 0f8f 06       		.byte	0x6
 3322 0f90 B701     		.2byte	0x1b7
 3323 0f92 27       		.uleb128 0x27
 3324 0f93 5A0A0000 		.4byte	.LASF181
 3325 0f97 5A0A0000 		.4byte	.LASF181
 3326 0f9b 06       		.byte	0x6
 3327 0f9c B901     		.2byte	0x1b9
 3328 0f9e 28       		.uleb128 0x28
 3329 0f9f F80A0000 		.4byte	.LASF182
 3330 0fa3 F80A0000 		.4byte	.LASF182
 3331 0fa7 07       		.byte	0x7
 3332 0fa8 E5       		.byte	0xe5
 3333 0fa9 28       		.uleb128 0x28
 3334 0faa 10040000 		.4byte	.LASF183
 3335 0fae 10040000 		.4byte	.LASF183
 3336 0fb2 07       		.byte	0x7
 3337 0fb3 E6       		.byte	0xe6
 3338 0fb4 27       		.uleb128 0x27
 3339 0fb5 A7090000 		.4byte	.LASF184
 3340 0fb9 A7090000 		.4byte	.LASF184
 3341 0fbd 06       		.byte	0x6
 3342 0fbe C001     		.2byte	0x1c0
 3343 0fc0 27       		.uleb128 0x27
 3344 0fc1 4E050000 		.4byte	.LASF185
 3345 0fc5 4E050000 		.4byte	.LASF185
 3346 0fc9 06       		.byte	0x6
 3347 0fca D001     		.2byte	0x1d0
 3348 0fcc 28       		.uleb128 0x28
 3349 0fcd 6D090000 		.4byte	.LASF186
 3350 0fd1 6D090000 		.4byte	.LASF186
 3351 0fd5 08       		.byte	0x8
 3352 0fd6 18       		.byte	0x18
 3353 0fd7 27       		.uleb128 0x27
 3354 0fd8 36080000 		.4byte	.LASF187
 3355 0fdc 36080000 		.4byte	.LASF187
 3356 0fe0 06       		.byte	0x6
 3357 0fe1 BD01     		.2byte	0x1bd
 3358 0fe3 27       		.uleb128 0x27
 3359 0fe4 C3070000 		.4byte	.LASF188
 3360 0fe8 C3070000 		.4byte	.LASF188
 3361 0fec 06       		.byte	0x6
 3362 0fed C101     		.2byte	0x1c1
 3363 0fef 28       		.uleb128 0x28
 3364 0ff0 94080000 		.4byte	.LASF189
 3365 0ff4 94080000 		.4byte	.LASF189
 3366 0ff8 04       		.byte	0x4
 3367 0ff9 B0       		.byte	0xb0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 112


 3368 0ffa 28       		.uleb128 0x28
 3369 0ffb 10010000 		.4byte	.LASF190
 3370 0fff 10010000 		.4byte	.LASF190
 3371 1003 04       		.byte	0x4
 3372 1004 B1       		.byte	0xb1
 3373 1005 00       		.byte	0
 3374              		.section	.debug_abbrev,"",%progbits
 3375              	.Ldebug_abbrev0:
 3376 0000 01       		.uleb128 0x1
 3377 0001 11       		.uleb128 0x11
 3378 0002 01       		.byte	0x1
 3379 0003 25       		.uleb128 0x25
 3380 0004 0E       		.uleb128 0xe
 3381 0005 13       		.uleb128 0x13
 3382 0006 0B       		.uleb128 0xb
 3383 0007 03       		.uleb128 0x3
 3384 0008 0E       		.uleb128 0xe
 3385 0009 1B       		.uleb128 0x1b
 3386 000a 0E       		.uleb128 0xe
 3387 000b 55       		.uleb128 0x55
 3388 000c 17       		.uleb128 0x17
 3389 000d 11       		.uleb128 0x11
 3390 000e 01       		.uleb128 0x1
 3391 000f 10       		.uleb128 0x10
 3392 0010 17       		.uleb128 0x17
 3393 0011 00       		.byte	0
 3394 0012 00       		.byte	0
 3395 0013 02       		.uleb128 0x2
 3396 0014 24       		.uleb128 0x24
 3397 0015 00       		.byte	0
 3398 0016 0B       		.uleb128 0xb
 3399 0017 0B       		.uleb128 0xb
 3400 0018 3E       		.uleb128 0x3e
 3401 0019 0B       		.uleb128 0xb
 3402 001a 03       		.uleb128 0x3
 3403 001b 0E       		.uleb128 0xe
 3404 001c 00       		.byte	0
 3405 001d 00       		.byte	0
 3406 001e 03       		.uleb128 0x3
 3407 001f 24       		.uleb128 0x24
 3408 0020 00       		.byte	0
 3409 0021 0B       		.uleb128 0xb
 3410 0022 0B       		.uleb128 0xb
 3411 0023 3E       		.uleb128 0x3e
 3412 0024 0B       		.uleb128 0xb
 3413 0025 03       		.uleb128 0x3
 3414 0026 08       		.uleb128 0x8
 3415 0027 00       		.byte	0
 3416 0028 00       		.byte	0
 3417 0029 04       		.uleb128 0x4
 3418 002a 16       		.uleb128 0x16
 3419 002b 00       		.byte	0
 3420 002c 03       		.uleb128 0x3
 3421 002d 0E       		.uleb128 0xe
 3422 002e 3A       		.uleb128 0x3a
 3423 002f 0B       		.uleb128 0xb
 3424 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 113


 3425 0031 05       		.uleb128 0x5
 3426 0032 49       		.uleb128 0x49
 3427 0033 13       		.uleb128 0x13
 3428 0034 00       		.byte	0
 3429 0035 00       		.byte	0
 3430 0036 05       		.uleb128 0x5
 3431 0037 35       		.uleb128 0x35
 3432 0038 00       		.byte	0
 3433 0039 49       		.uleb128 0x49
 3434 003a 13       		.uleb128 0x13
 3435 003b 00       		.byte	0
 3436 003c 00       		.byte	0
 3437 003d 06       		.uleb128 0x6
 3438 003e 0F       		.uleb128 0xf
 3439 003f 00       		.byte	0
 3440 0040 0B       		.uleb128 0xb
 3441 0041 0B       		.uleb128 0xb
 3442 0042 49       		.uleb128 0x49
 3443 0043 13       		.uleb128 0x13
 3444 0044 00       		.byte	0
 3445 0045 00       		.byte	0
 3446 0046 07       		.uleb128 0x7
 3447 0047 15       		.uleb128 0x15
 3448 0048 00       		.byte	0
 3449 0049 27       		.uleb128 0x27
 3450 004a 19       		.uleb128 0x19
 3451 004b 00       		.byte	0
 3452 004c 00       		.byte	0
 3453 004d 08       		.uleb128 0x8
 3454 004e 13       		.uleb128 0x13
 3455 004f 01       		.byte	0x1
 3456 0050 0B       		.uleb128 0xb
 3457 0051 0B       		.uleb128 0xb
 3458 0052 3A       		.uleb128 0x3a
 3459 0053 0B       		.uleb128 0xb
 3460 0054 3B       		.uleb128 0x3b
 3461 0055 0B       		.uleb128 0xb
 3462 0056 01       		.uleb128 0x1
 3463 0057 13       		.uleb128 0x13
 3464 0058 00       		.byte	0
 3465 0059 00       		.byte	0
 3466 005a 09       		.uleb128 0x9
 3467 005b 0D       		.uleb128 0xd
 3468 005c 00       		.byte	0
 3469 005d 03       		.uleb128 0x3
 3470 005e 0E       		.uleb128 0xe
 3471 005f 3A       		.uleb128 0x3a
 3472 0060 0B       		.uleb128 0xb
 3473 0061 3B       		.uleb128 0x3b
 3474 0062 0B       		.uleb128 0xb
 3475 0063 49       		.uleb128 0x49
 3476 0064 13       		.uleb128 0x13
 3477 0065 38       		.uleb128 0x38
 3478 0066 0B       		.uleb128 0xb
 3479 0067 00       		.byte	0
 3480 0068 00       		.byte	0
 3481 0069 0A       		.uleb128 0xa
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 114


 3482 006a 16       		.uleb128 0x16
 3483 006b 00       		.byte	0
 3484 006c 03       		.uleb128 0x3
 3485 006d 0E       		.uleb128 0xe
 3486 006e 3A       		.uleb128 0x3a
 3487 006f 0B       		.uleb128 0xb
 3488 0070 3B       		.uleb128 0x3b
 3489 0071 0B       		.uleb128 0xb
 3490 0072 49       		.uleb128 0x49
 3491 0073 13       		.uleb128 0x13
 3492 0074 00       		.byte	0
 3493 0075 00       		.byte	0
 3494 0076 0B       		.uleb128 0xb
 3495 0077 04       		.uleb128 0x4
 3496 0078 01       		.byte	0x1
 3497 0079 0B       		.uleb128 0xb
 3498 007a 0B       		.uleb128 0xb
 3499 007b 49       		.uleb128 0x49
 3500 007c 13       		.uleb128 0x13
 3501 007d 3A       		.uleb128 0x3a
 3502 007e 0B       		.uleb128 0xb
 3503 007f 3B       		.uleb128 0x3b
 3504 0080 0B       		.uleb128 0xb
 3505 0081 01       		.uleb128 0x1
 3506 0082 13       		.uleb128 0x13
 3507 0083 00       		.byte	0
 3508 0084 00       		.byte	0
 3509 0085 0C       		.uleb128 0xc
 3510 0086 28       		.uleb128 0x28
 3511 0087 00       		.byte	0
 3512 0088 03       		.uleb128 0x3
 3513 0089 0E       		.uleb128 0xe
 3514 008a 1C       		.uleb128 0x1c
 3515 008b 0B       		.uleb128 0xb
 3516 008c 00       		.byte	0
 3517 008d 00       		.byte	0
 3518 008e 0D       		.uleb128 0xd
 3519 008f 01       		.uleb128 0x1
 3520 0090 01       		.byte	0x1
 3521 0091 49       		.uleb128 0x49
 3522 0092 13       		.uleb128 0x13
 3523 0093 01       		.uleb128 0x1
 3524 0094 13       		.uleb128 0x13
 3525 0095 00       		.byte	0
 3526 0096 00       		.byte	0
 3527 0097 0E       		.uleb128 0xe
 3528 0098 21       		.uleb128 0x21
 3529 0099 00       		.byte	0
 3530 009a 49       		.uleb128 0x49
 3531 009b 13       		.uleb128 0x13
 3532 009c 2F       		.uleb128 0x2f
 3533 009d 0B       		.uleb128 0xb
 3534 009e 00       		.byte	0
 3535 009f 00       		.byte	0
 3536 00a0 0F       		.uleb128 0xf
 3537 00a1 0D       		.uleb128 0xd
 3538 00a2 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 115


 3539 00a3 03       		.uleb128 0x3
 3540 00a4 0E       		.uleb128 0xe
 3541 00a5 3A       		.uleb128 0x3a
 3542 00a6 0B       		.uleb128 0xb
 3543 00a7 3B       		.uleb128 0x3b
 3544 00a8 05       		.uleb128 0x5
 3545 00a9 49       		.uleb128 0x49
 3546 00aa 13       		.uleb128 0x13
 3547 00ab 38       		.uleb128 0x38
 3548 00ac 0B       		.uleb128 0xb
 3549 00ad 00       		.byte	0
 3550 00ae 00       		.byte	0
 3551 00af 10       		.uleb128 0x10
 3552 00b0 13       		.uleb128 0x13
 3553 00b1 01       		.byte	0x1
 3554 00b2 0B       		.uleb128 0xb
 3555 00b3 0B       		.uleb128 0xb
 3556 00b4 3A       		.uleb128 0x3a
 3557 00b5 0B       		.uleb128 0xb
 3558 00b6 3B       		.uleb128 0x3b
 3559 00b7 05       		.uleb128 0x5
 3560 00b8 01       		.uleb128 0x1
 3561 00b9 13       		.uleb128 0x13
 3562 00ba 00       		.byte	0
 3563 00bb 00       		.byte	0
 3564 00bc 11       		.uleb128 0x11
 3565 00bd 0D       		.uleb128 0xd
 3566 00be 00       		.byte	0
 3567 00bf 03       		.uleb128 0x3
 3568 00c0 08       		.uleb128 0x8
 3569 00c1 3A       		.uleb128 0x3a
 3570 00c2 0B       		.uleb128 0xb
 3571 00c3 3B       		.uleb128 0x3b
 3572 00c4 05       		.uleb128 0x5
 3573 00c5 49       		.uleb128 0x49
 3574 00c6 13       		.uleb128 0x13
 3575 00c7 38       		.uleb128 0x38
 3576 00c8 0B       		.uleb128 0xb
 3577 00c9 00       		.byte	0
 3578 00ca 00       		.byte	0
 3579 00cb 12       		.uleb128 0x12
 3580 00cc 26       		.uleb128 0x26
 3581 00cd 00       		.byte	0
 3582 00ce 00       		.byte	0
 3583 00cf 00       		.byte	0
 3584 00d0 13       		.uleb128 0x13
 3585 00d1 0F       		.uleb128 0xf
 3586 00d2 00       		.byte	0
 3587 00d3 0B       		.uleb128 0xb
 3588 00d4 0B       		.uleb128 0xb
 3589 00d5 00       		.byte	0
 3590 00d6 00       		.byte	0
 3591 00d7 14       		.uleb128 0x14
 3592 00d8 2E       		.uleb128 0x2e
 3593 00d9 01       		.byte	0x1
 3594 00da 03       		.uleb128 0x3
 3595 00db 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 116


 3596 00dc 3A       		.uleb128 0x3a
 3597 00dd 0B       		.uleb128 0xb
 3598 00de 3B       		.uleb128 0x3b
 3599 00df 05       		.uleb128 0x5
 3600 00e0 27       		.uleb128 0x27
 3601 00e1 19       		.uleb128 0x19
 3602 00e2 11       		.uleb128 0x11
 3603 00e3 01       		.uleb128 0x1
 3604 00e4 12       		.uleb128 0x12
 3605 00e5 06       		.uleb128 0x6
 3606 00e6 40       		.uleb128 0x40
 3607 00e7 18       		.uleb128 0x18
 3608 00e8 9742     		.uleb128 0x2117
 3609 00ea 19       		.uleb128 0x19
 3610 00eb 01       		.uleb128 0x1
 3611 00ec 13       		.uleb128 0x13
 3612 00ed 00       		.byte	0
 3613 00ee 00       		.byte	0
 3614 00ef 15       		.uleb128 0x15
 3615 00f0 34       		.uleb128 0x34
 3616 00f1 00       		.byte	0
 3617 00f2 03       		.uleb128 0x3
 3618 00f3 0E       		.uleb128 0xe
 3619 00f4 3A       		.uleb128 0x3a
 3620 00f5 0B       		.uleb128 0xb
 3621 00f6 3B       		.uleb128 0x3b
 3622 00f7 05       		.uleb128 0x5
 3623 00f8 49       		.uleb128 0x49
 3624 00f9 13       		.uleb128 0x13
 3625 00fa 02       		.uleb128 0x2
 3626 00fb 17       		.uleb128 0x17
 3627 00fc 00       		.byte	0
 3628 00fd 00       		.byte	0
 3629 00fe 16       		.uleb128 0x16
 3630 00ff 898201   		.uleb128 0x4109
 3631 0102 00       		.byte	0
 3632 0103 11       		.uleb128 0x11
 3633 0104 01       		.uleb128 0x1
 3634 0105 31       		.uleb128 0x31
 3635 0106 13       		.uleb128 0x13
 3636 0107 00       		.byte	0
 3637 0108 00       		.byte	0
 3638 0109 17       		.uleb128 0x17
 3639 010a 2E       		.uleb128 0x2e
 3640 010b 00       		.byte	0
 3641 010c 3F       		.uleb128 0x3f
 3642 010d 19       		.uleb128 0x19
 3643 010e 03       		.uleb128 0x3
 3644 010f 0E       		.uleb128 0xe
 3645 0110 3A       		.uleb128 0x3a
 3646 0111 0B       		.uleb128 0xb
 3647 0112 3B       		.uleb128 0x3b
 3648 0113 0B       		.uleb128 0xb
 3649 0114 27       		.uleb128 0x27
 3650 0115 19       		.uleb128 0x19
 3651 0116 49       		.uleb128 0x49
 3652 0117 13       		.uleb128 0x13
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 117


 3653 0118 11       		.uleb128 0x11
 3654 0119 01       		.uleb128 0x1
 3655 011a 12       		.uleb128 0x12
 3656 011b 06       		.uleb128 0x6
 3657 011c 40       		.uleb128 0x40
 3658 011d 18       		.uleb128 0x18
 3659 011e 9742     		.uleb128 0x2117
 3660 0120 19       		.uleb128 0x19
 3661 0121 00       		.byte	0
 3662 0122 00       		.byte	0
 3663 0123 18       		.uleb128 0x18
 3664 0124 2E       		.uleb128 0x2e
 3665 0125 01       		.byte	0x1
 3666 0126 3F       		.uleb128 0x3f
 3667 0127 19       		.uleb128 0x19
 3668 0128 03       		.uleb128 0x3
 3669 0129 0E       		.uleb128 0xe
 3670 012a 3A       		.uleb128 0x3a
 3671 012b 0B       		.uleb128 0xb
 3672 012c 3B       		.uleb128 0x3b
 3673 012d 05       		.uleb128 0x5
 3674 012e 27       		.uleb128 0x27
 3675 012f 19       		.uleb128 0x19
 3676 0130 49       		.uleb128 0x49
 3677 0131 13       		.uleb128 0x13
 3678 0132 11       		.uleb128 0x11
 3679 0133 01       		.uleb128 0x1
 3680 0134 12       		.uleb128 0x12
 3681 0135 06       		.uleb128 0x6
 3682 0136 40       		.uleb128 0x40
 3683 0137 18       		.uleb128 0x18
 3684 0138 9742     		.uleb128 0x2117
 3685 013a 19       		.uleb128 0x19
 3686 013b 01       		.uleb128 0x1
 3687 013c 13       		.uleb128 0x13
 3688 013d 00       		.byte	0
 3689 013e 00       		.byte	0
 3690 013f 19       		.uleb128 0x19
 3691 0140 05       		.uleb128 0x5
 3692 0141 00       		.byte	0
 3693 0142 03       		.uleb128 0x3
 3694 0143 0E       		.uleb128 0xe
 3695 0144 3A       		.uleb128 0x3a
 3696 0145 0B       		.uleb128 0xb
 3697 0146 3B       		.uleb128 0x3b
 3698 0147 05       		.uleb128 0x5
 3699 0148 49       		.uleb128 0x49
 3700 0149 13       		.uleb128 0x13
 3701 014a 02       		.uleb128 0x2
 3702 014b 17       		.uleb128 0x17
 3703 014c 00       		.byte	0
 3704 014d 00       		.byte	0
 3705 014e 1A       		.uleb128 0x1a
 3706 014f 898201   		.uleb128 0x4109
 3707 0152 01       		.byte	0x1
 3708 0153 11       		.uleb128 0x11
 3709 0154 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 118


 3710 0155 31       		.uleb128 0x31
 3711 0156 13       		.uleb128 0x13
 3712 0157 01       		.uleb128 0x1
 3713 0158 13       		.uleb128 0x13
 3714 0159 00       		.byte	0
 3715 015a 00       		.byte	0
 3716 015b 1B       		.uleb128 0x1b
 3717 015c 8A8201   		.uleb128 0x410a
 3718 015f 00       		.byte	0
 3719 0160 02       		.uleb128 0x2
 3720 0161 18       		.uleb128 0x18
 3721 0162 9142     		.uleb128 0x2111
 3722 0164 18       		.uleb128 0x18
 3723 0165 00       		.byte	0
 3724 0166 00       		.byte	0
 3725 0167 1C       		.uleb128 0x1c
 3726 0168 2E       		.uleb128 0x2e
 3727 0169 01       		.byte	0x1
 3728 016a 3F       		.uleb128 0x3f
 3729 016b 19       		.uleb128 0x19
 3730 016c 03       		.uleb128 0x3
 3731 016d 0E       		.uleb128 0xe
 3732 016e 3A       		.uleb128 0x3a
 3733 016f 0B       		.uleb128 0xb
 3734 0170 3B       		.uleb128 0x3b
 3735 0171 05       		.uleb128 0x5
 3736 0172 27       		.uleb128 0x27
 3737 0173 19       		.uleb128 0x19
 3738 0174 11       		.uleb128 0x11
 3739 0175 01       		.uleb128 0x1
 3740 0176 12       		.uleb128 0x12
 3741 0177 06       		.uleb128 0x6
 3742 0178 40       		.uleb128 0x40
 3743 0179 18       		.uleb128 0x18
 3744 017a 9742     		.uleb128 0x2117
 3745 017c 19       		.uleb128 0x19
 3746 017d 01       		.uleb128 0x1
 3747 017e 13       		.uleb128 0x13
 3748 017f 00       		.byte	0
 3749 0180 00       		.byte	0
 3750 0181 1D       		.uleb128 0x1d
 3751 0182 34       		.uleb128 0x34
 3752 0183 00       		.byte	0
 3753 0184 03       		.uleb128 0x3
 3754 0185 0E       		.uleb128 0xe
 3755 0186 3A       		.uleb128 0x3a
 3756 0187 0B       		.uleb128 0xb
 3757 0188 3B       		.uleb128 0x3b
 3758 0189 05       		.uleb128 0x5
 3759 018a 49       		.uleb128 0x49
 3760 018b 13       		.uleb128 0x13
 3761 018c 1C       		.uleb128 0x1c
 3762 018d 0B       		.uleb128 0xb
 3763 018e 00       		.byte	0
 3764 018f 00       		.byte	0
 3765 0190 1E       		.uleb128 0x1e
 3766 0191 898201   		.uleb128 0x4109
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 119


 3767 0194 01       		.byte	0x1
 3768 0195 11       		.uleb128 0x11
 3769 0196 01       		.uleb128 0x1
 3770 0197 31       		.uleb128 0x31
 3771 0198 13       		.uleb128 0x13
 3772 0199 00       		.byte	0
 3773 019a 00       		.byte	0
 3774 019b 1F       		.uleb128 0x1f
 3775 019c 26       		.uleb128 0x26
 3776 019d 00       		.byte	0
 3777 019e 49       		.uleb128 0x49
 3778 019f 13       		.uleb128 0x13
 3779 01a0 00       		.byte	0
 3780 01a1 00       		.byte	0
 3781 01a2 20       		.uleb128 0x20
 3782 01a3 2E       		.uleb128 0x2e
 3783 01a4 00       		.byte	0
 3784 01a5 3F       		.uleb128 0x3f
 3785 01a6 19       		.uleb128 0x19
 3786 01a7 03       		.uleb128 0x3
 3787 01a8 0E       		.uleb128 0xe
 3788 01a9 3A       		.uleb128 0x3a
 3789 01aa 0B       		.uleb128 0xb
 3790 01ab 3B       		.uleb128 0x3b
 3791 01ac 05       		.uleb128 0x5
 3792 01ad 27       		.uleb128 0x27
 3793 01ae 19       		.uleb128 0x19
 3794 01af 11       		.uleb128 0x11
 3795 01b0 01       		.uleb128 0x1
 3796 01b1 12       		.uleb128 0x12
 3797 01b2 06       		.uleb128 0x6
 3798 01b3 40       		.uleb128 0x40
 3799 01b4 18       		.uleb128 0x18
 3800 01b5 9742     		.uleb128 0x2117
 3801 01b7 19       		.uleb128 0x19
 3802 01b8 00       		.byte	0
 3803 01b9 00       		.byte	0
 3804 01ba 21       		.uleb128 0x21
 3805 01bb 34       		.uleb128 0x34
 3806 01bc 00       		.byte	0
 3807 01bd 03       		.uleb128 0x3
 3808 01be 0E       		.uleb128 0xe
 3809 01bf 3A       		.uleb128 0x3a
 3810 01c0 0B       		.uleb128 0xb
 3811 01c1 3B       		.uleb128 0x3b
 3812 01c2 05       		.uleb128 0x5
 3813 01c3 49       		.uleb128 0x49
 3814 01c4 13       		.uleb128 0x13
 3815 01c5 02       		.uleb128 0x2
 3816 01c6 18       		.uleb128 0x18
 3817 01c7 00       		.byte	0
 3818 01c8 00       		.byte	0
 3819 01c9 22       		.uleb128 0x22
 3820 01ca 05       		.uleb128 0x5
 3821 01cb 00       		.byte	0
 3822 01cc 03       		.uleb128 0x3
 3823 01cd 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 120


 3824 01ce 3A       		.uleb128 0x3a
 3825 01cf 0B       		.uleb128 0xb
 3826 01d0 3B       		.uleb128 0x3b
 3827 01d1 05       		.uleb128 0x5
 3828 01d2 49       		.uleb128 0x49
 3829 01d3 13       		.uleb128 0x13
 3830 01d4 02       		.uleb128 0x2
 3831 01d5 18       		.uleb128 0x18
 3832 01d6 00       		.byte	0
 3833 01d7 00       		.byte	0
 3834 01d8 23       		.uleb128 0x23
 3835 01d9 2E       		.uleb128 0x2e
 3836 01da 01       		.byte	0x1
 3837 01db 3F       		.uleb128 0x3f
 3838 01dc 19       		.uleb128 0x19
 3839 01dd 03       		.uleb128 0x3
 3840 01de 0E       		.uleb128 0xe
 3841 01df 3A       		.uleb128 0x3a
 3842 01e0 0B       		.uleb128 0xb
 3843 01e1 3B       		.uleb128 0x3b
 3844 01e2 05       		.uleb128 0x5
 3845 01e3 27       		.uleb128 0x27
 3846 01e4 19       		.uleb128 0x19
 3847 01e5 49       		.uleb128 0x49
 3848 01e6 13       		.uleb128 0x13
 3849 01e7 11       		.uleb128 0x11
 3850 01e8 01       		.uleb128 0x1
 3851 01e9 12       		.uleb128 0x12
 3852 01ea 06       		.uleb128 0x6
 3853 01eb 40       		.uleb128 0x40
 3854 01ec 18       		.uleb128 0x18
 3855 01ed 9642     		.uleb128 0x2116
 3856 01ef 19       		.uleb128 0x19
 3857 01f0 01       		.uleb128 0x1
 3858 01f1 13       		.uleb128 0x13
 3859 01f2 00       		.byte	0
 3860 01f3 00       		.byte	0
 3861 01f4 24       		.uleb128 0x24
 3862 01f5 34       		.uleb128 0x34
 3863 01f6 00       		.byte	0
 3864 01f7 03       		.uleb128 0x3
 3865 01f8 08       		.uleb128 0x8
 3866 01f9 3A       		.uleb128 0x3a
 3867 01fa 0B       		.uleb128 0xb
 3868 01fb 3B       		.uleb128 0x3b
 3869 01fc 05       		.uleb128 0x5
 3870 01fd 49       		.uleb128 0x49
 3871 01fe 13       		.uleb128 0x13
 3872 01ff 02       		.uleb128 0x2
 3873 0200 17       		.uleb128 0x17
 3874 0201 00       		.byte	0
 3875 0202 00       		.byte	0
 3876 0203 25       		.uleb128 0x25
 3877 0204 34       		.uleb128 0x34
 3878 0205 00       		.byte	0
 3879 0206 03       		.uleb128 0x3
 3880 0207 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 121


 3881 0208 3A       		.uleb128 0x3a
 3882 0209 0B       		.uleb128 0xb
 3883 020a 3B       		.uleb128 0x3b
 3884 020b 05       		.uleb128 0x5
 3885 020c 49       		.uleb128 0x49
 3886 020d 13       		.uleb128 0x13
 3887 020e 3F       		.uleb128 0x3f
 3888 020f 19       		.uleb128 0x19
 3889 0210 3C       		.uleb128 0x3c
 3890 0211 19       		.uleb128 0x19
 3891 0212 00       		.byte	0
 3892 0213 00       		.byte	0
 3893 0214 26       		.uleb128 0x26
 3894 0215 34       		.uleb128 0x34
 3895 0216 00       		.byte	0
 3896 0217 03       		.uleb128 0x3
 3897 0218 0E       		.uleb128 0xe
 3898 0219 3A       		.uleb128 0x3a
 3899 021a 0B       		.uleb128 0xb
 3900 021b 3B       		.uleb128 0x3b
 3901 021c 0B       		.uleb128 0xb
 3902 021d 49       		.uleb128 0x49
 3903 021e 13       		.uleb128 0x13
 3904 021f 3F       		.uleb128 0x3f
 3905 0220 19       		.uleb128 0x19
 3906 0221 02       		.uleb128 0x2
 3907 0222 18       		.uleb128 0x18
 3908 0223 00       		.byte	0
 3909 0224 00       		.byte	0
 3910 0225 27       		.uleb128 0x27
 3911 0226 2E       		.uleb128 0x2e
 3912 0227 00       		.byte	0
 3913 0228 3F       		.uleb128 0x3f
 3914 0229 19       		.uleb128 0x19
 3915 022a 3C       		.uleb128 0x3c
 3916 022b 19       		.uleb128 0x19
 3917 022c 6E       		.uleb128 0x6e
 3918 022d 0E       		.uleb128 0xe
 3919 022e 03       		.uleb128 0x3
 3920 022f 0E       		.uleb128 0xe
 3921 0230 3A       		.uleb128 0x3a
 3922 0231 0B       		.uleb128 0xb
 3923 0232 3B       		.uleb128 0x3b
 3924 0233 05       		.uleb128 0x5
 3925 0234 00       		.byte	0
 3926 0235 00       		.byte	0
 3927 0236 28       		.uleb128 0x28
 3928 0237 2E       		.uleb128 0x2e
 3929 0238 00       		.byte	0
 3930 0239 3F       		.uleb128 0x3f
 3931 023a 19       		.uleb128 0x19
 3932 023b 3C       		.uleb128 0x3c
 3933 023c 19       		.uleb128 0x19
 3934 023d 6E       		.uleb128 0x6e
 3935 023e 0E       		.uleb128 0xe
 3936 023f 03       		.uleb128 0x3
 3937 0240 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 122


 3938 0241 3A       		.uleb128 0x3a
 3939 0242 0B       		.uleb128 0xb
 3940 0243 3B       		.uleb128 0x3b
 3941 0244 0B       		.uleb128 0xb
 3942 0245 00       		.byte	0
 3943 0246 00       		.byte	0
 3944 0247 00       		.byte	0
 3945              		.section	.debug_loc,"",%progbits
 3946              	.Ldebug_loc0:
 3947              	.LLST0:
 3948 0000 0C000000 		.4byte	.LVL0
 3949 0004 16000000 		.4byte	.LVL1
 3950 0008 0100     		.2byte	0x1
 3951 000a 51       		.byte	0x51
 3952 000b 16000000 		.4byte	.LVL1
 3953 000f 2C000000 		.4byte	.LFE17
 3954 0013 0100     		.2byte	0x1
 3955 0015 53       		.byte	0x53
 3956 0016 00000000 		.4byte	0
 3957 001a 00000000 		.4byte	0
 3958              	.LLST1:
 3959 001e 06000000 		.4byte	.LVL5
 3960 0022 0A000000 		.4byte	.LVL6
 3961 0026 0100     		.2byte	0x1
 3962 0028 51       		.byte	0x51
 3963 0029 0A000000 		.4byte	.LVL6
 3964 002d 0F000000 		.4byte	.LVL7-1
 3965 0031 0100     		.2byte	0x1
 3966 0033 53       		.byte	0x53
 3967 0034 00000000 		.4byte	0
 3968 0038 00000000 		.4byte	0
 3969              	.LLST2:
 3970 003c 00000000 		.4byte	.LVL8
 3971 0040 37000000 		.4byte	.LVL10-1
 3972 0044 0100     		.2byte	0x1
 3973 0046 50       		.byte	0x50
 3974 0047 37000000 		.4byte	.LVL10-1
 3975 004b 40000000 		.4byte	.LFE1
 3976 004f 0400     		.2byte	0x4
 3977 0051 F3       		.byte	0xf3
 3978 0052 01       		.uleb128 0x1
 3979 0053 50       		.byte	0x50
 3980 0054 9F       		.byte	0x9f
 3981 0055 00000000 		.4byte	0
 3982 0059 00000000 		.4byte	0
 3983              	.LLST3:
 3984 005d 30000000 		.4byte	.LVL9
 3985 0061 3A000000 		.4byte	.LVL11
 3986 0065 0100     		.2byte	0x1
 3987 0067 54       		.byte	0x54
 3988 0068 3A000000 		.4byte	.LVL11
 3989 006c 40000000 		.4byte	.LFE1
 3990 0070 0100     		.2byte	0x1
 3991 0072 50       		.byte	0x50
 3992 0073 00000000 		.4byte	0
 3993 0077 00000000 		.4byte	0
 3994              	.LLST4:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 123


 3995 007b 02000000 		.4byte	.LVL12
 3996 007f 22000000 		.4byte	.LVL14
 3997 0083 0200     		.2byte	0x2
 3998 0085 30       		.byte	0x30
 3999 0086 9F       		.byte	0x9f
 4000 0087 22000000 		.4byte	.LVL14
 4001 008b 2C000000 		.4byte	.LFE2
 4002 008f 0100     		.2byte	0x1
 4003 0091 50       		.byte	0x50
 4004 0092 00000000 		.4byte	0
 4005 0096 00000000 		.4byte	0
 4006              	.LLST5:
 4007 009a 02000000 		.4byte	.LVL15
 4008 009e 12000000 		.4byte	.LVL16
 4009 00a2 0300     		.2byte	0x3
 4010 00a4 09       		.byte	0x9
 4011 00a5 FF       		.byte	0xff
 4012 00a6 9F       		.byte	0x9f
 4013 00a7 12000000 		.4byte	.LVL16
 4014 00ab 14000000 		.4byte	.LVL17
 4015 00af 0100     		.2byte	0x1
 4016 00b1 50       		.byte	0x50
 4017 00b2 18000000 		.4byte	.LVL18
 4018 00b6 25000000 		.4byte	.LVL19-1
 4019 00ba 0100     		.2byte	0x1
 4020 00bc 50       		.byte	0x50
 4021 00bd 26000000 		.4byte	.LVL19
 4022 00c1 30000000 		.4byte	.LVL21
 4023 00c5 0100     		.2byte	0x1
 4024 00c7 50       		.byte	0x50
 4025 00c8 30000000 		.4byte	.LVL21
 4026 00cc 32000000 		.4byte	.LVL22
 4027 00d0 0300     		.2byte	0x3
 4028 00d2 09       		.byte	0x9
 4029 00d3 FF       		.byte	0xff
 4030 00d4 9F       		.byte	0x9f
 4031 00d5 32000000 		.4byte	.LVL22
 4032 00d9 3C000000 		.4byte	.LFE3
 4033 00dd 0100     		.2byte	0x1
 4034 00df 50       		.byte	0x50
 4035 00e0 00000000 		.4byte	0
 4036 00e4 00000000 		.4byte	0
 4037              	.LLST6:
 4038 00e8 12000000 		.4byte	.LVL16
 4039 00ec 30000000 		.4byte	.LVL21
 4040 00f0 0100     		.2byte	0x1
 4041 00f2 54       		.byte	0x54
 4042 00f3 00000000 		.4byte	0
 4043 00f7 00000000 		.4byte	0
 4044              	.LLST7:
 4045 00fb 00000000 		.4byte	.LVL23
 4046 00ff 08000000 		.4byte	.LVL24
 4047 0103 0100     		.2byte	0x1
 4048 0105 50       		.byte	0x50
 4049 0106 08000000 		.4byte	.LVL24
 4050 010a 9C000000 		.4byte	.LFE5
 4051 010e 0400     		.2byte	0x4
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 124


 4052 0110 F3       		.byte	0xf3
 4053 0111 01       		.uleb128 0x1
 4054 0112 50       		.byte	0x50
 4055 0113 9F       		.byte	0x9f
 4056 0114 00000000 		.4byte	0
 4057 0118 00000000 		.4byte	0
 4058              	.LLST8:
 4059 011c 00000000 		.4byte	.LVL23
 4060 0120 10000000 		.4byte	.LVL25
 4061 0124 0100     		.2byte	0x1
 4062 0126 51       		.byte	0x51
 4063 0127 10000000 		.4byte	.LVL25
 4064 012b 9C000000 		.4byte	.LFE5
 4065 012f 0400     		.2byte	0x4
 4066 0131 F3       		.byte	0xf3
 4067 0132 01       		.uleb128 0x1
 4068 0133 51       		.byte	0x51
 4069 0134 9F       		.byte	0x9f
 4070 0135 00000000 		.4byte	0
 4071 0139 00000000 		.4byte	0
 4072              	.LLST9:
 4073 013d 00000000 		.4byte	.LVL23
 4074 0141 18000000 		.4byte	.LVL27
 4075 0145 0100     		.2byte	0x1
 4076 0147 52       		.byte	0x52
 4077 0148 18000000 		.4byte	.LVL27
 4078 014c 96000000 		.4byte	.LVL39
 4079 0150 0100     		.2byte	0x1
 4080 0152 56       		.byte	0x56
 4081 0153 96000000 		.4byte	.LVL39
 4082 0157 9C000000 		.4byte	.LFE5
 4083 015b 0400     		.2byte	0x4
 4084 015d F3       		.byte	0xf3
 4085 015e 01       		.uleb128 0x1
 4086 015f 52       		.byte	0x52
 4087 0160 9F       		.byte	0x9f
 4088 0161 00000000 		.4byte	0
 4089 0165 00000000 		.4byte	0
 4090              	.LLST10:
 4091 0169 14000000 		.4byte	.LVL26
 4092 016d 18000000 		.4byte	.LVL27
 4093 0171 0200     		.2byte	0x2
 4094 0173 30       		.byte	0x30
 4095 0174 9F       		.byte	0x9f
 4096 0175 18000000 		.4byte	.LVL27
 4097 0179 96000000 		.4byte	.LVL38
 4098 017d 0100     		.2byte	0x1
 4099 017f 55       		.byte	0x55
 4100 0180 00000000 		.4byte	0
 4101 0184 00000000 		.4byte	0
 4102              	.LLST11:
 4103 0188 1C000000 		.4byte	.LVL28
 4104 018c 3B000000 		.4byte	.LVL29-1
 4105 0190 0100     		.2byte	0x1
 4106 0192 50       		.byte	0x50
 4107 0193 4E000000 		.4byte	.LVL30
 4108 0197 6D000000 		.4byte	.LVL31-1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 125


 4109 019b 0100     		.2byte	0x1
 4110 019d 50       		.byte	0x50
 4111 019e 74000000 		.4byte	.LVL32
 4112 01a2 85000000 		.4byte	.LVL33-1
 4113 01a6 0100     		.2byte	0x1
 4114 01a8 50       		.byte	0x50
 4115 01a9 00000000 		.4byte	0
 4116 01ad 00000000 		.4byte	0
 4117              	.LLST12:
 4118 01b1 14000000 		.4byte	.LVL26
 4119 01b5 96000000 		.4byte	.LVL37
 4120 01b9 0100     		.2byte	0x1
 4121 01bb 54       		.byte	0x54
 4122 01bc 00000000 		.4byte	0
 4123 01c0 00000000 		.4byte	0
 4124              	.LLST13:
 4125 01c4 00000000 		.4byte	.LVL40
 4126 01c8 13000000 		.4byte	.LVL41-1
 4127 01cc 0100     		.2byte	0x1
 4128 01ce 50       		.byte	0x50
 4129 01cf 13000000 		.4byte	.LVL41-1
 4130 01d3 3C000000 		.4byte	.LFE7
 4131 01d7 0400     		.2byte	0x4
 4132 01d9 F3       		.byte	0xf3
 4133 01da 01       		.uleb128 0x1
 4134 01db 50       		.byte	0x50
 4135 01dc 9F       		.byte	0x9f
 4136 01dd 00000000 		.4byte	0
 4137 01e1 00000000 		.4byte	0
 4138              	.LLST14:
 4139 01e5 08000000 		.4byte	.LVL44
 4140 01e9 40000000 		.4byte	.LFE8
 4141 01ed 0100     		.2byte	0x1
 4142 01ef 53       		.byte	0x53
 4143 01f0 00000000 		.4byte	0
 4144 01f4 00000000 		.4byte	0
 4145              	.LLST15:
 4146 01f8 02000000 		.4byte	.LVL43
 4147 01fc 08000000 		.4byte	.LVL44
 4148 0200 0200     		.2byte	0x2
 4149 0202 30       		.byte	0x30
 4150 0203 9F       		.byte	0x9f
 4151 0204 08000000 		.4byte	.LVL44
 4152 0208 40000000 		.4byte	.LFE8
 4153 020c 0100     		.2byte	0x1
 4154 020e 50       		.byte	0x50
 4155 020f 00000000 		.4byte	0
 4156 0213 00000000 		.4byte	0
 4157              	.LLST16:
 4158 0217 0C000000 		.4byte	.LVL45
 4159 021b 1E000000 		.4byte	.LVL48
 4160 021f 0100     		.2byte	0x1
 4161 0221 52       		.byte	0x52
 4162 0222 20000000 		.4byte	.LVL49
 4163 0226 26000000 		.4byte	.LVL50
 4164 022a 0100     		.2byte	0x1
 4165 022c 51       		.byte	0x51
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 126


 4166 022d 26000000 		.4byte	.LVL50
 4167 0231 36000000 		.4byte	.LVL54
 4168 0235 0100     		.2byte	0x1
 4169 0237 52       		.byte	0x52
 4170 0238 00000000 		.4byte	0
 4171 023c 00000000 		.4byte	0
 4172              	.LLST17:
 4173 0240 00000000 		.4byte	.LVL55
 4174 0244 05000000 		.4byte	.LVL56-1
 4175 0248 0100     		.2byte	0x1
 4176 024a 50       		.byte	0x50
 4177 024b 05000000 		.4byte	.LVL56-1
 4178 024f 08000000 		.4byte	.LFE10
 4179 0253 0400     		.2byte	0x4
 4180 0255 F3       		.byte	0xf3
 4181 0256 01       		.uleb128 0x1
 4182 0257 50       		.byte	0x50
 4183 0258 9F       		.byte	0x9f
 4184 0259 00000000 		.4byte	0
 4185 025d 00000000 		.4byte	0
 4186              	.LLST18:
 4187 0261 00000000 		.4byte	.LVL57
 4188 0265 12000000 		.4byte	.LVL59
 4189 0269 0100     		.2byte	0x1
 4190 026b 50       		.byte	0x50
 4191 026c 12000000 		.4byte	.LVL59
 4192 0270 14000000 		.4byte	.LVL60
 4193 0274 0300     		.2byte	0x3
 4194 0276 70       		.byte	0x70
 4195 0277 01       		.sleb128 1
 4196 0278 9F       		.byte	0x9f
 4197 0279 14000000 		.4byte	.LVL60
 4198 027d 28000000 		.4byte	.LFE11
 4199 0281 0400     		.2byte	0x4
 4200 0283 F3       		.byte	0xf3
 4201 0284 01       		.uleb128 0x1
 4202 0285 50       		.byte	0x50
 4203 0286 9F       		.byte	0x9f
 4204 0287 00000000 		.4byte	0
 4205 028b 00000000 		.4byte	0
 4206              	.LLST19:
 4207 028f 10000000 		.4byte	.LVL58
 4208 0293 14000000 		.4byte	.LVL60
 4209 0297 0100     		.2byte	0x1
 4210 0299 52       		.byte	0x52
 4211 029a 14000000 		.4byte	.LVL60
 4212 029e 28000000 		.4byte	.LFE11
 4213 02a2 0100     		.2byte	0x1
 4214 02a4 50       		.byte	0x50
 4215 02a5 00000000 		.4byte	0
 4216 02a9 00000000 		.4byte	0
 4217              	.LLST20:
 4218 02ad 00000000 		.4byte	.LVL61
 4219 02b1 12000000 		.4byte	.LVL63
 4220 02b5 0100     		.2byte	0x1
 4221 02b7 50       		.byte	0x50
 4222 02b8 12000000 		.4byte	.LVL63
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 127


 4223 02bc 14000000 		.4byte	.LVL64
 4224 02c0 0300     		.2byte	0x3
 4225 02c2 70       		.byte	0x70
 4226 02c3 01       		.sleb128 1
 4227 02c4 9F       		.byte	0x9f
 4228 02c5 14000000 		.4byte	.LVL64
 4229 02c9 28000000 		.4byte	.LFE12
 4230 02cd 0400     		.2byte	0x4
 4231 02cf F3       		.byte	0xf3
 4232 02d0 01       		.uleb128 0x1
 4233 02d1 50       		.byte	0x50
 4234 02d2 9F       		.byte	0x9f
 4235 02d3 00000000 		.4byte	0
 4236 02d7 00000000 		.4byte	0
 4237              	.LLST21:
 4238 02db 10000000 		.4byte	.LVL62
 4239 02df 14000000 		.4byte	.LVL64
 4240 02e3 0100     		.2byte	0x1
 4241 02e5 52       		.byte	0x52
 4242 02e6 14000000 		.4byte	.LVL64
 4243 02ea 28000000 		.4byte	.LFE12
 4244 02ee 0100     		.2byte	0x1
 4245 02f0 50       		.byte	0x50
 4246 02f1 00000000 		.4byte	0
 4247 02f5 00000000 		.4byte	0
 4248              	.LLST22:
 4249 02f9 00000000 		.4byte	.LVL65
 4250 02fd 06000000 		.4byte	.LVL66
 4251 0301 0100     		.2byte	0x1
 4252 0303 50       		.byte	0x50
 4253 0304 06000000 		.4byte	.LVL66
 4254 0308 10000000 		.4byte	.LVL69
 4255 030c 0100     		.2byte	0x1
 4256 030e 54       		.byte	0x54
 4257 030f 10000000 		.4byte	.LVL69
 4258 0313 12000000 		.4byte	.LFE13
 4259 0317 0400     		.2byte	0x4
 4260 0319 F3       		.byte	0xf3
 4261 031a 01       		.uleb128 0x1
 4262 031b 50       		.byte	0x50
 4263 031c 9F       		.byte	0x9f
 4264 031d 00000000 		.4byte	0
 4265 0321 00000000 		.4byte	0
 4266              	.LLST23:
 4267 0325 00000000 		.4byte	.LVL65
 4268 0329 09000000 		.4byte	.LVL67-1
 4269 032d 0100     		.2byte	0x1
 4270 032f 51       		.byte	0x51
 4271 0330 09000000 		.4byte	.LVL67-1
 4272 0334 12000000 		.4byte	.LFE13
 4273 0338 0400     		.2byte	0x4
 4274 033a F3       		.byte	0xf3
 4275 033b 01       		.uleb128 0x1
 4276 033c 51       		.byte	0x51
 4277 033d 9F       		.byte	0x9f
 4278 033e 00000000 		.4byte	0
 4279 0342 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 128


 4280              	.LLST24:
 4281 0346 00000000 		.4byte	.LVL70
 4282 034a 08000000 		.4byte	.LVL72
 4283 034e 0100     		.2byte	0x1
 4284 0350 50       		.byte	0x50
 4285 0351 08000000 		.4byte	.LVL72
 4286 0355 0A000000 		.4byte	.LVL73
 4287 0359 0100     		.2byte	0x1
 4288 035b 53       		.byte	0x53
 4289 035c 0A000000 		.4byte	.LVL73
 4290 0360 0C000000 		.4byte	.LVL74
 4291 0364 0100     		.2byte	0x1
 4292 0366 50       		.byte	0x50
 4293 0367 0C000000 		.4byte	.LVL74
 4294 036b 17000000 		.4byte	.LVL76-1
 4295 036f 0100     		.2byte	0x1
 4296 0371 53       		.byte	0x53
 4297 0372 17000000 		.4byte	.LVL76-1
 4298 0376 1A000000 		.4byte	.LFE14
 4299 037a 0400     		.2byte	0x4
 4300 037c F3       		.byte	0xf3
 4301 037d 01       		.uleb128 0x1
 4302 037e 50       		.byte	0x50
 4303 037f 9F       		.byte	0x9f
 4304 0380 00000000 		.4byte	0
 4305 0384 00000000 		.4byte	0
 4306              	.LLST25:
 4307 0388 04000000 		.4byte	.LVL71
 4308 038c 0C000000 		.4byte	.LVL74
 4309 0390 0200     		.2byte	0x2
 4310 0392 30       		.byte	0x30
 4311 0393 9F       		.byte	0x9f
 4312 0394 0C000000 		.4byte	.LVL74
 4313 0398 14000000 		.4byte	.LVL75
 4314 039c 0100     		.2byte	0x1
 4315 039e 50       		.byte	0x50
 4316 039f 18000000 		.4byte	.LVL76
 4317 03a3 1A000000 		.4byte	.LFE14
 4318 03a7 0100     		.2byte	0x1
 4319 03a9 50       		.byte	0x50
 4320 03aa 00000000 		.4byte	0
 4321 03ae 00000000 		.4byte	0
 4322              	.LLST26:
 4323 03b2 02000000 		.4byte	.LVL77
 4324 03b6 08000000 		.4byte	.LVL78
 4325 03ba 0200     		.2byte	0x2
 4326 03bc 30       		.byte	0x30
 4327 03bd 9F       		.byte	0x9f
 4328 03be 08000000 		.4byte	.LVL78
 4329 03c2 18000000 		.4byte	.LVL83
 4330 03c6 0100     		.2byte	0x1
 4331 03c8 55       		.byte	0x55
 4332 03c9 18000000 		.4byte	.LVL83
 4333 03cd 1A000000 		.4byte	.LFE15
 4334 03d1 0100     		.2byte	0x1
 4335 03d3 50       		.byte	0x50
 4336 03d4 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 129


 4337 03d8 00000000 		.4byte	0
 4338              	.LLST27:
 4339 03dc 02000000 		.4byte	.LVL77
 4340 03e0 08000000 		.4byte	.LVL78
 4341 03e4 0200     		.2byte	0x2
 4342 03e6 30       		.byte	0x30
 4343 03e7 9F       		.byte	0x9f
 4344 03e8 08000000 		.4byte	.LVL78
 4345 03ec 18000000 		.4byte	.LVL82
 4346 03f0 0100     		.2byte	0x1
 4347 03f2 54       		.byte	0x54
 4348 03f3 00000000 		.4byte	0
 4349 03f7 00000000 		.4byte	0
 4350              	.LLST28:
 4351 03fb 02000000 		.4byte	.LVL84
 4352 03ff 06000000 		.4byte	.LVL85
 4353 0403 0200     		.2byte	0x2
 4354 0405 30       		.byte	0x30
 4355 0406 9F       		.byte	0x9f
 4356 0407 06000000 		.4byte	.LVL85
 4357 040b 34000000 		.4byte	.LVL91
 4358 040f 0100     		.2byte	0x1
 4359 0411 55       		.byte	0x55
 4360 0412 00000000 		.4byte	0
 4361 0416 00000000 		.4byte	0
 4362              	.LLST29:
 4363 041a 0E000000 		.4byte	.LVL86
 4364 041e 12000000 		.4byte	.LVL87
 4365 0422 0200     		.2byte	0x2
 4366 0424 30       		.byte	0x30
 4367 0425 9F       		.byte	0x9f
 4368 0426 12000000 		.4byte	.LVL87
 4369 042a 30000000 		.4byte	.LVL90
 4370 042e 0100     		.2byte	0x1
 4371 0430 54       		.byte	0x54
 4372 0431 00000000 		.4byte	0
 4373 0435 00000000 		.4byte	0
 4374              	.LLST30:
 4375 0439 0E000000 		.4byte	.LVL86
 4376 043d 30000000 		.4byte	.LVL90
 4377 0441 0100     		.2byte	0x1
 4378 0443 56       		.byte	0x56
 4379 0444 00000000 		.4byte	0
 4380 0448 00000000 		.4byte	0
 4381              	.LLST31:
 4382 044c 00000000 		.4byte	.LVL92
 4383 0450 04000000 		.4byte	.LVL93
 4384 0454 0100     		.2byte	0x1
 4385 0456 50       		.byte	0x50
 4386 0457 04000000 		.4byte	.LVL93
 4387 045b 14000000 		.4byte	.LFE22
 4388 045f 0400     		.2byte	0x4
 4389 0461 F3       		.byte	0xf3
 4390 0462 01       		.uleb128 0x1
 4391 0463 50       		.byte	0x50
 4392 0464 9F       		.byte	0x9f
 4393 0465 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 130


 4394 0469 00000000 		.4byte	0
 4395              	.LLST32:
 4396 046d 00000000 		.4byte	.LVL96
 4397 0471 12000000 		.4byte	.LVL97
 4398 0475 0100     		.2byte	0x1
 4399 0477 50       		.byte	0x50
 4400 0478 12000000 		.4byte	.LVL97
 4401 047c 1A000000 		.4byte	.LVL98
 4402 0480 0400     		.2byte	0x4
 4403 0482 F3       		.byte	0xf3
 4404 0483 01       		.uleb128 0x1
 4405 0484 50       		.byte	0x50
 4406 0485 9F       		.byte	0x9f
 4407 0486 1A000000 		.4byte	.LVL98
 4408 048a 1C000000 		.4byte	.LVL99
 4409 048e 0100     		.2byte	0x1
 4410 0490 50       		.byte	0x50
 4411 0491 1C000000 		.4byte	.LVL99
 4412 0495 24000000 		.4byte	.LFE23
 4413 0499 0400     		.2byte	0x4
 4414 049b F3       		.byte	0xf3
 4415 049c 01       		.uleb128 0x1
 4416 049d 50       		.byte	0x50
 4417 049e 9F       		.byte	0x9f
 4418 049f 00000000 		.4byte	0
 4419 04a3 00000000 		.4byte	0
 4420              	.LLST33:
 4421 04a7 20000000 		.4byte	.LVL100
 4422 04ab 22000000 		.4byte	.LVL101
 4423 04af 0100     		.2byte	0x1
 4424 04b1 50       		.byte	0x50
 4425 04b2 00000000 		.4byte	0
 4426 04b6 00000000 		.4byte	0
 4427              	.LLST34:
 4428 04ba 00000000 		.4byte	.LVL102
 4429 04be 07000000 		.4byte	.LVL103-1
 4430 04c2 0100     		.2byte	0x1
 4431 04c4 50       		.byte	0x50
 4432 04c5 07000000 		.4byte	.LVL103-1
 4433 04c9 14000000 		.4byte	.LFE20
 4434 04cd 0400     		.2byte	0x4
 4435 04cf F3       		.byte	0xf3
 4436 04d0 01       		.uleb128 0x1
 4437 04d1 50       		.byte	0x50
 4438 04d2 9F       		.byte	0x9f
 4439 04d3 00000000 		.4byte	0
 4440 04d7 00000000 		.4byte	0
 4441              	.LLST35:
 4442 04db 00000000 		.4byte	.LVL102
 4443 04df 07000000 		.4byte	.LVL103-1
 4444 04e3 0100     		.2byte	0x1
 4445 04e5 51       		.byte	0x51
 4446 04e6 07000000 		.4byte	.LVL103-1
 4447 04ea 12000000 		.4byte	.LVL106
 4448 04ee 0100     		.2byte	0x1
 4449 04f0 54       		.byte	0x54
 4450 04f1 12000000 		.4byte	.LVL106
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 131


 4451 04f5 14000000 		.4byte	.LFE20
 4452 04f9 0400     		.2byte	0x4
 4453 04fb F3       		.byte	0xf3
 4454 04fc 01       		.uleb128 0x1
 4455 04fd 51       		.byte	0x51
 4456 04fe 9F       		.byte	0x9f
 4457 04ff 00000000 		.4byte	0
 4458 0503 00000000 		.4byte	0
 4459              	.LLST36:
 4460 0507 08000000 		.4byte	.LVL103
 4461 050b 0A000000 		.4byte	.LVL104
 4462 050f 0100     		.2byte	0x1
 4463 0511 50       		.byte	0x50
 4464 0512 00000000 		.4byte	0
 4465 0516 00000000 		.4byte	0
 4466              	.LLST37:
 4467 051a 04000000 		.4byte	.LVL107
 4468 051e 28000000 		.4byte	.LVL110
 4469 0522 0200     		.2byte	0x2
 4470 0524 30       		.byte	0x30
 4471 0525 9F       		.byte	0x9f
 4472 0526 28000000 		.4byte	.LVL110
 4473 052a 7E000000 		.4byte	.LVL116
 4474 052e 0100     		.2byte	0x1
 4475 0530 55       		.byte	0x55
 4476 0531 80000000 		.4byte	.LVL117
 4477 0535 1E010000 		.4byte	.LVL134
 4478 0539 0100     		.2byte	0x1
 4479 053b 55       		.byte	0x55
 4480 053c 1E010000 		.4byte	.LVL134
 4481 0540 44010000 		.4byte	.LFE16
 4482 0544 0100     		.2byte	0x1
 4483 0546 50       		.byte	0x50
 4484 0547 00000000 		.4byte	0
 4485 054b 00000000 		.4byte	0
 4486              	.LLST38:
 4487 054f 22000000 		.4byte	.LVL109
 4488 0553 28000000 		.4byte	.LVL110
 4489 0557 0200     		.2byte	0x2
 4490 0559 30       		.byte	0x30
 4491 055a 9F       		.byte	0x9f
 4492 055b 28000000 		.4byte	.LVL110
 4493 055f AC000000 		.4byte	.LVL120
 4494 0563 0100     		.2byte	0x1
 4495 0565 56       		.byte	0x56
 4496 0566 AC000000 		.4byte	.LVL120
 4497 056a F8000000 		.4byte	.LVL126
 4498 056e 0100     		.2byte	0x1
 4499 0570 54       		.byte	0x54
 4500 0571 FA000000 		.4byte	.LVL127
 4501 0575 1E010000 		.4byte	.LVL133
 4502 0579 0100     		.2byte	0x1
 4503 057b 54       		.byte	0x54
 4504 057c 00000000 		.4byte	0
 4505 0580 00000000 		.4byte	0
 4506              	.LLST39:
 4507 0584 04000000 		.4byte	.LVL107
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 132


 4508 0588 28000000 		.4byte	.LVL110
 4509 058c 0200     		.2byte	0x2
 4510 058e 30       		.byte	0x30
 4511 058f 9F       		.byte	0x9f
 4512 0590 76000000 		.4byte	.LVL115
 4513 0594 A4000000 		.4byte	.LVL119
 4514 0598 0100     		.2byte	0x1
 4515 059a 50       		.byte	0x50
 4516 059b 00000000 		.4byte	0
 4517 059f 00000000 		.4byte	0
 4518              	.LLST40:
 4519 05a3 32000000 		.4byte	.LVL111
 4520 05a7 A4000000 		.4byte	.LVL119
 4521 05ab 0100     		.2byte	0x1
 4522 05ad 54       		.byte	0x54
 4523 05ae B6000000 		.4byte	.LVL121
 4524 05b2 F2000000 		.4byte	.LVL125
 4525 05b6 0100     		.2byte	0x1
 4526 05b8 56       		.byte	0x56
 4527 05b9 04010000 		.4byte	.LVL128
 4528 05bd 09010000 		.4byte	.LVL129-1
 4529 05c1 0100     		.2byte	0x1
 4530 05c3 51       		.byte	0x51
 4531 05c4 00000000 		.4byte	0
 4532 05c8 00000000 		.4byte	0
 4533              	.LLST41:
 4534 05cc 02000000 		.4byte	.LVL135
 4535 05d0 06000000 		.4byte	.LVL136
 4536 05d4 0200     		.2byte	0x2
 4537 05d6 30       		.byte	0x30
 4538 05d7 9F       		.byte	0x9f
 4539 05d8 06000000 		.4byte	.LVL136
 4540 05dc 1C000000 		.4byte	.LVL140
 4541 05e0 0100     		.2byte	0x1
 4542 05e2 54       		.byte	0x54
 4543 05e3 00000000 		.4byte	0
 4544 05e7 00000000 		.4byte	0
 4545              	.LLST42:
 4546 05eb 10000000 		.4byte	.LVL137
 4547 05ef 15000000 		.4byte	.LVL138-1
 4548 05f3 0100     		.2byte	0x1
 4549 05f5 51       		.byte	0x51
 4550 05f6 00000000 		.4byte	0
 4551 05fa 00000000 		.4byte	0
 4552              		.section	.debug_aranges,"",%progbits
 4553 0000 D4000000 		.4byte	0xd4
 4554 0004 0200     		.2byte	0x2
 4555 0006 00000000 		.4byte	.Ldebug_info0
 4556 000a 04       		.byte	0x4
 4557 000b 00       		.byte	0
 4558 000c 0000     		.2byte	0
 4559 000e 0000     		.2byte	0
 4560 0010 00000000 		.4byte	.LFB17
 4561 0014 2C000000 		.4byte	.LFE17-.LFB17
 4562 0018 00000000 		.4byte	.LFB18
 4563 001c 08000000 		.4byte	.LFE18-.LFB18
 4564 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 133


 4565 0024 1C000000 		.4byte	.LFE6-.LFB6
 4566 0028 00000000 		.4byte	.LFB0
 4567 002c 10000000 		.4byte	.LFE0-.LFB0
 4568 0030 00000000 		.4byte	.LFB1
 4569 0034 40000000 		.4byte	.LFE1-.LFB1
 4570 0038 00000000 		.4byte	.LFB2
 4571 003c 2C000000 		.4byte	.LFE2-.LFB2
 4572 0040 00000000 		.4byte	.LFB3
 4573 0044 3C000000 		.4byte	.LFE3-.LFB3
 4574 0048 00000000 		.4byte	.LFB5
 4575 004c 9C000000 		.4byte	.LFE5-.LFB5
 4576 0050 00000000 		.4byte	.LFB7
 4577 0054 3C000000 		.4byte	.LFE7-.LFB7
 4578 0058 00000000 		.4byte	.LFB8
 4579 005c 40000000 		.4byte	.LFE8-.LFB8
 4580 0060 00000000 		.4byte	.LFB9
 4581 0064 02000000 		.4byte	.LFE9-.LFB9
 4582 0068 00000000 		.4byte	.LFB10
 4583 006c 08000000 		.4byte	.LFE10-.LFB10
 4584 0070 00000000 		.4byte	.LFB11
 4585 0074 28000000 		.4byte	.LFE11-.LFB11
 4586 0078 00000000 		.4byte	.LFB12
 4587 007c 28000000 		.4byte	.LFE12-.LFB12
 4588 0080 00000000 		.4byte	.LFB13
 4589 0084 12000000 		.4byte	.LFE13-.LFB13
 4590 0088 00000000 		.4byte	.LFB14
 4591 008c 1A000000 		.4byte	.LFE14-.LFB14
 4592 0090 00000000 		.4byte	.LFB15
 4593 0094 1A000000 		.4byte	.LFE15-.LFB15
 4594 0098 00000000 		.4byte	.LFB21
 4595 009c 3C000000 		.4byte	.LFE21-.LFB21
 4596 00a0 00000000 		.4byte	.LFB22
 4597 00a4 14000000 		.4byte	.LFE22-.LFB22
 4598 00a8 00000000 		.4byte	.LFB23
 4599 00ac 24000000 		.4byte	.LFE23-.LFB23
 4600 00b0 00000000 		.4byte	.LFB20
 4601 00b4 14000000 		.4byte	.LFE20-.LFB20
 4602 00b8 00000000 		.4byte	.LFB16
 4603 00bc 44010000 		.4byte	.LFE16-.LFB16
 4604 00c0 00000000 		.4byte	.LFB19
 4605 00c4 24000000 		.4byte	.LFE19-.LFB19
 4606 00c8 00000000 		.4byte	.LFB4
 4607 00cc 1C000000 		.4byte	.LFE4-.LFB4
 4608 00d0 00000000 		.4byte	0
 4609 00d4 00000000 		.4byte	0
 4610              		.section	.debug_ranges,"",%progbits
 4611              	.Ldebug_ranges0:
 4612 0000 00000000 		.4byte	.LFB17
 4613 0004 2C000000 		.4byte	.LFE17
 4614 0008 00000000 		.4byte	.LFB18
 4615 000c 08000000 		.4byte	.LFE18
 4616 0010 00000000 		.4byte	.LFB6
 4617 0014 1C000000 		.4byte	.LFE6
 4618 0018 00000000 		.4byte	.LFB0
 4619 001c 10000000 		.4byte	.LFE0
 4620 0020 00000000 		.4byte	.LFB1
 4621 0024 40000000 		.4byte	.LFE1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 134


 4622 0028 00000000 		.4byte	.LFB2
 4623 002c 2C000000 		.4byte	.LFE2
 4624 0030 00000000 		.4byte	.LFB3
 4625 0034 3C000000 		.4byte	.LFE3
 4626 0038 00000000 		.4byte	.LFB5
 4627 003c 9C000000 		.4byte	.LFE5
 4628 0040 00000000 		.4byte	.LFB7
 4629 0044 3C000000 		.4byte	.LFE7
 4630 0048 00000000 		.4byte	.LFB8
 4631 004c 40000000 		.4byte	.LFE8
 4632 0050 00000000 		.4byte	.LFB9
 4633 0054 02000000 		.4byte	.LFE9
 4634 0058 00000000 		.4byte	.LFB10
 4635 005c 08000000 		.4byte	.LFE10
 4636 0060 00000000 		.4byte	.LFB11
 4637 0064 28000000 		.4byte	.LFE11
 4638 0068 00000000 		.4byte	.LFB12
 4639 006c 28000000 		.4byte	.LFE12
 4640 0070 00000000 		.4byte	.LFB13
 4641 0074 12000000 		.4byte	.LFE13
 4642 0078 00000000 		.4byte	.LFB14
 4643 007c 1A000000 		.4byte	.LFE14
 4644 0080 00000000 		.4byte	.LFB15
 4645 0084 1A000000 		.4byte	.LFE15
 4646 0088 00000000 		.4byte	.LFB21
 4647 008c 3C000000 		.4byte	.LFE21
 4648 0090 00000000 		.4byte	.LFB22
 4649 0094 14000000 		.4byte	.LFE22
 4650 0098 00000000 		.4byte	.LFB23
 4651 009c 24000000 		.4byte	.LFE23
 4652 00a0 00000000 		.4byte	.LFB20
 4653 00a4 14000000 		.4byte	.LFE20
 4654 00a8 00000000 		.4byte	.LFB16
 4655 00ac 44010000 		.4byte	.LFE16
 4656 00b0 00000000 		.4byte	.LFB19
 4657 00b4 24000000 		.4byte	.LFE19
 4658 00b8 00000000 		.4byte	.LFB4
 4659 00bc 1C000000 		.4byte	.LFE4
 4660 00c0 00000000 		.4byte	0
 4661 00c4 00000000 		.4byte	0
 4662              		.section	.debug_line,"",%progbits
 4663              	.Ldebug_line0:
 4664 0000 39040000 		.section	.debug_str,"MS",%progbits,1
 4664      0200D600 
 4664      00000201 
 4664      FB0E0D00 
 4664      01010101 
 4665              	.LASF150:
 4666 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 4666      656E7365 
 4666      5F537343 
 4666      53444765 
 4666      74436F6C 
 4667              	.LASF126:
 4668 0022 73656E73 		.ascii	"sensorElement\000"
 4668      6F72456C 
 4668      656D656E 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 135


 4668      7400
 4669              	.LASF122:
 4670 0030 7363616E 		.ascii	"scanStatus\000"
 4670      53746174 
 4670      757300
 4671              	.LASF116:
 4672 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 4672      656E7365 
 4672      5F537343 
 4672      53444469 
 4672      7361626C 
 4673              	.LASF135:
 4674 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4674      656E7365 
 4674      5F537353 
 4674      6574494F 
 4674      73496E44 
 4675              	.LASF170:
 4676 0075 43617053 		.ascii	"CapSense_widgetIndex\000"
 4676      656E7365 
 4676      5F776964 
 4676      67657449 
 4676      6E646578 
 4677              	.LASF82:
 4678 008a 736E7254 		.ascii	"snrTestWidgetId\000"
 4678      65737457 
 4678      69646765 
 4678      74496400 
 4679              	.LASF40:
 4680 009a 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4680      656E7365 
 4680      5F554E44 
 4680      4546494E 
 4680      45445F45 
 4681              	.LASF8:
 4682 00af 756E7369 		.ascii	"unsigned int\000"
 4682      676E6564 
 4682      20696E74 
 4682      00
 4683              	.LASF73:
 4684 00bc 7363616E 		.ascii	"scanCounter\000"
 4684      436F756E 
 4684      74657200 
 4685              	.LASF71:
 4686 00c8 6877436C 		.ascii	"hwClock\000"
 4686      6F636B00 
 4687              	.LASF92:
 4688 00d0 6D61736B 		.ascii	"mask\000"
 4688      00
 4689              	.LASF166:
 4690 00d5 696E6974 		.ascii	"initStatus\000"
 4690      53746174 
 4690      757300
 4691              	.LASF137:
 4692 00e0 72656756 		.ascii	"regValue\000"
 4692      616C7565 
 4692      00
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 136


 4693              	.LASF130:
 4694 00e9 696E7465 		.ascii	"interruptState\000"
 4694      72727570 
 4694      74537461 
 4694      746500
 4695              	.LASF16:
 4696 00f8 72656738 		.ascii	"reg8\000"
 4696      00
 4697              	.LASF159:
 4698 00fd 6C667372 		.ascii	"lfsrScale\000"
 4698      5363616C 
 4698      6500
 4699              	.LASF23:
 4700 0107 69446163 		.ascii	"iDacGain\000"
 4700      4761696E 
 4700      00
 4701              	.LASF190:
 4702 0110 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 4702      7453656E 
 4702      73655F54 
 4702      756E6553 
 4702      656E7369 
 4703              	.LASF26:
 4704 012b 736E7343 		.ascii	"snsClkInputClock\000"
 4704      6C6B496E 
 4704      70757443 
 4704      6C6F636B 
 4704      00
 4705              	.LASF134:
 4706 013c 6D6F6465 		.ascii	"mode\000"
 4706      00
 4707              	.LASF194:
 4708 0141 43617053 		.ascii	"CapSense_IsBusy\000"
 4708      656E7365 
 4708      5F497342 
 4708      75737900 
 4709              	.LASF140:
 4710 0151 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4710      656E7365 
 4710      5F537353 
 4710      65744D6F 
 4710      64436C6B 
 4711              	.LASF61:
 4712 0172 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4712      656E7365 
 4712      5F52414D 
 4712      5F57445F 
 4712      4C495354 
 4713              	.LASF109:
 4714 018e 69697246 		.ascii	"iirFilterCoeff\000"
 4714      696C7465 
 4714      72436F65 
 4714      666600
 4715              	.LASF162:
 4716 019d 63705769 		.ascii	"cpWidget\000"
 4716      64676574 
 4716      00
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 137


 4717              	.LASF128:
 4718 01a6 656C7464 		.ascii	"eltdNum\000"
 4718      4E756D00 
 4719              	.LASF152:
 4720 01ae 70747257 		.ascii	"ptrWdgt\000"
 4720      64677400 
 4721              	.LASF157:
 4722 01b6 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 4722      656E7365 
 4722      5F537353 
 4722      65745769 
 4722      64676574 
 4723              	.LASF136:
 4724 01d6 6C6F6F70 		.ascii	"loopIndex\000"
 4724      496E6465 
 4724      7800
 4725              	.LASF12:
 4726 01e0 666C6F61 		.ascii	"float\000"
 4726      7400
 4727              	.LASF95:
 4728 01e6 73686966 		.ascii	"shift\000"
 4728      7400
 4729              	.LASF147:
 4730 01ec 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 4730      656E7365 
 4730      5F537343 
 4730      6C656172 
 4730      43534453 
 4731              	.LASF180:
 4732 0207 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 4732      656E7365 
 4732      5F435344 
 4732      53657475 
 4732      70576964 
 4733              	.LASF81:
 4734 021f 736E734C 		.ascii	"snsList\000"
 4734      69737400 
 4735              	.LASF7:
 4736 0227 6C6F6E67 		.ascii	"long long unsigned int\000"
 4736      206C6F6E 
 4736      6720756E 
 4736      7369676E 
 4736      65642069 
 4737              	.LASF171:
 4738 023e 43617053 		.ascii	"CapSense_sensorIndex\000"
 4738      656E7365 
 4738      5F73656E 
 4738      736F7249 
 4738      6E646578 
 4739              	.LASF96:
 4740 0253 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4740      656E7365 
 4740      5F464C41 
 4740      53485F49 
 4740      4F5F5354 
 4741              	.LASF83:
 4742 026c 736E7254 		.ascii	"snrTestSensorId\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 138


 4742      65737453 
 4742      656E736F 
 4742      72496400 
 4743              	.LASF108:
 4744 027c 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4744      4E6F6973 
 4744      65456E76 
 4744      6C7000
 4745              	.LASF104:
 4746 028b 77646774 		.ascii	"wdgtType\000"
 4746      54797065 
 4746      00
 4747              	.LASF158:
 4748 0294 6C667372 		.ascii	"lfsrSize\000"
 4748      53697A65 
 4748      00
 4749              	.LASF191:
 4750 029d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4750      43313120 
 4750      352E342E 
 4750      31203230 
 4750      31363036 
 4751 02d0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4751      20726576 
 4751      6973696F 
 4751      6E203233 
 4751      37373135 
 4752 0303 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4752      66756E63 
 4752      74696F6E 
 4752      2D736563 
 4752      74696F6E 
 4753              	.LASF161:
 4754 032b 6175746F 		.ascii	"autoTuneStatus\000"
 4754      54756E65 
 4754      53746174 
 4754      757300
 4755              	.LASF79:
 4756 033a 6D6F6443 		.ascii	"modCsdClk\000"
 4756      7364436C 
 4756      6B00
 4757              	.LASF67:
 4758 0344 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4758      656E7365 
 4758      5F52414D 
 4758      5F534E53 
 4758      5F535452 
 4759              	.LASF153:
 4760 035c 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 4760      656E7365 
 4760      5F537343 
 4760      53444361 
 4760      6C635072 
 4761              	.LASF27:
 4762 0376 63616C54 		.ascii	"calTarget\000"
 4762      61726765 
 4762      7400
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 139


 4763              	.LASF89:
 4764 0380 64725074 		.ascii	"drPtr\000"
 4764      7200
 4765              	.LASF141:
 4766 0386 6D6F6443 		.ascii	"modClk\000"
 4766      6C6B00
 4767              	.LASF29:
 4768 038d 73696750 		.ascii	"sigPFC\000"
 4768      464300
 4769              	.LASF50:
 4770 0394 68797374 		.ascii	"hysteresis\000"
 4770      65726573 
 4770      697300
 4771              	.LASF110:
 4772 039f 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4772      656E7365 
 4772      5F464C41 
 4772      53485F57 
 4772      445F5354 
 4773              	.LASF52:
 4774 03b8 6C6F7742 		.ascii	"lowBslnRst\000"
 4774      736C6E52 
 4774      737400
 4775              	.LASF103:
 4776 03c3 746F7461 		.ascii	"totalNumSns\000"
 4776      6C4E756D 
 4776      536E7300 
 4777              	.LASF39:
 4778 03cf 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4778      5453454E 
 4778      53455F43 
 4778      53445F4E 
 4778      4F495345 
 4779              	.LASF163:
 4780 03f4 6175746F 		.ascii	"autoTuneConfig\000"
 4780      54756E65 
 4780      436F6E66 
 4780      696700
 4781              	.LASF48:
 4782 0403 6E6F6973 		.ascii	"noiseTh\000"
 4782      65546800 
 4783              	.LASF14:
 4784 040b 63686172 		.ascii	"char\000"
 4784      00
 4785              	.LASF183:
 4786 0410 43794578 		.ascii	"CyExitCriticalSection\000"
 4786      69744372 
 4786      69746963 
 4786      616C5365 
 4786      6374696F 
 4787              	.LASF93:
 4788 0426 6873696F 		.ascii	"hsiomShift\000"
 4788      6D536869 
 4788      667400
 4789              	.LASF10:
 4790 0431 75696E74 		.ascii	"uint16\000"
 4790      313600
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 140


 4791              	.LASF114:
 4792 0438 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 4792      656E7365 
 4792      5F537354 
 4792      72696D49 
 4792      64616373 
 4793              	.LASF46:
 4794 0455 7265736F 		.ascii	"resolution\000"
 4794      6C757469 
 4794      6F6E00
 4795              	.LASF74:
 4796 0460 73746174 		.ascii	"status\000"
 4796      757300
 4797              	.LASF144:
 4798 0467 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 4798      656E7365 
 4798      5F43616C 
 4798      69627261 
 4798      74655769 
 4799              	.LASF20:
 4800 0480 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4800      656E7365 
 4800      5F4C4F57 
 4800      5F42534C 
 4800      4E5F5253 
 4801              	.LASF142:
 4802 049b 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 4802      656E7365 
 4802      5F537353 
 4802      6574536E 
 4802      73436C6F 
 4803              	.LASF45:
 4804 04b9 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4804      656E7365 
 4804      5F53454E 
 4804      53455F4D 
 4804      4554484F 
 4805              	.LASF66:
 4806 04d4 69646163 		.ascii	"idacComp\000"
 4806      436F6D70 
 4806      00
 4807              	.LASF88:
 4808 04dd 70635074 		.ascii	"pcPtr\000"
 4808      7200
 4809              	.LASF193:
 4810 04e3 443A5C47 		.ascii	"D:\\GIT\\Microcontroller System Design Projects\\HW"
 4810      49545C4D 
 4810      6963726F 
 4810      636F6E74 
 4810      726F6C6C 
 4811 0513 362D204D 		.ascii	"6- MotorControll\\MotorControll.cydsn\000"
 4811      6F746F72 
 4811      436F6E74 
 4811      726F6C6C 
 4811      5C4D6F74 
 4812              	.LASF6:
 4813 0538 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 141


 4813      206C6F6E 
 4813      6720696E 
 4813      7400
 4814              	.LASF105:
 4815 0546 6E756D43 		.ascii	"numCols\000"
 4815      6F6C7300 
 4816              	.LASF185:
 4817 054e 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 4817      656E7365 
 4817      5F537343 
 4817      5344496E 
 4817      69746961 
 4818              	.LASF51:
 4819 0567 6F6E4465 		.ascii	"onDebounce\000"
 4819      626F756E 
 4819      636500
 4820              	.LASF139:
 4821 0572 61646472 		.ascii	"address\000"
 4821      65737300 
 4822              	.LASF145:
 4823 057a 63616C69 		.ascii	"calibrateStatus\000"
 4823      62726174 
 4823      65537461 
 4823      74757300 
 4824              	.LASF80:
 4825 058a 77646774 		.ascii	"wdgtList\000"
 4825      4C697374 
 4825      00
 4826              	.LASF146:
 4827 0593 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 4827      656E7365 
 4827      5F43616C 
 4827      69627261 
 4827      7465416C 
 4828              	.LASF112:
 4829 05b0 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4829      656E7365 
 4829      5F464C41 
 4829      53485F53 
 4829      54525543 
 4830              	.LASF121:
 4831 05c6 43617053 		.ascii	"CapSense_Scan\000"
 4831      656E7365 
 4831      5F536361 
 4831      6E00
 4832              	.LASF167:
 4833 05d4 43617053 		.ascii	"CapSense_dsRam\000"
 4833      656E7365 
 4833      5F647352 
 4833      616D00
 4834              	.LASF85:
 4835 05e3 736E7254 		.ascii	"snrTestRawCount\000"
 4835      65737452 
 4835      6177436F 
 4835      756E7400 
 4836              	.LASF160:
 4837 05f3 43617053 		.ascii	"CapSense_SsAutoTune\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 142


 4837      656E7365 
 4837      5F537341 
 4837      75746F54 
 4837      756E6500 
 4838              	.LASF49:
 4839 0607 6E4E6F69 		.ascii	"nNoiseTh\000"
 4839      73655468 
 4839      00
 4840              	.LASF78:
 4841 0610 63736430 		.ascii	"csd0Config\000"
 4841      436F6E66 
 4841      696700
 4842              	.LASF18:
 4843 061b 63796973 		.ascii	"cyisraddress\000"
 4843      72616464 
 4843      72657373 
 4843      00
 4844              	.LASF57:
 4845 0628 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4845      656E7365 
 4845      5F52414D 
 4845      5F57445F 
 4845      42415345 
 4846              	.LASF87:
 4847 0644 6873696F 		.ascii	"hsiomPtr\000"
 4847      6D507472 
 4847      00
 4848              	.LASF11:
 4849 064d 75696E74 		.ascii	"uint32\000"
 4849      333200
 4850              	.LASF100:
 4851 0654 70747232 		.ascii	"ptr2FltrHistory\000"
 4851      466C7472 
 4851      48697374 
 4851      6F727900 
 4852              	.LASF176:
 4853 0664 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 4853      656E7365 
 4853      5F637572 
 4853      536E7349 
 4853      4F507472 
 4854              	.LASF30:
 4855 0679 69446163 		.ascii	"iDac\000"
 4855      00
 4856              	.LASF143:
 4857 067e 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 4857      656E7365 
 4857      5F537353 
 4857      6574436C 
 4857      6F636B44 
 4858              	.LASF28:
 4859 069a 70747253 		.ascii	"ptrSenseClk\000"
 4859      656E7365 
 4859      436C6B00 
 4860              	.LASF124:
 4861 06a6 77646774 		.ascii	"wdgtIndex\000"
 4861      496E6465 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 143


 4861      7800
 4862              	.LASF148:
 4863 06b0 736E7349 		.ascii	"snsIndex\000"
 4863      6E646578 
 4863      00
 4864              	.LASF44:
 4865 06b9 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4865      656E7365 
 4865      5F53454E 
 4865      53455F4D 
 4865      4554484F 
 4866              	.LASF113:
 4867 06d5 6C6F6E67 		.ascii	"long double\000"
 4867      20646F75 
 4867      626C6500 
 4868              	.LASF21:
 4869 06e1 736E7343 		.ascii	"snsClkConstantR\000"
 4869      6C6B436F 
 4869      6E737461 
 4869      6E745200 
 4870              	.LASF17:
 4871 06f1 72656733 		.ascii	"reg32\000"
 4871      3200
 4872              	.LASF84:
 4873 06f7 736E7254 		.ascii	"snrTestScanCounter\000"
 4873      65737453 
 4873      63616E43 
 4873      6F756E74 
 4873      657200
 4874              	.LASF69:
 4875 070a 636F6E66 		.ascii	"configId\000"
 4875      69674964 
 4875      00
 4876              	.LASF99:
 4877 0713 70747232 		.ascii	"ptr2SnsRam\000"
 4877      536E7352 
 4877      616D00
 4878              	.LASF165:
 4879 071e 43617053 		.ascii	"CapSense_SsInitialize\000"
 4879      656E7365 
 4879      5F537349 
 4879      6E697469 
 4879      616C697A 
 4880              	.LASF177:
 4881 0734 43617053 		.ascii	"CapSense_calibratedIdac\000"
 4881      656E7365 
 4881      5F63616C 
 4881      69627261 
 4881      74656449 
 4882              	.LASF77:
 4883 074c 736E7353 		.ascii	"snsStatus\000"
 4883      74617475 
 4883      7300
 4884              	.LASF55:
 4885 0756 736E7343 		.ascii	"snsClkSource\000"
 4885      6C6B536F 
 4885      75726365 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 144


 4885      00
 4886              	.LASF179:
 4887 0763 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 4887      656E7365 
 4887      5F537343 
 4887      5344456C 
 4887      65637472 
 4888              	.LASF106:
 4889 0780 78526573 		.ascii	"xResolution\000"
 4889      6F6C7574 
 4889      696F6E00 
 4890              	.LASF138:
 4891 078c 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4891      656E7365 
 4891      5F537349 
 4891      7372496E 
 4891      69746961 
 4892              	.LASF2:
 4893 07a5 73686F72 		.ascii	"short int\000"
 4893      7420696E 
 4893      7400
 4894              	.LASF86:
 4895 07af 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4895      656E7365 
 4895      5F52414D 
 4895      5F535452 
 4895      55435400 
 4896              	.LASF188:
 4897 07c3 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 4897      656E7365 
 4897      5F435344 
 4897      44697363 
 4897      6F6E6E65 
 4898              	.LASF4:
 4899 07dd 6C6F6E67 		.ascii	"long int\000"
 4899      20696E74 
 4899      00
 4900              	.LASF75:
 4901 07e6 77646774 		.ascii	"wdgtEnable\000"
 4901      456E6162 
 4901      6C6500
 4902              	.LASF64:
 4903 07f1 64696666 		.ascii	"diff\000"
 4903      00
 4904              	.LASF72:
 4905 07f6 74756E65 		.ascii	"tunerCmd\000"
 4905      72436D64 
 4905      00
 4906              	.LASF42:
 4907 07ff 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4907      656E7365 
 4907      5F53454E 
 4907      53455F4D 
 4907      4554484F 
 4908              	.LASF90:
 4909 081b 70735074 		.ascii	"psPtr\000"
 4909      7200
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 145


 4910              	.LASF120:
 4911 0821 43617053 		.ascii	"CapSense_SetupWidget\000"
 4911      656E7365 
 4911      5F536574 
 4911      75705769 
 4911      64676574 
 4912              	.LASF187:
 4913 0836 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 4913      656E7365 
 4913      5F435344 
 4913      43616C69 
 4913      62726174 
 4914              	.LASF178:
 4915 0852 43617053 		.ascii	"CapSense_calibratedRawcount\000"
 4915      656E7365 
 4915      5F63616C 
 4915      69627261 
 4915      74656452 
 4916              	.LASF168:
 4917 086e 43617053 		.ascii	"CapSense_dsFlash\000"
 4917      656E7365 
 4917      5F647346 
 4917      6C617368 
 4917      00
 4918              	.LASF24:
 4919 087f 66696E67 		.ascii	"fingerCap\000"
 4919      65724361 
 4919      7000
 4920              	.LASF76:
 4921 0889 77646774 		.ascii	"wdgtStatus\000"
 4921      53746174 
 4921      757300
 4922              	.LASF189:
 4923 0894 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 4923      7453656E 
 4923      73655F54 
 4923      756E6550 
 4923      72657363 
 4924              	.LASF192:
 4925 08ae 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 4925      72617465 
 4925      645F536F 
 4925      75726365 
 4925      5C50536F 
 4926              	.LASF59:
 4927 08d8 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 4927      656E7365 
 4927      5F52414D 
 4927      5F57445F 
 4927      534C4944 
 4928              	.LASF41:
 4929 08f6 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4929      656E7365 
 4929      5F53454E 
 4929      53455F4D 
 4929      4554484F 
 4930              	.LASF174:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 146


 4931 0912 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 4931      656E7365 
 4931      5F637572 
 4931      72656E74 
 4931      53656E73 
 4932              	.LASF155:
 4933 092e 70727353 		.ascii	"prsSize\000"
 4933      697A6500 
 4934              	.LASF56:
 4935 0936 73697A65 		.ascii	"sizetype\000"
 4935      74797065 
 4935      00
 4936              	.LASF94:
 4937 093f 64725368 		.ascii	"drShift\000"
 4937      69667400 
 4938              	.LASF5:
 4939 0947 6C6F6E67 		.ascii	"long unsigned int\000"
 4939      20756E73 
 4939      69676E65 
 4939      6420696E 
 4939      7400
 4940              	.LASF151:
 4941 0959 72657456 		.ascii	"retVal\000"
 4941      616C00
 4942              	.LASF22:
 4943 0960 76526566 		.ascii	"vRef\000"
 4943      00
 4944              	.LASF53:
 4945 0965 69646163 		.ascii	"idacMod\000"
 4945      4D6F6400 
 4946              	.LASF186:
 4947 096d 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 4947      656E7365 
 4947      5F495352 
 4947      5F537461 
 4947      72744578 
 4948              	.LASF101:
 4949 0982 70747232 		.ascii	"ptr2DebounceArr\000"
 4949      4465626F 
 4949      756E6365 
 4949      41727200 
 4950              	.LASF115:
 4951 0992 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 4951      656E7365 
 4951      5F537354 
 4951      72696D49 
 4951      64616373 
 4952              	.LASF184:
 4953 09a7 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 4953      656E7365 
 4953      5F435344 
 4953      436F6E6E 
 4953      65637453 
 4954              	.LASF107:
 4955 09be 7843656E 		.ascii	"xCentroidMultiplier\000"
 4955      74726F69 
 4955      644D756C 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 147


 4955      7469706C 
 4955      69657200 
 4956              	.LASF47:
 4957 09d2 66696E67 		.ascii	"fingerTh\000"
 4957      65725468 
 4957      00
 4958              	.LASF63:
 4959 09db 62736C6E 		.ascii	"bslnExt\000"
 4959      45787400 
 4960              	.LASF15:
 4961 09e3 63797374 		.ascii	"cystatus\000"
 4961      61747573 
 4961      00
 4962              	.LASF1:
 4963 09ec 756E7369 		.ascii	"unsigned char\000"
 4963      676E6564 
 4963      20636861 
 4963      7200
 4964              	.LASF117:
 4965 09fa 7472696D 		.ascii	"trimValue\000"
 4965      56616C75 
 4965      6500
 4966              	.LASF132:
 4967 0a04 43617053 		.ascii	"CapSense_SetPinState\000"
 4967      656E7365 
 4967      5F536574 
 4967      50696E53 
 4967      74617465 
 4968              	.LASF102:
 4969 0a19 73746174 		.ascii	"staticConfig\000"
 4969      6963436F 
 4969      6E666967 
 4969      00
 4970              	.LASF25:
 4971 0a26 73656E73 		.ascii	"sensorCap\000"
 4971      6F724361 
 4971      7000
 4972              	.LASF131:
 4973 0a30 696F5074 		.ascii	"ioPtr\000"
 4973      7200
 4974              	.LASF98:
 4975 0a36 70747232 		.ascii	"ptr2WdgtRam\000"
 4975      57646774 
 4975      52616D00 
 4976              	.LASF19:
 4977 0a42 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 4977      656E7365 
 4977      5F544852 
 4977      4553484F 
 4977      4C445F54 
 4978              	.LASF181:
 4979 0a5a 43617053 		.ascii	"CapSense_CSDScan\000"
 4979      656E7365 
 4979      5F435344 
 4979      5363616E 
 4979      00
 4980              	.LASF43:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 148


 4981 0a6b 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4981      656E7365 
 4981      5F53454E 
 4981      53455F4D 
 4981      4554484F 
 4982              	.LASF127:
 4983 0a88 73746174 		.ascii	"state\000"
 4983      6500
 4984              	.LASF60:
 4985 0a8e 6C696E65 		.ascii	"linearslider0\000"
 4985      6172736C 
 4985      69646572 
 4985      3000
 4986              	.LASF129:
 4987 0a9c 656C7464 		.ascii	"eltdIndex\000"
 4987      496E6465 
 4987      7800
 4988              	.LASF123:
 4989 0aa6 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 4989      656E7365 
 4989      5F536361 
 4989      6E416C6C 
 4989      57696467 
 4990              	.LASF91:
 4991 0abe 6873696F 		.ascii	"hsiomMask\000"
 4991      6D4D6173 
 4991      6B00
 4992              	.LASF149:
 4993 0ac8 63757253 		.ascii	"curSnsIOPtr\000"
 4993      6E73494F 
 4993      50747200 
 4994              	.LASF54:
 4995 0ad4 736E7343 		.ascii	"snsClk\000"
 4995      6C6B00
 4996              	.LASF133:
 4997 0adb 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4997      656E7365 
 4997      5F537353 
 4997      77697463 
 4997      6853656E 
 4998              	.LASF182:
 4999 0af8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4999      74657243 
 4999      72697469 
 4999      63616C53 
 4999      65637469 
 5000              	.LASF173:
 5001 0b0f 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5001      656E7365 
 5001      5F637572 
 5001      52616D53 
 5001      6E735074 
 5002              	.LASF0:
 5003 0b25 7369676E 		.ascii	"signed char\000"
 5003      65642063 
 5003      68617200 
 5004              	.LASF175:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 149


 5005 0b31 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5005      656E7365 
 5005      5F736361 
 5005      6E467265 
 5005      71496E64 
 5006              	.LASF62:
 5007 0b48 62736C6E 		.ascii	"bsln\000"
 5007      00
 5008              	.LASF3:
 5009 0b4d 73686F72 		.ascii	"short unsigned int\000"
 5009      7420756E 
 5009      7369676E 
 5009      65642069 
 5009      6E7400
 5010              	.LASF31:
 5011 0b60 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5011      5F54554E 
 5011      455F434F 
 5011      4E464947 
 5011      5F545950 
 5012              	.LASF169:
 5013 0b76 43617053 		.ascii	"CapSense_ioList\000"
 5013      656E7365 
 5013      5F696F4C 
 5013      69737400 
 5014              	.LASF195:
 5015 0b86 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5015      656E7365 
 5015      5F537350 
 5015      6F737441 
 5015      6C6C5769 
 5016              	.LASF97:
 5017 0ba4 70747232 		.ascii	"ptr2SnsFlash\000"
 5017      536E7346 
 5017      6C617368 
 5017      00
 5018              	.LASF118:
 5019 0bb1 6E657752 		.ascii	"newRegValue\000"
 5019      65675661 
 5019      6C756500 
 5020              	.LASF9:
 5021 0bbd 75696E74 		.ascii	"uint8\000"
 5021      3800
 5022              	.LASF13:
 5023 0bc3 646F7562 		.ascii	"double\000"
 5023      6C6500
 5024              	.LASF65:
 5025 0bca 6E656742 		.ascii	"negBslnRstCnt\000"
 5025      736C6E52 
 5025      7374436E 
 5025      7400
 5026              	.LASF32:
 5027 0bd8 70617261 		.ascii	"param0\000"
 5027      6D3000
 5028              	.LASF33:
 5029 0bdf 70617261 		.ascii	"param1\000"
 5029      6D3100
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 150


 5030              	.LASF34:
 5031 0be6 70617261 		.ascii	"param2\000"
 5031      6D3200
 5032              	.LASF35:
 5033 0bed 70617261 		.ascii	"param3\000"
 5033      6D3300
 5034              	.LASF36:
 5035 0bf4 70617261 		.ascii	"param4\000"
 5035      6D3400
 5036              	.LASF37:
 5037 0bfb 70617261 		.ascii	"param5\000"
 5037      6D3500
 5038              	.LASF38:
 5039 0c02 70617261 		.ascii	"param6\000"
 5039      6D3600
 5040              	.LASF154:
 5041 0c09 736E7343 		.ascii	"snsClkDivider\000"
 5041      6C6B4469 
 5041      76696465 
 5041      7200
 5042              	.LASF156:
 5043 0c17 6D6F6443 		.ascii	"modClkDivider\000"
 5043      6C6B4469 
 5043      76696465 
 5043      7200
 5044              	.LASF70:
 5045 0c25 64657669 		.ascii	"deviceId\000"
 5045      63654964 
 5045      00
 5046              	.LASF119:
 5047 0c2e 77696467 		.ascii	"widgetStatus\000"
 5047      65745374 
 5047      61747573 
 5047      00
 5048              	.LASF125:
 5049 0c3b 77696467 		.ascii	"widgetId\000"
 5049      65744964 
 5049      00
 5050              	.LASF172:
 5051 0c44 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5051      656E7365 
 5051      5F726571 
 5051      75657374 
 5051      5363616E 
 5052              	.LASF164:
 5053 0c62 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5053      656E7365 
 5053      5F537349 
 5053      6E697469 
 5053      616C697A 
 5054              	.LASF58:
 5055 0c86 706F7369 		.ascii	"position\000"
 5055      74696F6E 
 5055      00
 5056              	.LASF68:
 5057 0c8f 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5057      656E7365 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cczAo8QF.s 			page 151


 5057      5F52414D 
 5057      5F534E53 
 5057      5F4C4953 
 5058              	.LASF111:
 5059 0cac 77646774 		.ascii	"wdgtArray\000"
 5059      41727261 
 5059      7900
 5060              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
