ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDConfigIDACs,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDConfigIDACs, %function
  24              	CapSense_1_SsCSDConfigIDACs:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \file CapSense_1_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \see CapSense_1 v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Structure.h"
  42:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  46:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  47:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
  49:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * API Constants
  50:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
  51:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  53:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  54:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN)
  55:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (CapSense_1_CSD_AZ_EN_MASK)
  56:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  57:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (0uL)
  58:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN) */
  59:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  60:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
  61:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  62:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_HSCMP_INVERT_MASK)
  63:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  64:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  65:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  67:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_HSCMP_INIT_MASK                        (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  68:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  69:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  70:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_1_SW_DSI_SEL_CMODPAD | CapSense
  71:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  72:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  73:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  75:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  78:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  79:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  80:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDAC ranges */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN)
  82:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (CapSense_1_IDAC_MOD_RANGE_MASK)
  83:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (CapSense_1_IDAC_COMP_RANGE_MASK)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  85:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (0u)
  86:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (0u)
  87:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN) */
  88:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  90:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
  91:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  92:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_IDAC_COMP_MODE_FIXED |\
  93:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE 
  94:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_COMP_RANGE
  95:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  96:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  97:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE)
  98:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
  99:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
 103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Variables
 104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
 105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG;
 108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG | CapSense_1_DEFAULT_MODULATION_MOD
 110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static uint32 CapSense_1_counterResolution = CapSense_1_CNT_RESOLUTION_12_BITS;
 111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static uint8 CapSense_1_eleCsdDisconnectFlag = 0u;
 115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_E
 116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_ME
 119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a widget */
 122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_calibratedIdac = 1u;
 123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint16 CapSense_1_calibratedRawcount = 1u;
 124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 CapSense_1_calibratedIdacRow = 1u;
 126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 CapSense_1_calibratedRawcountRow = 1u;
 127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Static Function Prototypes
 133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /**
 136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \addtogroup group_c_internal
 138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \{
 139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** */
 140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay);
 143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void);
 145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void);
 148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
 153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
 154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
 159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *ptrIdac,
 160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *iDAC8Max);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))  */
 163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void);
 167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /** \}
 174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \endcond */
 175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsSetShieldDelay
 180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param delay
 190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 10ns delay
 198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 50ns delay
 199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 5ns delay
 202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 10ns delay
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 20ns delay
 204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay)
 207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= (uint32)(~CapSense_1_CONFIG_SHIELD_DELAY_MASK);
 210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= (delay << CapSense_1_SHIELD_DELAY_SHIFT);
 211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldTank
 216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This function configures Csh pin
 220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void)
 228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
 234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= (CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HSIOM_SHIFT);
 235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
 239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_PC_PTR);
 241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_CSH_PC_MASK << CapSense_1_CSH_PC_SHIFT));
 242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_CSH_PC_STRONG_MODE << CapSense_1_CSH_PC_SHIFT);
 243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_PC_PTR, newRegValue);
 244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_DR_PTR);
 247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_DR_MASK << CapSense_1_CSH_SHIFT));
 248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (uint32)CapSense_1_CSH_DR_CONFIG;
 249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_DR_PTR, newRegValue);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldElectrodes
 258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   the CapSense_1_shieldIoList structure.
 267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void)
 270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set drive mode to Analog */
 277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, CY_GET_REG32(CapSense_1_sh
 278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            ~(CapSense_1_GPIO_PC_MASK <<(CapSense_1_shieldIoList[shieldIndex].shift)
 279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD or AMUXBUS B connection */
 281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr);
 282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_HSIOM_SEL_MASK << (CapSense_1_shieldIoList[shieldIndex]
 283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD */
 285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << (CapSense_1_shieldIoList[shieldI
 286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, newRegValue);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDDisableShieldElectrodes
 294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   stored in  the CapSense_1_shieldIoList structure.
 303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         void CapSense_1_SsCSDDisableShieldElectrodes(void)
 306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset HSIOM register (to GPIO state) */
 313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, CY_GET_REG32(CapSense_1
 314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (uint32)~(uint32)(CapSense_1_HSIOM_SEL_MASK << CapSense_1_shieldIoList
 315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Update port configuration register (drive mode to ground)  */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr);
 318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_GPIO_PC_MASK << CapSense_1_shieldIoList[shieldIndex].sh
 319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_SNS_GROUND_CONNECT << CapSense_1_shieldIoList[shieldInde
 320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, newRegValue);
 321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set logic 0 to port data register */
 323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].drPtr, CY_GET_REG32(CapSense_1_sh
 324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            (uint32)~(uint32)((uint32)1u << CapSense_1_shieldIoList[shieldIndex].drS
 325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetModeSnsClockDivider
 333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_1_SENSE_PERIOD register with
 340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_1_configCsd variable with
 342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
 355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set configuration */
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~(CapSense_1_CONFIG_PRS_SELECT_MASK | CapSense_1_CSD_PRS_12_BIT);
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set sense clock divider */
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetSnsClockDivider(snsClkDivider);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDSetFilterDelay
 369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   variable CapSense_1_configCsd
 377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void)
 383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~CapSense_1_CONFIG_FILTER_DELAY_MASK;
 389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigIDACs
 413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   enabled or disabled.
 421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void)
 424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
  27              		.loc 1 424 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 9


 426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
 427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDACB_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
 430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  32              		.loc 1 434 0
  33 0000 014A     		ldr	r2, .L2
  34 0002 024B     		ldr	r3, .L2+4
  35 0004 1A60     		str	r2, [r3]
 435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
 437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                 ~(CapSense_1_IDAC_MOD_MODE_MASK |
 438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                   CapSense_1_IDAC_MOD_MASK));
 439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) |
 440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_CSD_IDAC_CONFIG
 441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
  36              		.loc 1 443 0
  37              		@ sp needed
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00020001 		.word	16777728
  43 000c 08000840 		.word	1074266120
  44              		.cfi_endproc
  45              	.LFE1:
  46              		.size	CapSense_1_SsCSDConfigIDACs, .-CapSense_1_SsCSDConfigIDACs
  47              		.section	.text.CapSense_1_SsCSDSetSingleIdacMode,"ax",%progbits
  48              		.align	2
  49              		.code	16
  50              		.thumb_func
  51              		.type	CapSense_1_SsCSDSetSingleIdacMode, %function
  52              	CapSense_1_SsCSDSetSingleIdacMode:
  53              	.LFB16:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDInitialize
 448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This API initializes the CSD module.
 452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 10


 461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   9) Configures ModClk;
 464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Enables the clocks;
 475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Sets the shield delay;
 476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDInitialize(void)
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsClearCSDSensors();
 485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
 488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     
 490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldElectrodes();
 494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Configure Csh */
 498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
 499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_SENSE_DUTY_SEL);
 506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET);
 513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL);
 514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL);
 515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL);
 516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_AMBUF_PWR_MODE_OFF);
 517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_SW_SHIELD_SEL);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 11


 518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_P_SEL);
 519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_N_SEL);
 520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_HSCMP_CFG);
 521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_SW_BYP_SEL_SW_BYA_MASK;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, newRegValue);
 532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE)
 536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #elif (CapSense_1_CSD__CSHIELD_PAD == CapSense_1_CMOD_CONNECTION)
 537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE)
 538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE)
 540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION) */
 541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure shield driving path */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, CapSense_1_SW_BYP_SEL_SW_BYA_MASK | CapSense_1_
 546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-B to HSCMP positive input */
 548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, 0x00000000uL);
 549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSense_1_
 553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_1_SW_REFGEN_SEL_SW_IAIB_
 556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK;
 561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSe
 563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV)
 565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFLOW (from AMBUF and RefGen is in bypass mode) to CSDCOMP when Vdda < 2 V */
 567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_LV);
 571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 12


 575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
 577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_NORM);
 583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_OFF);
 585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_HV);
 596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_HI);
 600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING != CapSense_1_CSD_IDAC_CONFIG)
 602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
 607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV) */
 614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure IDACs mode */
 616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDConfigIDACs();
 617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure ModClk */
 619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set other CSD configurations */
 622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure HW block filter delay */
 627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetFilterDelay();
 628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
 631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 13


 632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_SENSE_EN_MASK |
 633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_ENABLE_MASK);
 634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR, CapSense_1_CSD_AUTO_ZERO_TIME);
 638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, 0x00000000);
 641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR, CapSense_1_CSD_FINE_INIT_TIME);
 644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure IDACs mode */
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigIDACs();
 650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
 666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE))
 671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
 673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDElectrodeCheck
 680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****  * CapSense_1_CSDSetupWidgetExt() API and if yes disconnects them.
 685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function checks if CapSense_1_eleCsdDisconnectFlag is set.
 688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 14


 689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_1_curSnsIOPtr and
 690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_curFlashSnsPtr contains the previous data for Ganged
 691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sensors.
 692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDElectrodeCheck(void)
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     if (CapSense_1_ENABLE == CapSense_1_eleCsdDisconnectFlag)
 701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal = CapSense_1_curFlashSnsPtr->numPins;
 709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get IO pointer  */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
 712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 do
 715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curSnsIOPtr++;
 718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     tempVal--;
 719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 } while (0u != tempVal);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
 732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetUpIdacs
 738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 15


 746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDSetUpIdacs(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 interruptState;
 759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 idacARegValue;
 762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 idacBRegValue;
 765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get IDACA Value */
 771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR);
 772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA Value mask */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue &= ~(CapSense_1_IDAC_MOD_VAL_MASK);
 775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA value */
 777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_1_scanFreqIndex];
 781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update IDACA register with new value */
 791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, idacARegValue);
 792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get IDACB Value */
 798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR);
 799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB Value mask */
 801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue &= ~(CapSense_1_IDAC_COMP_VAL_MASK);
 802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 16


 803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB value */
 804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue |= (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
 805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, idacBRegValue);
 808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Idac Value */
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac Value mask */
 830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK | CapSense_1_IDAC_COMP_MASK);
 832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK);
 834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac value */
 837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (ptrIdacMod[CapSense_1_scanFreqIndex] |
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= ptrIdacMod[CapSense_1_scanFreqIndex];
 843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDGetNumberOfConversions
 855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 17


 860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param
 865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  resolution The widget resolution.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 s
 873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != CapSen
 876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != 
 878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         conversionsNum = (uint32)((1uL << resolution) - 1uL);
 881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN)
 883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_RES16BIT == resolution)
 885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_3_CYCLES;
 898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
 900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_4_CYCLES;
 902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
 904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN) */
 908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 18


 917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
 918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS8:
 920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS12:
 921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             default:
 926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigClock
 939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
 946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConfigClock(void)
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkSrc;
 952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
 958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
 959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_1_dsRam.snsCsdClk;
 960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
 963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
 964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
 966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
 970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 19


 974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_1_SsCSDInitialize() before */
 977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
 979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIndex)
 980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
 982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
 993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
 995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_CLK_SOURCE_PRS8 == snsClkSrc) ||
 996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_CLK_SOURCE_PRS12 == snsClkSrc))
 997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
 999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
1008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS8:
1010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS12:
1011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Divide by 2 for PRS8/PRS12 mode */
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider >>= 1;
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
1014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = 1u;
1016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         default:
1020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCalculateScanDuration
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 20


1031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClk divider.
1040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_counterResolution global variable and used in
1043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_SsCSDStartSample() function to trigger the scan process.
1044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param wdgtIndex
1046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDCalculateScanDuration(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
1053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 snsClkDivider;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Number Of Conversions */
1056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
1057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = CapSense_1_dsRam.snsCsdClk;
1058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
1062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
1066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
1073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resolut
1075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM_CNT_CONV_CN
1078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapS
1081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidget
1087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 21


1088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDScan() function to start scanning.
1093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_1_CSDScan()
1101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
1107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  widgetId
1114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidget(uint32 widgetId)
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
1128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
1130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDElectrodeCheck();
1138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
1142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update status register in Data structure */
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status &= ~CapSense_1_STATUS_WDGT0_MASK;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 22


1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
1146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set up scanning resolution (Number ofconversion for CSDv2) */
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
1149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE))
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
1153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)) */
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidgetExt
1160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  requires using the CapSense_1_CSDScanExt() function to initiate a scan.
1166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does the same as CapSense_1_CSDSetupWidget() and also
1169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  does the following tasks:
1170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  next sensors in a widget.
1174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function is called to scan the sensor.
1177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  specific widget.
1196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1 Configuration header file defined as
1198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID
1199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 23


1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
1208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDSetupWidget(widgetId);
1215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /* Setup Idac Value */
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
1222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt(widgetId, sensorId);
1226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr += CapSense_1_sensorIndex;
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save sns pointer */
1234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr
1236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_sensorIndex;
1237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_eleCsdDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
1240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDStartSample
1247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Starts the CSD conversion.
1251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the CapSense_1_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   block using CapSense_1_CSDConnectSns.
1256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2. Precharges Cmod;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 24


1259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDStartSample(void)
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 interruptState;
1267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif
1268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntDisable(CapSense_1_ISR_NUMBER);
1278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_INIT_MASK);
1281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
1283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
1284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_SENSE_EN_MASK |
1285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_ENABLE_MASK);
1286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
1290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
1304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_PRECHARGE_CO
1305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
1307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
1309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDClockRestart();
1312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 25


1316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
1317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayCycles(CapSense_1_GLITCH_ELIMINATION_CYCLES);
1319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
1320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScanExt
1331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() function to set up the a
1336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by the CapSense_1_CSDSetupWidgetExt() function. It does the following
1341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  tasks:
1342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_1_dsRam structure.
1343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts single scanning.
1346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() API prior to calling this function.
1355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by using the CapSense_1_CSDScanExt() function. In this case, calling
1357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() is not required every time before the
1358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function. If a previous scan was triggered in
1359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets() or
1360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
1361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() API prior to calling the
1363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function.
1364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt(), the CapSense_1_CSDDisconnectSns()
1367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  function can be used.
1368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScanExt(void)
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 26


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= (CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
1374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_ENABLE == CapSense_1_CSDV2)
1382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****               (CapSense_1_ENABLE == CapSense_1_CSDV2)*/
1387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDStartSample();
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScan
1394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidget() function.
1399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDSetupWidget() function. It does the following tasks:
1403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       the next sensors in a widget.
1407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
1410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
1418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  preconfigured by the CapSense_1_CSDSetupWidget() function if any other
1419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScan(void)
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
1426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /*
1428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * Update CapSense_1_sensorIndex with the first sensor in
1429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 27


1430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       */
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = 0u;
1432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup Idac Value */
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****    CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].sta
1449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScanGanged);
1453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
1461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Start scanning */
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDScanExt();
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConnectSensorExt
1481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 28


1487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   PC registers.
1490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK ==
1512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
1532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect sensor */
1537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect sensor */
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 29


1544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDDisconnectSnsExt
1548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   is set to Shield.
1560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK) == CapSense_1_GANGED_SNS_MASK)
1583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 30


1601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDConnectSns
1617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDConnectSns() function.
1635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDConnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8  interruptState;
1645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get offsets for sensor */
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 31


1658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_1_
1661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDDisconnectSns
1671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function works identically to CapSense_1_CSDConnectSns() except
1679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDDisconnectSns() function.
1687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDDisconnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) || \
1700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8  interruptState;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))) */
1704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) ||  \
1709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update HSIOM register to disconnect sensor */
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_
1712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 32


1715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode) for sensor */
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->pcPtr);
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
1720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set logic 0 to port data register */
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32
1725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode to HiZ Analog) for sensor */
1727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSens
1728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect to Shield */
1730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK << pinH
1731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDSetSingleIdacMode
1742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function set single IDAC mode.
1746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block: The function enables Modulator IDAC only in variable mod
1749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Fourth-generation HW block: The function enables IDACA LEG1 in CSD mode, IDACA LEG2
1750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void)
1753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  54              		.loc 1 1753 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
1755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable IDACA LEG1 in CSD mode, IDACA LEG2 in GP mode */
1758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR) &
1759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               CapSense_1_IDAC_MOD_VAL_MASK;
1760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_CALIBRATION_CFG;
1761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, newRegValue);
1762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR) & CapSense_1_IDAC_COMP_VAL
1765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue |= CapSense_1_IDAC_COMP_CALIBRATION_CFG;
1766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, newRegValue);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 33


1767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable Modulator IDAC only in variable mode */
1771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR) &
  59              		.loc 1 1771 0
  60 0000 044A     		ldr	r2, .L5
  61 0002 1168     		ldr	r1, [r2]
  62 0004 044B     		ldr	r3, .L5+4
  63 0006 0B40     		ands	r3, r1
  64              	.LVL0:
1772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               ~(CapSense_1_IDAC_MOD_MODE_MASK | CapSense_1_IDAC_COMP_MODE_MASK);
1773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_MODE_VARIABLE;
  65              		.loc 1 1773 0
  66 0008 8021     		movs	r1, #128
  67 000a 8900     		lsls	r1, r1, #2
  68 000c 0B43     		orrs	r3, r1
  69              	.LVL1:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
  70              		.loc 1 1774 0
  71 000e 1360     		str	r3, [r2]
1775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  72              		.loc 1 1776 0
  73              		@ sp needed
  74 0010 7047     		bx	lr
  75              	.L6:
  76 0012 C046     		.align	2
  77              	.L5:
  78 0014 08000840 		.word	1074266120
  79 0018 FFFCFFFC 		.word	-50332417
  80              		.cfi_endproc
  81              	.LFE16:
  82              		.size	CapSense_1_SsCSDSetSingleIdacMode, .-CapSense_1_SsCSDSetSingleIdacMode
  83              		.section	.text.CapSense_1_SsCSDRestoreIdacMode,"ax",%progbits
  84              		.align	2
  85              		.code	16
  86              		.thumb_func
  87              		.type	CapSense_1_SsCSDRestoreIdacMode, %function
  88              	CapSense_1_SsCSDRestoreIdacMode:
  89              	.LFB17:
1777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
1780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDRestoreIdacMode
1786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function restores IDAC configuration.
1790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function restores Compensation IDAC if it is enabled.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 34


1793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void)
1796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  90              		.loc 1 1796 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
1797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration */
1798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint32 newRegValue;
1800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
1802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
1803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
1804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
1805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
1808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  95              		.loc 1 1812 0
  96 0000 014A     		ldr	r2, .L8
  97 0002 024B     		ldr	r3, .L8+4
  98 0004 1A60     		str	r2, [r3]
1813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
1814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
1815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                         ~(CapSense_1_IDAC_MOD_MODE_
1816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) | CapSense_
1817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  99              		.loc 1 1819 0
 100              		@ sp needed
 101 0006 7047     		bx	lr
 102              	.L9:
 103              		.align	2
 104              	.L8:
 105 0008 00020001 		.word	16777728
 106 000c 08000840 		.word	1074266120
 107              		.cfi_endproc
 108              	.LFE17:
 109              		.size	CapSense_1_SsCSDRestoreIdacMode, .-CapSense_1_SsCSDRestoreIdacMode
 110              		.global	__aeabi_uidiv
 111              		.section	.text.CapSense_1_SsCSDCalibrateCheck,"ax",%progbits
 112              		.align	2
 113              		.code	16
 114              		.thumb_func
 115              		.type	CapSense_1_SsCSDCalibrateCheck, %function
 116              	CapSense_1_SsCSDCalibrateCheck:
 117              	.LFB18:
1820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 35


1822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateCheck
1824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function verifies calibration error based on maximum raw count level.
1831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawLevel The raw data level which should be reached during the
1833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   calibration procedure.
1834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawData  Calibrated raw counts.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
1842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 118              		.loc 1 1842 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL2:
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129 0002 0E00     		movs	r6, r1
 130 0004 1500     		movs	r5, r2
 131              	.LVL3:
1843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawCountsError;
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 minRawLevel = 0u;
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 132              		.loc 1 1846 0
 133 0006 0388     		ldrh	r3, [r0]
 134 0008 0124     		movs	r4, #1
 135 000a 9C40     		lsls	r4, r4, r3
 136 000c 013C     		subs	r4, r4, #1
 137              	.LVL4:
1847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate the error in rawcounts for given resolution (round to floor) */
1849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawCountsError = ((maxRawLevel * CapSense_1_IDAC_MOD_MAX_CALIB_ERROR) /
 138              		.loc 1 1849 0
 139 000e A300     		lsls	r3, r4, #2
 140 0010 1B19     		adds	r3, r3, r4
 141 0012 5800     		lsls	r0, r3, #1
 142              	.LVL5:
 143 0014 6421     		movs	r1, #100
 144              	.LVL6:
 145 0016 FFF7FEFF 		bl	__aeabi_uidiv
 146              	.LVL7:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 36


 147 001a 0130     		adds	r0, r0, #1
 148              	.LVL8:
1850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_PERCENTAGE_100) + 1u;
1851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get minimum and maximum range values */
1853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawLevel + rawCountsError) <= maxRawLevel)
 149              		.loc 1 1853 0
 150 001c 8319     		adds	r3, r0, r6
 151 001e 9C42     		cmp	r4, r3
 152 0020 00D2     		bcs	.L11
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 153              		.loc 1 1846 0
 154 0022 2300     		movs	r3, r4
 155              	.L11:
 156              	.LVL9:
1854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             maxRawLevel = rawLevel + rawCountsError;
1856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (rawLevel >= rawCountsError)
 157              		.loc 1 1857 0
 158 0024 B042     		cmp	r0, r6
 159 0026 01D8     		bhi	.L14
1858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             minRawLevel = rawLevel - rawCountsError;
 160              		.loc 1 1859 0
 161 0028 301A     		subs	r0, r6, r0
 162              	.LVL10:
 163 002a 00E0     		b	.L12
 164              	.LVL11:
 165              	.L14:
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 166              		.loc 1 1845 0
 167 002c 0020     		movs	r0, #0
 168              	.LVL12:
 169              	.L12:
1860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if calibration is in valid range */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawData < minRawLevel) || (rawData > maxRawLevel))
 170              		.loc 1 1863 0
 171 002e A842     		cmp	r0, r5
 172 0030 03D8     		bhi	.L15
 173              		.loc 1 1863 0 is_stmt 0 discriminator 1
 174 0032 AB42     		cmp	r3, r5
 175 0034 03D2     		bcs	.L16
1864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_BAD_DATA;
 176              		.loc 1 1865 0 is_stmt 1
 177 0036 0620     		movs	r0, #6
 178              	.LVL13:
 179 0038 02E0     		b	.L13
 180              	.LVL14:
 181              	.L15:
 182 003a 0620     		movs	r0, #6
 183              	.LVL15:
 184 003c 00E0     		b	.L13
 185              	.LVL16:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 37


 186              	.L16:
1866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_SUCCESS;
 187              		.loc 1 1869 0
 188 003e 0020     		movs	r0, #0
 189              	.LVL17:
 190              	.L13:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
1873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 191              		.loc 1 1873 0
 192              		@ sp needed
 193              	.LVL18:
 194              	.LVL19:
 195 0040 70BD     		pop	{r4, r5, r6, pc}
 196              		.cfi_endproc
 197              	.LFE18:
 198              		.size	CapSense_1_SsCSDCalibrateCheck, .-CapSense_1_SsCSDCalibrateCheck
 199 0042 C046     		.section	.text.CapSense_1_SsCSDSetModeSnsClockDivider,"ax",%progbits
 200              		.align	2
 201              		.code	16
 202              		.thumb_func
 203              		.type	CapSense_1_SsCSDSetModeSnsClockDivider, %function
 204              	CapSense_1_SsCSDSetModeSnsClockDivider:
 205              	.LFB0:
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 206              		.loc 1 351 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL20:
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 215              		.loc 1 357 0
 216 0002 054A     		ldr	r2, .L18
 217 0004 C023     		movs	r3, #192
 218 0006 1468     		ldr	r4, [r2]
 219 0008 9C43     		bics	r4, r3
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 220              		.loc 1 358 0
 221 000a 2043     		orrs	r0, r4
 222              	.LVL21:
 223 000c 1060     		str	r0, [r2]
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 224              		.loc 1 361 0
 225 000e 0800     		movs	r0, r1
 226 0010 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 227              	.LVL22:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 228              		.loc 1 363 0
 229              		@ sp needed
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 38


 230 0014 10BD     		pop	{r4, pc}
 231              	.L19:
 232 0016 C046     		.align	2
 233              	.L18:
 234 0018 00000000 		.word	.LANCHOR0
 235              		.cfi_endproc
 236              	.LFE0:
 237              		.size	CapSense_1_SsCSDSetModeSnsClockDivider, .-CapSense_1_SsCSDSetModeSnsClockDivider
 238              		.section	.text.CapSense_1_SsCSDInitialize,"ax",%progbits
 239              		.align	2
 240              		.global	CapSense_1_SsCSDInitialize
 241              		.code	16
 242              		.thumb_func
 243              		.type	CapSense_1_SsCSDInitialize, %function
 244              	CapSense_1_SsCSDInitialize:
 245              	.LFB2:
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 246              		.loc 1 480 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 254              		.loc 1 484 0
 255 0002 FFF7FEFF 		bl	CapSense_1_SsClearCSDSensors
 256              	.LVL23:
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 257              		.loc 1 649 0
 258 0006 FFF7FEFF 		bl	CapSense_1_SsCSDConfigIDACs
 259              	.LVL24:
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 260              		.loc 1 652 0
 261 000a 074A     		ldr	r2, .L21
 262 000c 1168     		ldr	r1, [r2]
 263              	.LVL25:
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 264              		.loc 1 653 0
 265 000e 074B     		ldr	r3, .L21+4
 266 0010 0B40     		ands	r3, r1
 267              	.LVL26:
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 268              		.loc 1 654 0
 269 0012 C021     		movs	r1, #192
 270 0014 C900     		lsls	r1, r1, #3
 271 0016 0B43     		orrs	r3, r1
 272              	.LVL27:
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 273              		.loc 1 655 0
 274 0018 1360     		str	r3, [r2]
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 275              		.loc 1 665 0
 276 001a 054B     		ldr	r3, .L21+8
 277              	.LVL28:
 278 001c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 39


 279 001e 054A     		ldr	r2, .L21+12
 280              	.LVL29:
 281 0020 1343     		orrs	r3, r2
 282 0022 054A     		ldr	r2, .L21+16
 283 0024 1360     		str	r3, [r2]
 284              	.LVL30:
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 285              		.loc 1 675 0
 286              		@ sp needed
 287 0026 10BD     		pop	{r4, pc}
 288              	.L22:
 289              		.align	2
 290              	.L21:
 291 0028 10000140 		.word	1073807376
 292 002c FFF0FFFF 		.word	-3841
 293 0030 00000000 		.word	.LANCHOR0
 294 0034 2008E881 		.word	-2115500000
 295 0038 04000840 		.word	1074266116
 296              		.cfi_endproc
 297              	.LFE2:
 298              		.size	CapSense_1_SsCSDInitialize, .-CapSense_1_SsCSDInitialize
 299              		.section	.text.CapSense_1_SsCSDSetUpIdacs,"ax",%progbits
 300              		.align	2
 301              		.global	CapSense_1_SsCSDSetUpIdacs
 302              		.code	16
 303              		.thumb_func
 304              		.type	CapSense_1_SsCSDSetUpIdacs, %function
 305              	CapSense_1_SsCSDSetUpIdacs:
 306              	.LFB4:
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 307              		.loc 1 756 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL31:
 312 0000 70B5     		push	{r4, r5, r6, lr}
 313              		.cfi_def_cfa_offset 16
 314              		.cfi_offset 4, -16
 315              		.cfi_offset 5, -12
 316              		.cfi_offset 6, -8
 317              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 318              		.loc 1 815 0
 319 0002 0930     		adds	r0, r0, #9
 320              	.LVL32:
 321 0004 0400     		movs	r4, r0
 322              	.LVL33:
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 323              		.loc 1 824 0
 324 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 325              	.LVL34:
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 326              		.loc 1 827 0
 327 000a 094D     		ldr	r5, .L24
 328 000c 2968     		ldr	r1, [r5]
 329              	.LVL35:
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 40


 330              		.loc 1 831 0
 331 000e 094B     		ldr	r3, .L24+4
 332 0010 1940     		ands	r1, r3
 333              	.LVL36:
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 334              		.loc 1 838 0
 335 0012 094B     		ldr	r3, .L24+8
 336 0014 1A78     		ldrb	r2, [r3]
 337 0016 A35C     		ldrb	r3, [r4, r2]
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 338              		.loc 1 839 0
 339 0018 084C     		ldr	r4, .L24+12
 340              	.LVL37:
 341 001a 2468     		ldr	r4, [r4]
 342 001c A218     		adds	r2, r4, r2
 343 001e 527A     		ldrb	r2, [r2, #9]
 344 0020 1204     		lsls	r2, r2, #16
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 345              		.loc 1 838 0
 346 0022 1343     		orrs	r3, r2
 347 0024 0B43     		orrs	r3, r1
 348              	.LVL38:
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 349              		.loc 1 844 0
 350 0026 2B60     		str	r3, [r5]
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 351              		.loc 1 846 0
 352 0028 FFF7FEFF 		bl	CyExitCriticalSection
 353              	.LVL39:
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 354              		.loc 1 849 0
 355              		@ sp needed
 356 002c 70BD     		pop	{r4, r5, r6, pc}
 357              	.L25:
 358 002e C046     		.align	2
 359              	.L24:
 360 0030 08000840 		.word	1074266120
 361 0034 00FF80FF 		.word	-8323328
 362 0038 00000000 		.word	CapSense_1_scanFreqIndex
 363 003c 00000000 		.word	CapSense_1_curRamSnsPtr
 364              		.cfi_endproc
 365              	.LFE4:
 366              		.size	CapSense_1_SsCSDSetUpIdacs, .-CapSense_1_SsCSDSetUpIdacs
 367              		.section	.text.CapSense_1_SsCSDConfigClock,"ax",%progbits
 368              		.align	2
 369              		.global	CapSense_1_SsCSDConfigClock
 370              		.code	16
 371              		.thumb_func
 372              		.type	CapSense_1_SsCSDConfigClock, %function
 373              	CapSense_1_SsCSDConfigClock:
 374              	.LFB5:
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 375              		.loc 1 949 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 41


 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 383              		.loc 1 955 0
 384 0002 094B     		ldr	r3, .L30
 385 0004 1B78     		ldrb	r3, [r3]
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 386              		.loc 1 954 0
 387 0006 2C22     		movs	r2, #44
 388 0008 5343     		muls	r3, r2
 389 000a 084A     		ldr	r2, .L30+4
 390 000c D318     		adds	r3, r2, r3
 391 000e 5B68     		ldr	r3, [r3, #4]
 392              	.LVL40:
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 393              		.loc 1 972 0
 394 0010 5989     		ldrh	r1, [r3, #10]
 395              	.LVL41:
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 396              		.loc 1 988 0
 397 0012 187B     		ldrb	r0, [r3, #12]
 398              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 399              		.loc 1 1007 0
 400 0014 431F     		subs	r3, r0, #5
 401              	.LVL43:
 402 0016 DBB2     		uxtb	r3, r3
 403 0018 012B     		cmp	r3, #1
 404 001a 02D8     		bhi	.L27
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
 405              		.loc 1 1012 0
 406 001c 4908     		lsrs	r1, r1, #1
 407              	.LVL44:
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 408              		.loc 1 1013 0
 409 001e 00D1     		bne	.L27
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 410              		.loc 1 1015 0
 411 0020 0131     		adds	r1, r1, #1
 412              	.LVL45:
 413              	.L27:
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 414              		.loc 1 1025 0
 415 0022 FFF7FEFF 		bl	CapSense_1_SsCSDSetModeSnsClockDivider
 416              	.LVL46:
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 417              		.loc 1 1026 0
 418              		@ sp needed
 419 0026 10BD     		pop	{r4, pc}
 420              	.L31:
 421              		.align	2
 422              	.L30:
 423 0028 00000000 		.word	CapSense_1_widgetIndex
 424 002c 00000000 		.word	CapSense_1_dsFlash
 425              		.cfi_endproc
 426              	.LFE5:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 42


 427              		.size	CapSense_1_SsCSDConfigClock, .-CapSense_1_SsCSDConfigClock
 428              		.section	.text.CapSense_1_SsCSDCalculateScanDuration,"ax",%progbits
 429              		.align	2
 430              		.global	CapSense_1_SsCSDCalculateScanDuration
 431              		.code	16
 432              		.thumb_func
 433              		.type	CapSense_1_SsCSDCalculateScanDuration, %function
 434              	CapSense_1_SsCSDCalculateScanDuration:
 435              	.LFB6:
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 436              		.loc 1 1050 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441              	.LVL47:
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 442              		.loc 1 1080 0
 443 0000 0288     		ldrh	r2, [r0]
 444 0002 0123     		movs	r3, #1
 445 0004 9340     		lsls	r3, r3, r2
 446 0006 013B     		subs	r3, r3, #1
 447 0008 1B04     		lsls	r3, r3, #16
 448 000a 014A     		ldr	r2, .L33
 449 000c 5360     		str	r3, [r2, #4]
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 450              		.loc 1 1082 0
 451              		@ sp needed
 452 000e 7047     		bx	lr
 453              	.L34:
 454              		.align	2
 455              	.L33:
 456 0010 00000000 		.word	.LANCHOR0
 457              		.cfi_endproc
 458              	.LFE6:
 459              		.size	CapSense_1_SsCSDCalculateScanDuration, .-CapSense_1_SsCSDCalculateScanDuration
 460              		.section	.text.CapSense_1_SsCSDStartSample,"ax",%progbits
 461              		.align	2
 462              		.global	CapSense_1_SsCSDStartSample
 463              		.code	16
 464              		.thumb_func
 465              		.type	CapSense_1_SsCSDStartSample, %function
 466              	CapSense_1_SsCSDStartSample:
 467              	.LFB9:
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
 468              		.loc 1 1264 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 70B5     		push	{r4, r5, r6, lr}
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 6, -8
 477              		.cfi_offset 14, -4
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 478              		.loc 1 1299 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 43


 479 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 480              	.LVL48:
 481 0006 0400     		movs	r4, r0
 482              	.LVL49:
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 483              		.loc 1 1306 0
 484 0008 1E4B     		ldr	r3, .L39
 485 000a 1B68     		ldr	r3, [r3]
 486 000c 1E4A     		ldr	r2, .L39+4
 487 000e 1343     		orrs	r3, r2
 488 0010 1E4A     		ldr	r2, .L39+8
 489 0012 1360     		str	r3, [r2]
 490              	.LBB10:
 491              	.LBB11:
1874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateOneSensor
1877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Computes the Modulator IDAC value for one sensor that provides raw signal at
1881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the specified level.
1882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function performs the following tasks:
1885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   1. initializes The Compensation IDAC to zero
1886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   2. Enables the calibrated sensor
1887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   3. Performs eight iteration steps to get the target = rawLevel
1888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      setting and resetting the IDAC value bits beginning from the
1889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      MSB bit to an MSB bit.
1890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   4. Disables the calibrated sensor
1891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   5. Checks if the IDAC is in the correct range
1892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   6. Updates the maximum IDAC value in the widget
1893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   7. Stores the temporary ModIDAC8 value (in the single-IDAC mode).
1894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The CSD block should be initialized with the CapSense_1_SsCSDInitialize()
1896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  API before using this function.
1897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  rawLevel
1899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The raw data level which should be reached during the calibration procedure.
1900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  ptrIdac  The pointer to IDAC.
1901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  iDAC8Max The pointer to the maximum IDAC value in the widget.
1902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Zero     - All the sensors in the widget are calibrated successfully.
1905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Non-Zero - Calibration failed for any sensor in the widget.
1906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
1909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *ptrIdac,
1910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *iDAC8Max)
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
1912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 calMask = ((uint32)CapSense_1_CAL_MIDDLE_BIT << 1uL);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
1915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 rawData0 = 0u;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 44


1917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData1 = 0u;
1919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData2 = 0u;
1920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
1925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac[0u] = 0u;
1927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_1] = 0u;
1929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_2] = 0u;
1930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup the calibrated sensor of the widget (Set IDAC = calMask and connect the sensor) */
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDSetupWidgetExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorIndex
1934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set single IDAC mode */
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetSingleIdacMode();
1938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
1941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Perform the iteration steps to get target = rawLevel.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * The number of iteration steps is defined by calMask and depend on IDAC resolution.
1943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
1944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         do
1945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Decrease IDAC until rawData reaches rawLevel */
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (rawData0 < rawLevel)
1948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset bit for null channel (decrease IDAC -> will increase rawData) */
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[0u] &= (uint8)(~calMask);
1951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData1 < rawLevel)
1954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~calMask);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData2 < rawLevel)
1958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~calMask);
1960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
1964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Shift calMask to set or reset next bit.
1965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Perform scan even if callibration mask is equal to zero.
1966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * It gives raw counts for the last changed IDAC.
1967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             */
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calMask >>= 1u;
1969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit for null channel */
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] |= (uint8)calMask;
1972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] |= (uint8)calMask;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 45


1974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] |= (uint8)calMask;
1975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update IDAC */
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan sensor */
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDScanExt();
1982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Initialize Watchdog Counter with time interval which is enough to charge 100 nF capa
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter = CapSense_1_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
1986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scan complete and decrement Watchdog Counter to prevent unending loop
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 watchdogCounter--;
1990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Read rawData */
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             rawData0 = CapSense_1_curRamSnsPtr->raw[0u];
1994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData1 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1];
1996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData2 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2];
1997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while (calMask > 0u);
2000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
2003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* initialize pointer to sensor IO structure */
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
2008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
2011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set flag about disconnecting the electrode */
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
2015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration to default state */
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDRestoreIdacMode();
2019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if IDAC is in correct range */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         calibrateStatus = CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData0);
2023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData1);
2025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData2);
2026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
2029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Update maximum IDAC value in widget. iDAC8Max variable will contain
2030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * maximum IDAC value after all the sensors in a widget have been scanned.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 46


2031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (*iDAC8Max < ptrIdac[0u])
2033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             *iDAC8Max = ptrIdac[0u];
2035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a 
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedIdac = *iDAC8Max;
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
2039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] < ptrIdac[CapSense_1_FREQ_CHANNEL_1])
2043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_FREQ_CHANNEL_1];
2045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] < ptrIdac[CapSense_1_FREQ_CHANNEL_2])
2047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_FREQ_CHANNEL_2];
2049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Store temporary ModIDAC8 value (in single-IDAC mode) in idacComp variable.
2055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * We need this value to calculate idacMod value the in the dual-IDAC mode.
2056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[0u] = ptrIdac[0u];
2058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_F
2060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_F
2061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_CSDCalibrateWidget
2070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the input.
2075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration is always performed in the single IDAC mode and if the dual
2082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC mode (Enable compensation IDAC is enabled) is configured, the IDAC
2083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  values are re-calculated to match the raw count target. If a widget
2084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  consists of two or more elements (buttons, slider segments, etc.), then
2085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  calibration is performed by the element with the highest sensor
2086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  capacitance.
2087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 47


2088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the +/-10%
2089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  range of the target.
2090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param widgetId
2095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1 Configuration header file defined as
2098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
2099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param target
2101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return
2104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate as expected.
2108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     cystatus CapSense_1_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint8 maxIdac = 1u;
2118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint16 maxRaw = 1u;
2119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (1u == CapSense_1_NUM_SCAN_FREQS)
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u};
2128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u, 1u, 1u};
2130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (1u == CapSense_1_NUM_SCAN_FREQS) */
2131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 *ptrIdac;
2133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calibrate maximum level for given resolution */
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
2136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate percentage of maximum value */
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (rawLevel * target) / CapSense_1_PERCENTAGE_100;
2139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CapSense_1_widgetIndex */
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_widgetIndex = (uint8)widgetId;
2142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup ISR handler to single-sensor scan function */
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 48


2145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init pointer to Modulator IDAC */
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac = &ptrWdgt->idacMod[0u];
2148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedIdac = 1u;
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
2152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Go through all the sensors (or columns of touchpad) of widget to calibrate them */
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         for (CapSense_1_sensorIndex = 0u;
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
2158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calibrate current sensor in widget */
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max);
2161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Normalize idacMod and idacComp values */
2164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] + 1u) >>
2169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] + 1u) >> 
2170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Go through all columns of touchpad (or all the sensors in button) to normalize them 
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (CapSense_1_sensorIndex = 0u;
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
2176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
2179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (CapSense_1_DISABLE == CapSense_1_CSDV2))
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[0u] =
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
2187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
2188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 else
2192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] = 0u;
2194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for first frequency channel */
2197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptrIdac[Cap
2198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptrIdac[Cap
2200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 49


2202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = 0u;
2211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for second frequency channel */
2213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptrIdac[Cap
2214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptrIdac[Cap
2216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = 0u;
2227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Normalize widget for single-IDAC mode*/
2232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = iDAC8Max[0u];
2233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Init pointer to Modulator IDAC for columns */
2244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac = &ptrWdgt->rowIdacMod[0u];
2245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset the maximum value for columns */
2247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[0u] = 1u;
2248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = 1u;
2250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = 1u;
2251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxIdac = CapSense_1_calibratedIdac;
2255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxRaw = CapSense_1_calibratedRawcount;
2256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = 1u;
2257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = 1u;
2258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 50


2259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Go through all columns of touchpad to calibrate them */
2261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].totalNu
2263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex++)
2264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calibrate current sensor in widget */
2266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8M
2267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdacRow = CapSense_1_calibratedIdac;
2271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcountRow = CapSense_1_calibratedRawcount;
2272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = maxIdac;
2273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = maxRaw;
2274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Normalize idacMod and idacComp values */
2277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] 
2282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] +
2283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Go through all columns of touchpad to normalize them */
2286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].tot
2288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex++)
2289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sen
2292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * 
2294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         {
2296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
2299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[0u] =
2300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) +
2301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
2303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         }
2305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for first frequency channel */
2307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptr
2308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptr
2310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 51


2316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for second frequency channel */
2319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptr
2320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptr
2322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
2333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Normalize widget for single-IDAC mode*/
2334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = iDAC8Max[0u];
2335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_sensorIndex = 0u;
2344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return calibrateStatus;
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
2348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
2349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
2352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDClockRestart
2354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function restarts the clocks.
2358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The function performs following:
2361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void)
2367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 492              		.loc 1 2369 0
 493 0014 1E4B     		ldr	r3, .L39+12
 494 0016 187F     		ldrb	r0, [r3, #28]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 52


 495 0018 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 496              	.LVL50:
2370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
2372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SnsClk__DIV_ID <<
2375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
2376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
2377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MAS
2380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_S
2387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHI
2388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_SNSCLK_CMD_ENABLE_MASK));
2389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 497              		.loc 1 2391 0
 498 001c 1D4A     		ldr	r2, .L39+16
 499 001e 1368     		ldr	r3, [r2]
 500 0020 5B00     		lsls	r3, r3, #1
 501 0022 5B08     		lsrs	r3, r3, #1
 502 0024 1360     		str	r3, [r2]
2392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
2393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
2394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 503              		.loc 1 2396 0
 504 0026 1368     		ldr	r3, [r2]
 505 0028 8021     		movs	r1, #128
 506 002a 0906     		lsls	r1, r1, #24
 507 002c 0B43     		orrs	r3, r1
 508 002e 1360     		str	r3, [r2]
 509              	.LBE11:
 510              	.LBE10:
 511              	.LBB12:
 512              	.LBB13:
2397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
2398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_SnsClk__ENABLE_MASK);
2399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
2400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)
2402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntDisable(CapSense_1_ISR_NUMBER);
2404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_ONE_CYCLE);
2405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_COUNTER_PTR) & CapSense_1_RESOLUTION_16_BITS))
2407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scanning is complete */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 53


2409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
2411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntClearPending(CapSense_1_ISR_NUMBER);
2412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE) */
2413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
2415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCmodPrecharge
2419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  prevent the project hanging.
2430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void)
2440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&\
2447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
2448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 tmpRegValue;
2449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif
2450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_INIT);
2452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,  CapSense_1_CSD_SW_FW_MOD_SEL_INIT);
2453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_CSD_SW_FW_TANK_SEL_INIT);
2454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_INIT);
2455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
2456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(0u != CapSense_1_CSD_SHIELD_TANK_EN)
2463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
2465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 54


2466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CSH_HSIOM_SHIFT);
2467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, tmpRegValue);
2468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (0u != CapSense_1_CSD_SHIELD_TANK_EN) */
2469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
2473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_INIT);
2475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_CLEAR_MASK);
2480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_SEQ_MODE_MASK |
2483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                          CapSense_1_SEQ_START_START_MASK);
2484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_INTR_PTR) & CapSense_1_INTR_INIT_MASK)) && (0u != wat
2490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u == watchdogCounter)
2495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_ABORT_MASK);
2498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tmpRegValue;
2503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 newRegValue;
2504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 513              		.loc 1 2507 0
 514 0030 194E     		ldr	r6, .L39+20
 515 0032 3568     		ldr	r5, [r6]
 516              	.LVL51:
2508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyDelayCycles(CapSense_1_CMOD_DISCHARGE_CYCLES);
 517              		.loc 1 2510 0
 518 0034 2720     		movs	r0, #39
 519 0036 FFF7FEFF 		bl	CyDelayCycles
 520              	.LVL52:
2511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CapSense_1_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_1_IDAC_MOD_CF
 521              		.loc 1 2512 0
 522 003a 184B     		ldr	r3, .L39+24
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 55


 523 003c 2B40     		ands	r3, r5
 524 003e 184A     		ldr	r2, .L39+28
 525 0040 1343     		orrs	r3, r2
 526              	.LVL53:
2513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 527              		.loc 1 2515 0
 528 0042 3360     		str	r3, [r6]
 529              	.LVL54:
2516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) & ~CapSense_1_C
2519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 530              		.loc 1 2522 0
 531 0044 E123     		movs	r3, #225
 532              	.LVL55:
 533 0046 DB01     		lsls	r3, r3, #7
 534 0048 00E0     		b	.L36
 535              	.LVL56:
 536              	.L38:
2523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_STATUS_PTR) & CapSense_1_STATUS_SAMPLE)) && (0u != wa
2526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
 537              		.loc 1 2527 0
 538 004a 013B     		subs	r3, r3, #1
 539              	.LVL57:
 540              	.L36:
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 541              		.loc 1 2525 0
 542 004c 154A     		ldr	r2, .L39+32
 543 004e 1268     		ldr	r2, [r2]
 544 0050 1207     		lsls	r2, r2, #28
 545 0052 01D4     		bmi	.L37
 546 0054 002B     		cmp	r3, #0
 547 0056 F8D1     		bne	.L38
 548              	.L37:
2528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) | CapSense_1_CO
2532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegValue);
 549              		.loc 1 2535 0
 550 0058 0F4B     		ldr	r3, .L39+20
 551              	.LVL58:
 552 005a 1D60     		str	r5, [r3]
 553              	.LVL59:
2536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable the sense modulator output */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 56


2538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 554              		.loc 1 2538 0
 555 005c 094D     		ldr	r5, .L39
 556              	.LVL60:
 557 005e 124B     		ldr	r3, .L39+36
 558 0060 2A68     		ldr	r2, [r5]
 559 0062 1343     		orrs	r3, r2
 560 0064 094A     		ldr	r2, .L39+8
 561 0066 1360     		str	r3, [r2]
 562              	.LVL61:
2539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
 563              		.loc 1 2540 0
 564 0068 0F20     		movs	r0, #15
 565 006a FFF7FEFF 		bl	CyIntEnable
 566              	.LVL62:
 567              	.LBE13:
 568              	.LBE12:
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
 569              		.loc 1 1318 0
 570 006e 6F20     		movs	r0, #111
 571 0070 FFF7FEFF 		bl	CyDelayCycles
 572              	.LVL63:
 573              	.LBB14:
 574              	.LBB15:
2541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
2544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDTriggerScan
2548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function triggers the scanning.
2552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void)
2568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 57


2573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear previous interrupts */
2576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntClearPending(CapSense_1_ISR_NUMBER);
2580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
2583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_CSD_SW_HS_P_SEL_SCAN);
2586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_CSD_SW_FW_MOD_SEL_SCAN);
2589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,CapSense_1_CSD_SW_FW_TANK_SEL_SCAN);
2590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_SCAN);
2592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSense_1_CSD
2594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
2596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSens
2597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_SCAN);
2599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_SCAN);
2600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN)
2602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, 0u);
2604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_SCAN_MASK);
2606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) */
2607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
2609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR) |
2611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            CapSense_1_SENSE_PERIOD_LFSR_CLEAR_MASK)
2612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE) */
2613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_INTR_MASK_SAMPLE_MASK);
2616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u != (CapSense_1_STAT_SEQ_REG & CapSense_1_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watc
2622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
2628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_AZ1_SKIP_MASK |
2629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_START_MASK);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 58


2630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
2634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set resolution to Counter register to start scanning */
2636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_counterResolution);
 575              		.loc 1 2636 0
 576 0074 6A68     		ldr	r2, [r5, #4]
 577 0076 0D4B     		ldr	r3, .L39+40
 578 0078 1A60     		str	r2, [r3]
 579              	.LBE15:
 580              	.LBE14:
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 581              		.loc 1 1324 0
 582 007a 2000     		movs	r0, r4
 583 007c FFF7FEFF 		bl	CyExitCriticalSection
 584              	.LVL64:
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 585              		.loc 1 1326 0
 586              		@ sp needed
 587              	.LVL65:
 588 0080 70BD     		pop	{r4, r5, r6, pc}
 589              	.L40:
 590 0082 C046     		.align	2
 591              	.L39:
 592 0084 00000000 		.word	.LANCHOR0
 593 0088 2008E881 		.word	-2115500000
 594 008c 04000840 		.word	1074266116
 595 0090 00000000 		.word	CapSense_1_dsRam
 596 0094 40000240 		.word	1073872960
 597 0098 08000840 		.word	1074266120
 598 009c 00E8FFBF 		.word	-1073747968
 599 00a0 F0060040 		.word	1073743600
 600 00a4 10000840 		.word	1074266128
 601 00a8 2018E881 		.word	-2115495904
 602 00ac 0C000840 		.word	1074266124
 603              		.cfi_endproc
 604              	.LFE9:
 605              		.size	CapSense_1_SsCSDStartSample, .-CapSense_1_SsCSDStartSample
 606              		.section	.text.CapSense_1_CSDScanExt,"ax",%progbits
 607              		.align	2
 608              		.global	CapSense_1_CSDScanExt
 609              		.code	16
 610              		.thumb_func
 611              		.type	CapSense_1_CSDScanExt, %function
 612              	CapSense_1_CSDScanExt:
 613              	.LFB10:
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
 614              		.loc 1 1371 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 10B5     		push	{r4, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 59


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 622              		.loc 1 1373 0
 623 0002 044A     		ldr	r2, .L42
 624 0004 D368     		ldr	r3, [r2, #12]
 625 0006 0449     		ldr	r1, .L42+4
 626 0008 0B43     		orrs	r3, r1
 627 000a D360     		str	r3, [r2, #12]
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 628              		.loc 1 1388 0
 629 000c FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 630              	.LVL66:
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 631              		.loc 1 1389 0
 632              		@ sp needed
 633 0010 10BD     		pop	{r4, pc}
 634              	.L43:
 635 0012 C046     		.align	2
 636              	.L42:
 637 0014 00000000 		.word	CapSense_1_dsRam
 638 0018 80000100 		.word	65664
 639              		.cfi_endproc
 640              	.LFE10:
 641              		.size	CapSense_1_CSDScanExt, .-CapSense_1_CSDScanExt
 642              		.section	.text.CapSense_1_CSDConnectSns,"ax",%progbits
 643              		.align	2
 644              		.global	CapSense_1_CSDConnectSns
 645              		.code	16
 646              		.thumb_func
 647              		.type	CapSense_1_CSDConnectSns, %function
 648              	CapSense_1_CSDConnectSns:
 649              	.LFB14:
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
 650              		.loc 1 1642 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              	.LVL67:
 655 0000 70B5     		push	{r4, r5, r6, lr}
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661 0002 0400     		movs	r4, r0
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 662              		.loc 1 1649 0
 663 0004 857E     		ldrb	r5, [r0, #26]
 664              	.LVL68:
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 665              		.loc 1 1650 0
 666 0006 067E     		ldrb	r6, [r0, #24]
 667              	.LVL69:
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 668              		.loc 1 1652 0
 669 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 670              	.LVL70:
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 60


 671              		.loc 1 1655 0
 672 000c 2368     		ldr	r3, [r4]
 673 000e 1B68     		ldr	r3, [r3]
 674              	.LVL71:
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 675              		.loc 1 1656 0
 676 0010 0F22     		movs	r2, #15
 677 0012 B240     		lsls	r2, r2, r6
 678 0014 9343     		bics	r3, r2
 679              	.LVL72:
 680 0016 1A00     		movs	r2, r3
 681              	.LVL73:
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 682              		.loc 1 1657 0
 683 0018 0423     		movs	r3, #4
 684 001a B340     		lsls	r3, r3, r6
 685 001c 1343     		orrs	r3, r2
 686              	.LVL74:
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 687              		.loc 1 1660 0
 688 001e 6668     		ldr	r6, [r4, #4]
 689              	.LVL75:
 690 0020 3268     		ldr	r2, [r6]
 691 0022 0721     		movs	r1, #7
 692 0024 A940     		lsls	r1, r1, r5
 693 0026 8A43     		bics	r2, r1
 694 0028 3260     		str	r2, [r6]
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 695              		.loc 1 1663 0
 696 002a 2268     		ldr	r2, [r4]
 697 002c 1360     		str	r3, [r2]
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 698              		.loc 1 1665 0
 699 002e FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL76:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 701              		.loc 1 1666 0
 702              		@ sp needed
 703              	.LVL77:
 704              	.LVL78:
 705 0032 70BD     		pop	{r4, r5, r6, pc}
 706              		.cfi_endproc
 707              	.LFE14:
 708              		.size	CapSense_1_CSDConnectSns, .-CapSense_1_CSDConnectSns
 709              		.section	.text.CapSense_1_CSDScan,"ax",%progbits
 710              		.align	2
 711              		.global	CapSense_1_CSDScan
 712              		.code	16
 713              		.thumb_func
 714              		.type	CapSense_1_CSDScan, %function
 715              	CapSense_1_CSDScan:
 716              	.LFB11:
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 717              		.loc 1 1423 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 61


 721 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 722              		.cfi_def_cfa_offset 24
 723              		.cfi_offset 3, -24
 724              		.cfi_offset 4, -20
 725              		.cfi_offset 5, -16
 726              		.cfi_offset 6, -12
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 729              		.loc 1 1425 0
 730 0002 154F     		ldr	r7, .L46
 731 0004 3B78     		ldrb	r3, [r7]
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
 732              		.loc 1 1424 0
 733 0006 154D     		ldr	r5, .L46+4
 734 0008 2C26     		movs	r6, #44
 735 000a 7343     		muls	r3, r6
 736 000c EB18     		adds	r3, r5, r3
 737 000e 5868     		ldr	r0, [r3, #4]
 738              	.LVL79:
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 739              		.loc 1 1431 0
 740 0010 134C     		ldr	r4, .L46+8
 741 0012 0023     		movs	r3, #0
 742 0014 2370     		strb	r3, [r4]
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 743              		.loc 1 1434 0
 744 0016 3B78     		ldrb	r3, [r7]
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 745              		.loc 1 1435 0
 746 0018 7343     		muls	r3, r6
 747 001a EB18     		adds	r3, r5, r3
 748 001c 9968     		ldr	r1, [r3, #8]
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 749              		.loc 1 1436 0
 750 001e 2378     		ldrb	r3, [r4]
 751 0020 DBB2     		uxtb	r3, r3
 752 0022 9A00     		lsls	r2, r3, #2
 753 0024 D318     		adds	r3, r2, r3
 754 0026 5A00     		lsls	r2, r3, #1
 755 0028 8A18     		adds	r2, r1, r2
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 756              		.loc 1 1434 0
 757 002a 0E4B     		ldr	r3, .L46+12
 758 002c 1A60     		str	r2, [r3]
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 759              		.loc 1 1444 0
 760 002e FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 761              	.LVL80:
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 762              		.loc 1 1463 0
 763 0032 3B78     		ldrb	r3, [r7]
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
 764              		.loc 1 1464 0
 765 0034 5E43     		muls	r6, r3
 766 0036 7059     		ldr	r0, [r6, r5]
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 62


 767              		.loc 1 1465 0
 768 0038 2278     		ldrb	r2, [r4]
 769 003a D2B2     		uxtb	r2, r2
 770 003c D300     		lsls	r3, r2, #3
 771 003e 9A1A     		subs	r2, r3, r2
 772 0040 9300     		lsls	r3, r2, #2
 773 0042 C018     		adds	r0, r0, r3
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 774              		.loc 1 1463 0
 775 0044 084B     		ldr	r3, .L46+16
 776 0046 1860     		str	r0, [r3]
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 777              		.loc 1 1468 0
 778 0048 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 779              	.LVL81:
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 780              		.loc 1 1471 0
 781 004c 0748     		ldr	r0, .L46+20
 782 004e FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 783              	.LVL82:
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 784              		.loc 1 1475 0
 785 0052 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 786              	.LVL83:
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 787              		.loc 1 1476 0
 788              		@ sp needed
 789 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 790              	.L47:
 791              		.align	2
 792              	.L46:
 793 0058 00000000 		.word	CapSense_1_widgetIndex
 794 005c 00000000 		.word	CapSense_1_dsFlash
 795 0060 00000000 		.word	CapSense_1_sensorIndex
 796 0064 00000000 		.word	CapSense_1_curRamSnsPtr
 797 0068 00000000 		.word	CapSense_1_curSnsIOPtr
 798 006c 00000000 		.word	CapSense_1_CSDPostMultiScan
 799              		.cfi_endproc
 800              	.LFE11:
 801              		.size	CapSense_1_CSDScan, .-CapSense_1_CSDScan
 802              		.section	.text.CapSense_1_SsCSDConnectSensorExt,"ax",%progbits
 803              		.align	2
 804              		.global	CapSense_1_SsCSDConnectSensorExt
 805              		.code	16
 806              		.thumb_func
 807              		.type	CapSense_1_SsCSDConnectSensorExt, %function
 808              	CapSense_1_SsCSDConnectSensorExt:
 809              	.LFB12:
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 810              		.loc 1 1499 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              	.LVL84:
 815 0000 10B5     		push	{r4, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 4, -8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 63


 818              		.cfi_offset 14, -4
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 819              		.loc 1 1506 0
 820 0002 2C23     		movs	r3, #44
 821 0004 5843     		muls	r0, r3
 822              	.LVL85:
 823 0006 054B     		ldr	r3, .L49
 824 0008 C058     		ldr	r0, [r0, r3]
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 825              		.loc 1 1507 0
 826 000a CB00     		lsls	r3, r1, #3
 827 000c 591A     		subs	r1, r3, r1
 828              	.LVL86:
 829 000e 8B00     		lsls	r3, r1, #2
 830 0010 C018     		adds	r0, r0, r3
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 831              		.loc 1 1505 0
 832 0012 034B     		ldr	r3, .L49+4
 833 0014 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 834              		.loc 1 1541 0
 835 0016 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 836              	.LVL87:
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 837              		.loc 1 1543 0
 838              		@ sp needed
 839 001a 10BD     		pop	{r4, pc}
 840              	.L50:
 841              		.align	2
 842              	.L49:
 843 001c 00000000 		.word	CapSense_1_dsFlash
 844 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 845              		.cfi_endproc
 846              	.LFE12:
 847              		.size	CapSense_1_SsCSDConnectSensorExt, .-CapSense_1_SsCSDConnectSensorExt
 848              		.section	.text.CapSense_1_CSDDisconnectSns,"ax",%progbits
 849              		.align	2
 850              		.global	CapSense_1_CSDDisconnectSns
 851              		.code	16
 852              		.thumb_func
 853              		.type	CapSense_1_CSDDisconnectSns, %function
 854              	CapSense_1_CSDDisconnectSns:
 855              	.LFB15:
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
 856              		.loc 1 1694 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              	.LVL88:
 861 0000 70B5     		push	{r4, r5, r6, lr}
 862              		.cfi_def_cfa_offset 16
 863              		.cfi_offset 4, -16
 864              		.cfi_offset 5, -12
 865              		.cfi_offset 6, -8
 866              		.cfi_offset 14, -4
 867 0002 0400     		movs	r4, r0
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 64


 868              		.loc 1 1705 0
 869 0004 007E     		ldrb	r0, [r0, #24]
 870              	.LVL89:
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 871              		.loc 1 1706 0
 872 0006 A57E     		ldrb	r5, [r4, #26]
 873              	.LVL90:
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 874              		.loc 1 1711 0
 875 0008 2168     		ldr	r1, [r4]
 876 000a 0B68     		ldr	r3, [r1]
 877 000c 0F22     		movs	r2, #15
 878 000e 8240     		lsls	r2, r2, r0
 879 0010 9343     		bics	r3, r2
 880 0012 0B60     		str	r3, [r1]
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 881              		.loc 1 1713 0
 882 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 883              	.LVL91:
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
 884              		.loc 1 1716 0
 885 0018 6168     		ldr	r1, [r4, #4]
 886 001a 0B68     		ldr	r3, [r1]
 887              	.LVL92:
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
 888              		.loc 1 1717 0
 889 001c 0722     		movs	r2, #7
 890 001e AA40     		lsls	r2, r2, r5
 891 0020 9343     		bics	r3, r2
 892              	.LVL93:
 893 0022 1A00     		movs	r2, r3
 894              	.LVL94:
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
 895              		.loc 1 1718 0
 896 0024 0623     		movs	r3, #6
 897 0026 AB40     		lsls	r3, r3, r5
 898 0028 1343     		orrs	r3, r2
 899              	.LVL95:
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 900              		.loc 1 1719 0
 901 002a 0B60     		str	r3, [r1]
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 902              		.loc 1 1721 0
 903 002c FFF7FEFF 		bl	CyExitCriticalSection
 904              	.LVL96:
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 905              		.loc 1 1724 0
 906 0030 A168     		ldr	r1, [r4, #8]
 907 0032 0B68     		ldr	r3, [r1]
 908 0034 607E     		ldrb	r0, [r4, #25]
 909 0036 0122     		movs	r2, #1
 910 0038 8240     		lsls	r2, r2, r0
 911 003a 9343     		bics	r3, r2
 912 003c 0B60     		str	r3, [r1]
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 913              		.loc 1 1735 0
 914              		@ sp needed
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 65


 915              	.LVL97:
 916              	.LVL98:
 917 003e 70BD     		pop	{r4, r5, r6, pc}
 918              		.cfi_endproc
 919              	.LFE15:
 920              		.size	CapSense_1_CSDDisconnectSns, .-CapSense_1_CSDDisconnectSns
 921              		.section	.text.CapSense_1_SsCSDElectrodeCheck,"ax",%progbits
 922              		.align	2
 923              		.global	CapSense_1_SsCSDElectrodeCheck
 924              		.code	16
 925              		.thumb_func
 926              		.type	CapSense_1_SsCSDElectrodeCheck, %function
 927              	CapSense_1_SsCSDElectrodeCheck:
 928              	.LFB3:
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 929              		.loc 1 695 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 937              		.loc 1 700 0
 938 0002 064B     		ldr	r3, .L54
 939 0004 1B78     		ldrb	r3, [r3]
 940 0006 012B     		cmp	r3, #1
 941 0008 06D1     		bne	.L52
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 942              		.loc 1 728 0
 943 000a 054B     		ldr	r3, .L54+4
 944 000c 1868     		ldr	r0, [r3]
 945 000e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 946              	.LVL99:
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 947              		.loc 1 731 0
 948 0012 0022     		movs	r2, #0
 949 0014 014B     		ldr	r3, .L54
 950 0016 1A70     		strb	r2, [r3]
 951              	.L52:
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 952              		.loc 1 733 0
 953              		@ sp needed
 954 0018 10BD     		pop	{r4, pc}
 955              	.L55:
 956 001a C046     		.align	2
 957              	.L54:
 958 001c 00000000 		.word	.LANCHOR1
 959 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 960              		.cfi_endproc
 961              	.LFE3:
 962              		.size	CapSense_1_SsCSDElectrodeCheck, .-CapSense_1_SsCSDElectrodeCheck
 963              		.section	.text.CapSense_1_CSDSetupWidget,"ax",%progbits
 964              		.align	2
 965              		.global	CapSense_1_CSDSetupWidget
 966              		.code	16
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 66


 967              		.thumb_func
 968              		.type	CapSense_1_CSDSetupWidget, %function
 969              	CapSense_1_CSDSetupWidget:
 970              	.LFB7:
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 971              		.loc 1 1121 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              	.LVL100:
 976 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 977              		.cfi_def_cfa_offset 24
 978              		.cfi_offset 3, -24
 979              		.cfi_offset 4, -20
 980              		.cfi_offset 5, -16
 981              		.cfi_offset 6, -12
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 984              		.loc 1 1123 0
 985 0002 114E     		ldr	r6, .L57
 986 0004 2C27     		movs	r7, #44
 987 0006 3B00     		movs	r3, r7
 988 0008 4343     		muls	r3, r0
 989 000a F318     		adds	r3, r6, r3
 990 000c 5D68     		ldr	r5, [r3, #4]
 991              	.LVL101:
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 992              		.loc 1 1127 0
 993 000e C0B2     		uxtb	r0, r0
 994              	.LVL102:
 995 0010 0E4C     		ldr	r4, .L57+4
 996 0012 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 997              		.loc 1 1129 0
 998 0014 0120     		movs	r0, #1
 999 0016 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1000              	.LVL103:
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1001              		.loc 1 1137 0
 1002 001a FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 1003              	.LVL104:
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1004              		.loc 1 1141 0
 1005 001e 2378     		ldrb	r3, [r4]
 1006 0020 7B43     		muls	r3, r7
 1007 0022 9A59     		ldr	r2, [r3, r6]
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
 1008              		.loc 1 1140 0
 1009 0024 0A4B     		ldr	r3, .L57+8
 1010 0026 1A60     		str	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
 1011              		.loc 1 1144 0
 1012 0028 0A4B     		ldr	r3, .L57+12
 1013 002a DA68     		ldr	r2, [r3, #12]
 1014 002c 7F21     		movs	r1, #127
 1015 002e 8A43     		bics	r2, r1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 67


 1016 0030 DA60     		str	r2, [r3, #12]
1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1017              		.loc 1 1145 0
 1018 0032 2178     		ldrb	r1, [r4]
 1019 0034 DA68     		ldr	r2, [r3, #12]
 1020 0036 0A43     		orrs	r2, r1
 1021 0038 DA60     		str	r2, [r3, #12]
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1022              		.loc 1 1148 0
 1023 003a 2800     		movs	r0, r5
 1024 003c FFF7FEFF 		bl	CapSense_1_SsCSDCalculateScanDuration
 1025              	.LVL105:
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
 1026              		.loc 1 1152 0
 1027 0040 FFF7FEFF 		bl	CapSense_1_SsCSDConfigClock
 1028              	.LVL106:
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1029              		.loc 1 1155 0
 1030              		@ sp needed
 1031              	.LVL107:
 1032              	.LVL108:
 1033              	.LVL109:
 1034 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1035              	.L58:
 1036 0046 C046     		.align	2
 1037              	.L57:
 1038 0048 00000000 		.word	CapSense_1_dsFlash
 1039 004c 00000000 		.word	CapSense_1_widgetIndex
 1040 0050 00000000 		.word	CapSense_1_curSnsIOPtr
 1041 0054 00000000 		.word	CapSense_1_dsRam
 1042              		.cfi_endproc
 1043              	.LFE7:
 1044              		.size	CapSense_1_CSDSetupWidget, .-CapSense_1_CSDSetupWidget
 1045              		.section	.text.CapSense_1_CSDSetupWidgetExt,"ax",%progbits
 1046              		.align	2
 1047              		.global	CapSense_1_CSDSetupWidgetExt
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	CapSense_1_CSDSetupWidgetExt, %function
 1051              	CapSense_1_CSDSetupWidgetExt:
 1052              	.LFB8:
1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1053              		.loc 1 1202 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL110:
 1058 0000 70B5     		push	{r4, r5, r6, lr}
 1059              		.cfi_def_cfa_offset 16
 1060              		.cfi_offset 4, -16
 1061              		.cfi_offset 5, -12
 1062              		.cfi_offset 6, -8
 1063              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 1064              		.loc 1 1203 0
 1065 0002 2C23     		movs	r3, #44
 1066 0004 4343     		muls	r3, r0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 68


 1067 0006 134A     		ldr	r2, .L60
 1068 0008 D318     		adds	r3, r2, r3
 1069 000a 5D68     		ldr	r5, [r3, #4]
 1070              	.LVL111:
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1071              		.loc 1 1207 0
 1072 000c C9B2     		uxtb	r1, r1
 1073              	.LVL112:
 1074 000e 124C     		ldr	r4, .L60+4
 1075 0010 2170     		strb	r1, [r4]
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 1076              		.loc 1 1211 0
 1077 0012 9968     		ldr	r1, [r3, #8]
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1078              		.loc 1 1212 0
 1079 0014 2378     		ldrb	r3, [r4]
 1080 0016 DBB2     		uxtb	r3, r3
 1081 0018 9A00     		lsls	r2, r3, #2
 1082 001a D318     		adds	r3, r2, r3
 1083 001c 5A00     		lsls	r2, r3, #1
 1084 001e 8A18     		adds	r2, r1, r2
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1085              		.loc 1 1210 0
 1086 0020 0E4B     		ldr	r3, .L60+8
 1087 0022 1A60     		str	r2, [r3]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1088              		.loc 1 1214 0
 1089 0024 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 1090              	.LVL113:
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1091              		.loc 1 1217 0
 1092 0028 2800     		movs	r0, r5
 1093 002a FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1094              	.LVL114:
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
 1095              		.loc 1 1228 0
 1096 002e 2378     		ldrb	r3, [r4]
 1097 0030 DBB2     		uxtb	r3, r3
 1098 0032 0B49     		ldr	r1, .L60+12
 1099 0034 DA00     		lsls	r2, r3, #3
 1100 0036 D31A     		subs	r3, r2, r3
 1101 0038 9800     		lsls	r0, r3, #2
 1102 003a 0B68     		ldr	r3, [r1]
 1103 003c 9C46     		mov	ip, r3
 1104 003e 6044     		add	r0, r0, ip
 1105 0040 0860     		str	r0, [r1]
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1106              		.loc 1 1229 0
 1107 0042 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1108              	.LVL115:
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1109              		.loc 1 1239 0
 1110 0046 0122     		movs	r2, #1
 1111 0048 064B     		ldr	r3, .L60+16
 1112 004a 1A70     		strb	r2, [r3]
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1113              		.loc 1 1242 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 69


 1114 004c 0648     		ldr	r0, .L60+20
 1115 004e FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1116              	.LVL116:
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1117              		.loc 1 1243 0
 1118              		@ sp needed
 1119              	.LVL117:
 1120 0052 70BD     		pop	{r4, r5, r6, pc}
 1121              	.L61:
 1122              		.align	2
 1123              	.L60:
 1124 0054 00000000 		.word	CapSense_1_dsFlash
 1125 0058 00000000 		.word	CapSense_1_sensorIndex
 1126 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1127 0060 00000000 		.word	CapSense_1_curSnsIOPtr
 1128 0064 00000000 		.word	.LANCHOR1
 1129 0068 00000000 		.word	CapSense_1_CSDPostSingleScan
 1130              		.cfi_endproc
 1131              	.LFE8:
 1132              		.size	CapSense_1_CSDSetupWidgetExt, .-CapSense_1_CSDSetupWidgetExt
 1133              		.section	.text.CapSense_1_SsCSDDisconnectSnsExt,"ax",%progbits
 1134              		.align	2
 1135              		.global	CapSense_1_SsCSDDisconnectSnsExt
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CapSense_1_SsCSDDisconnectSnsExt, %function
 1139              	CapSense_1_SsCSDDisconnectSnsExt:
 1140              	.LFB13:
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1141              		.loc 1 1569 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL118:
 1146 0000 10B5     		push	{r4, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 1150              		.loc 1 1576 0
 1151 0002 2C23     		movs	r3, #44
 1152 0004 5843     		muls	r0, r3
 1153              	.LVL119:
 1154 0006 054B     		ldr	r3, .L63
 1155 0008 C058     		ldr	r0, [r0, r3]
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1156              		.loc 1 1577 0
 1157 000a CB00     		lsls	r3, r1, #3
 1158 000c 591A     		subs	r1, r3, r1
 1159              	.LVL120:
 1160 000e 8B00     		lsls	r3, r1, #2
 1161 0010 C018     		adds	r0, r0, r3
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 1162              		.loc 1 1575 0
 1163 0012 034B     		ldr	r3, .L63+4
 1164 0014 1860     		str	r0, [r3]
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 70


 1165              		.loc 1 1610 0
 1166 0016 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1167              	.LVL121:
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1168              		.loc 1 1612 0
 1169              		@ sp needed
 1170 001a 10BD     		pop	{r4, pc}
 1171              	.L64:
 1172              		.align	2
 1173              	.L63:
 1174 001c 00000000 		.word	CapSense_1_dsFlash
 1175 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1176              		.cfi_endproc
 1177              	.LFE13:
 1178              		.size	CapSense_1_SsCSDDisconnectSnsExt, .-CapSense_1_SsCSDDisconnectSnsExt
 1179              		.section	.text.CapSense_1_SsCSDCalibrateOneSensor,"ax",%progbits
 1180              		.align	2
 1181              		.code	16
 1182              		.thumb_func
 1183              		.type	CapSense_1_SsCSDCalibrateOneSensor, %function
 1184              	CapSense_1_SsCSDCalibrateOneSensor:
 1185              	.LFB19:
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
 1186              		.loc 1 1911 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 8
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              	.LVL122:
 1191 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1192              		.cfi_def_cfa_offset 20
 1193              		.cfi_offset 4, -20
 1194              		.cfi_offset 5, -16
 1195              		.cfi_offset 6, -12
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 4746     		mov	r7, r8
 1199 0004 80B4     		push	{r7}
 1200              		.cfi_def_cfa_offset 24
 1201              		.cfi_offset 8, -24
 1202 0006 82B0     		sub	sp, sp, #8
 1203              		.cfi_def_cfa_offset 32
 1204 0008 0700     		movs	r7, r0
 1205 000a 0E00     		movs	r6, r1
 1206 000c 9046     		mov	r8, r2
 1207              	.LVL123:
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1208              		.loc 1 1924 0
 1209 000e 304A     		ldr	r2, .L72
 1210              	.LVL124:
 1211 0010 1378     		ldrb	r3, [r2]
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 1212              		.loc 1 1923 0
 1213 0012 2C21     		movs	r1, #44
 1214              	.LVL125:
 1215 0014 4B43     		muls	r3, r1
 1216 0016 2F49     		ldr	r1, .L72+4
 1217 0018 CB18     		adds	r3, r1, r3
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 71


 1218 001a 5B68     		ldr	r3, [r3, #4]
 1219 001c 0193     		str	r3, [sp, #4]
 1220              	.LVL126:
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1221              		.loc 1 1926 0
 1222 001e 0023     		movs	r3, #0
 1223              	.LVL127:
 1224 0020 3370     		strb	r3, [r6]
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1225              		.loc 1 1933 0
 1226 0022 1078     		ldrb	r0, [r2]
 1227              	.LVL128:
 1228 0024 C0B2     		uxtb	r0, r0
 1229 0026 2C4B     		ldr	r3, .L72+8
 1230 0028 1978     		ldrb	r1, [r3]
 1231 002a C9B2     		uxtb	r1, r1
 1232 002c FFF7FEFF 		bl	CapSense_1_CSDSetupWidgetExt
 1233              	.LVL129:
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1234              		.loc 1 1937 0
 1235 0030 FFF7FEFF 		bl	CapSense_1_SsCSDSetSingleIdacMode
 1236              	.LVL130:
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1237              		.loc 1 1916 0
 1238 0034 0024     		movs	r4, #0
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
 1239              		.loc 1 1913 0
 1240 0036 8025     		movs	r5, #128
 1241 0038 6D00     		lsls	r5, r5, #1
 1242              	.LVL131:
 1243              	.L70:
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1244              		.loc 1 1947 0
 1245 003a BC42     		cmp	r4, r7
 1246 003c 02D2     		bcs	.L66
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1247              		.loc 1 1950 0
 1248 003e 3378     		ldrb	r3, [r6]
 1249 0040 AB43     		bics	r3, r5
 1250 0042 3370     		strb	r3, [r6]
 1251              	.L66:
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1252              		.loc 1 1968 0
 1253 0044 6D08     		lsrs	r5, r5, #1
 1254              	.LVL132:
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1255              		.loc 1 1971 0
 1256 0046 3378     		ldrb	r3, [r6]
 1257 0048 2B43     		orrs	r3, r5
 1258 004a 3370     		strb	r3, [r6]
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1259              		.loc 1 1978 0
 1260 004c 0198     		ldr	r0, [sp, #4]
 1261 004e FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1262              	.LVL133:
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1263              		.loc 1 1981 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 72


 1264 0052 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 1265              	.LVL134:
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
 1266              		.loc 1 1984 0
 1267 0056 E123     		movs	r3, #225
 1268 0058 DB01     		lsls	r3, r3, #7
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1269              		.loc 1 1985 0
 1270 005a 00E0     		b	.L67
 1271              	.LVL135:
 1272              	.L69:
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1273              		.loc 1 1989 0
 1274 005c 013B     		subs	r3, r3, #1
 1275              	.LVL136:
 1276              	.L67:
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1277              		.loc 1 1985 0
 1278 005e 1F4A     		ldr	r2, .L72+12
 1279 0060 D268     		ldr	r2, [r2, #12]
 1280 0062 1206     		lsls	r2, r2, #24
 1281 0064 01D5     		bpl	.L68
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1282              		.loc 1 1985 0 is_stmt 0 discriminator 1
 1283 0066 002B     		cmp	r3, #0
 1284 0068 F8D1     		bne	.L69
 1285              	.L68:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1286              		.loc 1 1993 0 is_stmt 1
 1287 006a 1D4B     		ldr	r3, .L72+16
 1288              	.LVL137:
 1289 006c 1B68     		ldr	r3, [r3]
 1290 006e 1C88     		ldrh	r4, [r3]
 1291              	.LVL138:
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1292              		.loc 1 1999 0
 1293 0070 002D     		cmp	r5, #0
 1294 0072 E2D1     		bne	.L70
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1295              		.loc 1 2005 0
 1296 0074 164B     		ldr	r3, .L72
 1297 0076 1B78     		ldrb	r3, [r3]
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
 1298              		.loc 1 2006 0
 1299 0078 2C22     		movs	r2, #44
 1300 007a 5343     		muls	r3, r2
 1301 007c 154A     		ldr	r2, .L72+4
 1302 007e 9858     		ldr	r0, [r3, r2]
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1303              		.loc 1 2007 0
 1304 0080 154B     		ldr	r3, .L72+8
 1305 0082 1A78     		ldrb	r2, [r3]
 1306 0084 D2B2     		uxtb	r2, r2
 1307 0086 D300     		lsls	r3, r2, #3
 1308 0088 9A1A     		subs	r2, r3, r2
 1309 008a 9300     		lsls	r3, r2, #2
 1310 008c C018     		adds	r0, r0, r3
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 73


2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1311              		.loc 1 2005 0
 1312 008e 154B     		ldr	r3, .L72+20
 1313 0090 1860     		str	r0, [r3]
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1314              		.loc 1 2010 0
 1315 0092 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1316              	.LVL139:
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1317              		.loc 1 2014 0
 1318 0096 0022     		movs	r2, #0
 1319 0098 134B     		ldr	r3, .L72+24
 1320 009a 1A70     		strb	r2, [r3]
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1321              		.loc 1 2018 0
 1322 009c FFF7FEFF 		bl	CapSense_1_SsCSDRestoreIdacMode
 1323              	.LVL140:
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1324              		.loc 1 2022 0
 1325 00a0 2200     		movs	r2, r4
 1326 00a2 3900     		movs	r1, r7
 1327 00a4 0198     		ldr	r0, [sp, #4]
 1328 00a6 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateCheck
 1329              	.LVL141:
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1330              		.loc 1 2032 0
 1331 00aa 4346     		mov	r3, r8
 1332 00ac 1A78     		ldrb	r2, [r3]
 1333 00ae 3378     		ldrb	r3, [r6]
 1334 00b0 9A42     		cmp	r2, r3
 1335 00b2 04D2     		bcs	.L71
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 1336              		.loc 1 2034 0
 1337 00b4 4246     		mov	r2, r8
 1338 00b6 1370     		strb	r3, [r2]
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
 1339              		.loc 1 2037 0
 1340 00b8 0C4A     		ldr	r2, .L72+28
 1341 00ba 1372     		strb	r3, [r2, #8]
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1342              		.loc 1 2038 0
 1343 00bc 5481     		strh	r4, [r2, #10]
 1344              	.L71:
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1345              		.loc 1 2057 0
 1346 00be 084B     		ldr	r3, .L72+16
 1347 00c0 1B68     		ldr	r3, [r3]
 1348 00c2 3278     		ldrb	r2, [r6]
 1349 00c4 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1350              		.loc 1 2065 0
 1351 00c6 02B0     		add	sp, sp, #8
 1352              		@ sp needed
 1353              	.LVL142:
 1354              	.LVL143:
 1355              	.LVL144:
 1356              	.LVL145:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 74


 1357              	.LVL146:
 1358 00c8 04BC     		pop	{r2}
 1359 00ca 9046     		mov	r8, r2
 1360 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 1361              	.L73:
 1362 00ce C046     		.align	2
 1363              	.L72:
 1364 00d0 00000000 		.word	CapSense_1_widgetIndex
 1365 00d4 00000000 		.word	CapSense_1_dsFlash
 1366 00d8 00000000 		.word	CapSense_1_sensorIndex
 1367 00dc 00000000 		.word	CapSense_1_dsRam
 1368 00e0 00000000 		.word	CapSense_1_curRamSnsPtr
 1369 00e4 00000000 		.word	CapSense_1_curSnsIOPtr
 1370 00e8 00000000 		.word	.LANCHOR1
 1371 00ec 00000000 		.word	.LANCHOR0
 1372              		.cfi_endproc
 1373              	.LFE19:
 1374              		.size	CapSense_1_SsCSDCalibrateOneSensor, .-CapSense_1_SsCSDCalibrateOneSensor
 1375              		.section	.text.CapSense_1_CSDCalibrateWidget,"ax",%progbits
 1376              		.align	2
 1377              		.global	CapSense_1_CSDCalibrateWidget
 1378              		.code	16
 1379              		.thumb_func
 1380              		.type	CapSense_1_CSDCalibrateWidget, %function
 1381              	CapSense_1_CSDCalibrateWidget:
 1382              	.LFB20:
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
 1383              		.loc 1 2111 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 16
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 1387              	.LVL147:
 1388 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1389              		.cfi_def_cfa_offset 20
 1390              		.cfi_offset 4, -20
 1391              		.cfi_offset 5, -16
 1392              		.cfi_offset 6, -12
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 4F46     		mov	r7, r9
 1396 0004 80B4     		push	{r7}
 1397              		.cfi_def_cfa_offset 24
 1398              		.cfi_offset 9, -24
 1399 0006 84B0     		sub	sp, sp, #16
 1400              		.cfi_def_cfa_offset 40
 1401 0008 0400     		movs	r4, r0
 1402 000a 8946     		mov	r9, r1
 1403              	.LVL148:
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1404              		.loc 1 2123 0
 1405 000c 2C23     		movs	r3, #44
 1406 000e 4343     		muls	r3, r0
 1407 0010 394A     		ldr	r2, .L81
 1408 0012 D318     		adds	r3, r2, r3
 1409 0014 5F68     		ldr	r7, [r3, #4]
 1410              	.LVL149:
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 75


 1411              		.loc 1 2127 0
 1412 0016 0125     		movs	r5, #1
 1413 0018 03AB     		add	r3, sp, #12
 1414 001a 1D70     		strb	r5, [r3]
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1415              		.loc 1 2135 0
 1416 001c 3B88     		ldrh	r3, [r7]
 1417 001e 2800     		movs	r0, r5
 1418              	.LVL150:
 1419 0020 9840     		lsls	r0, r0, r3
 1420 0022 0138     		subs	r0, r0, #1
 1421              	.LVL151:
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1422              		.loc 1 2138 0
 1423 0024 4843     		muls	r0, r1
 1424              	.LVL152:
 1425 0026 6421     		movs	r1, #100
 1426              	.LVL153:
 1427 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1428              	.LVL154:
 1429 002c 0190     		str	r0, [sp, #4]
 1430              	.LVL155:
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1431              		.loc 1 2141 0
 1432 002e E2B2     		uxtb	r2, r4
 1433 0030 324B     		ldr	r3, .L81+4
 1434 0032 1A70     		strb	r2, [r3]
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1435              		.loc 1 2144 0
 1436 0034 3248     		ldr	r0, .L81+8
 1437              	.LVL156:
 1438 0036 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1439              	.LVL157:
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1440              		.loc 1 2147 0
 1441 003a 3E00     		movs	r6, r7
 1442 003c 0936     		adds	r6, r6, #9
 1443              	.LVL158:
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
 1444              		.loc 1 2150 0
 1445 003e 314B     		ldr	r3, .L81+12
 1446 0040 1D72     		strb	r5, [r3, #8]
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1447              		.loc 1 2151 0
 1448 0042 5D81     		strh	r5, [r3, #10]
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1449              		.loc 1 2155 0
 1450 0044 0022     		movs	r2, #0
 1451 0046 304B     		ldr	r3, .L81+16
 1452 0048 1A70     		strb	r2, [r3]
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1453              		.loc 1 2113 0
 1454 004a 0025     		movs	r5, #0
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1455              		.loc 1 2155 0
 1456 004c 0AE0     		b	.L75
 1457              	.LVL159:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 76


 1458              	.L76:
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 1459              		.loc 1 2160 0
 1460 004e 03AA     		add	r2, sp, #12
 1461 0050 3100     		movs	r1, r6
 1462 0052 0198     		ldr	r0, [sp, #4]
 1463 0054 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateOneSensor
 1464              	.LVL160:
 1465 0058 0543     		orrs	r5, r0
 1466              	.LVL161:
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1467              		.loc 1 2157 0
 1468 005a 2B4A     		ldr	r2, .L81+16
 1469 005c 1378     		ldrb	r3, [r2]
 1470 005e 0133     		adds	r3, r3, #1
 1471 0060 DBB2     		uxtb	r3, r3
 1472 0062 1370     		strb	r3, [r2]
 1473              	.LVL162:
 1474              	.L75:
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
 1475              		.loc 1 2156 0 discriminator 1
 1476 0064 2C23     		movs	r3, #44
 1477 0066 6343     		muls	r3, r4
 1478 0068 234A     		ldr	r2, .L81
 1479 006a D318     		adds	r3, r2, r3
 1480 006c DA7E     		ldrb	r2, [r3, #27]
 1481 006e 264B     		ldr	r3, .L81+16
 1482 0070 1B78     		ldrb	r3, [r3]
 1483 0072 DBB2     		uxtb	r3, r3
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1484              		.loc 1 2155 0 discriminator 1
 1485 0074 9A42     		cmp	r2, r3
 1486 0076 EAD8     		bhi	.L76
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1487              		.loc 1 2166 0
 1488 0078 03AB     		add	r3, sp, #12
 1489 007a 1B78     		ldrb	r3, [r3]
 1490 007c 0133     		adds	r3, r3, #1
 1491 007e 5B08     		lsrs	r3, r3, #1
 1492 0080 7B72     		strb	r3, [r7, #9]
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1493              		.loc 1 2173 0
 1494 0082 0022     		movs	r2, #0
 1495 0084 204B     		ldr	r3, .L81+16
 1496 0086 1A70     		strb	r2, [r3]
 1497 0088 23E0     		b	.L77
 1498              	.LVL163:
 1499              	.L80:
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
 1500              		.loc 1 2178 0
 1501 008a 2C23     		movs	r3, #44
 1502 008c 6343     		muls	r3, r4
 1503 008e 1A4A     		ldr	r2, .L81
 1504 0090 D318     		adds	r3, r2, r3
 1505 0092 9E68     		ldr	r6, [r3, #8]
 1506 0094 1C4B     		ldr	r3, .L81+16
 1507 0096 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 77


 1508 0098 DBB2     		uxtb	r3, r3
 1509 009a 9A00     		lsls	r2, r3, #2
 1510 009c D318     		adds	r3, r2, r3
 1511 009e 5A00     		lsls	r2, r3, #1
 1512 00a0 B618     		adds	r6, r6, r2
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
 1513              		.loc 1 2177 0
 1514 00a2 1A4B     		ldr	r3, .L81+20
 1515 00a4 1E60     		str	r6, [r3]
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 1516              		.loc 1 2180 0
 1517 00a6 737A     		ldrb	r3, [r6, #9]
 1518 00a8 787A     		ldrb	r0, [r7, #9]
 1519 00aa 8342     		cmp	r3, r0
 1520 00ac 0AD3     		bcc	.L78
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
 1521              		.loc 1 2182 0
 1522 00ae 1B1A     		subs	r3, r3, r0
 1523 00b0 D8B2     		uxtb	r0, r3
 1524 00b2 7072     		strb	r0, [r6, #9]
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
 1525              		.loc 1 2186 0
 1526 00b4 4B46     		mov	r3, r9
 1527 00b6 5843     		muls	r0, r3
 1528 00b8 6330     		adds	r0, r0, #99
 1529 00ba 6421     		movs	r1, #100
 1530 00bc FFF7FEFF 		bl	__aeabi_uidiv
 1531              	.LVL164:
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
 1532              		.loc 1 2185 0
 1533 00c0 7072     		strb	r0, [r6, #9]
 1534 00c2 01E0     		b	.L79
 1535              	.L78:
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
 1536              		.loc 1 2193 0
 1537 00c4 0023     		movs	r3, #0
 1538 00c6 7372     		strb	r3, [r6, #9]
 1539              	.L79:
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1540              		.loc 1 2175 0
 1541 00c8 0F4A     		ldr	r2, .L81+16
 1542 00ca 1378     		ldrb	r3, [r2]
 1543 00cc 0133     		adds	r3, r3, #1
 1544 00ce DBB2     		uxtb	r3, r3
 1545 00d0 1370     		strb	r3, [r2]
 1546              	.L77:
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
 1547              		.loc 1 2174 0 discriminator 1
 1548 00d2 2C23     		movs	r3, #44
 1549 00d4 6343     		muls	r3, r4
 1550 00d6 084A     		ldr	r2, .L81
 1551 00d8 D318     		adds	r3, r2, r3
 1552 00da DA7E     		ldrb	r2, [r3, #27]
 1553 00dc 0A4B     		ldr	r3, .L81+16
 1554 00de 1B78     		ldrb	r3, [r3]
 1555 00e0 DBB2     		uxtb	r3, r3
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 78


 1556              		.loc 1 2173 0 discriminator 1
 1557 00e2 9A42     		cmp	r2, r3
 1558 00e4 D1D8     		bhi	.L80
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1559              		.loc 1 2343 0
 1560 00e6 0022     		movs	r2, #0
 1561 00e8 074B     		ldr	r3, .L81+16
 1562 00ea 1A70     		strb	r2, [r3]
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
 1563              		.loc 1 2346 0
 1564 00ec 2800     		movs	r0, r5
 1565 00ee 04B0     		add	sp, sp, #16
 1566              		@ sp needed
 1567              	.LVL165:
 1568              	.LVL166:
 1569              	.LVL167:
 1570              	.LVL168:
 1571 00f0 04BC     		pop	{r2}
 1572 00f2 9146     		mov	r9, r2
 1573 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1574              	.L82:
 1575 00f6 C046     		.align	2
 1576              	.L81:
 1577 00f8 00000000 		.word	CapSense_1_dsFlash
 1578 00fc 00000000 		.word	CapSense_1_widgetIndex
 1579 0100 00000000 		.word	CapSense_1_CSDPostSingleScan
 1580 0104 00000000 		.word	.LANCHOR0
 1581 0108 00000000 		.word	CapSense_1_sensorIndex
 1582 010c 00000000 		.word	CapSense_1_curRamSnsPtr
 1583              		.cfi_endproc
 1584              	.LFE20:
 1585              		.size	CapSense_1_CSDCalibrateWidget, .-CapSense_1_CSDCalibrateWidget
 1586              		.global	CapSense_1_calibratedRawcount
 1587              		.global	CapSense_1_calibratedIdac
 1588              		.global	CapSense_1_configCsd
 1589              		.data
 1590              		.align	2
 1591              		.set	.LANCHOR0,. + 0
 1592              		.type	CapSense_1_configCsd, %object
 1593              		.size	CapSense_1_configCsd, 4
 1594              	CapSense_1_configCsd:
 1595 0000 0008C001 		.word	29362176
 1596              		.type	CapSense_1_counterResolution, %object
 1597              		.size	CapSense_1_counterResolution, 4
 1598              	CapSense_1_counterResolution:
 1599 0004 0000FF0F 		.word	268369920
 1600              		.type	CapSense_1_calibratedIdac, %object
 1601              		.size	CapSense_1_calibratedIdac, 1
 1602              	CapSense_1_calibratedIdac:
 1603 0008 01       		.byte	1
 1604 0009 00       		.space	1
 1605              		.type	CapSense_1_calibratedRawcount, %object
 1606              		.size	CapSense_1_calibratedRawcount, 2
 1607              	CapSense_1_calibratedRawcount:
 1608 000a 0100     		.short	1
 1609              		.bss
 1610              		.set	.LANCHOR1,. + 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 79


 1611              		.type	CapSense_1_eleCsdDisconnectFlag, %object
 1612              		.size	CapSense_1_eleCsdDisconnectFlag, 1
 1613              	CapSense_1_eleCsdDisconnectFlag:
 1614 0000 00       		.space	1
 1615              		.text
 1616              	.Letext0:
 1617              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1618              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1619              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1620              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1621              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1622              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1623              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1624              		.section	.debug_info,"",%progbits
 1625              	.Ldebug_info0:
 1626 0000 910F0000 		.4byte	0xf91
 1627 0004 0400     		.2byte	0x4
 1628 0006 00000000 		.4byte	.Ldebug_abbrev0
 1629 000a 04       		.byte	0x4
 1630 000b 01       		.uleb128 0x1
 1631 000c E4020000 		.4byte	.LASF170
 1632 0010 0C       		.byte	0xc
 1633 0011 CF030000 		.4byte	.LASF171
 1634 0015 97050000 		.4byte	.LASF172
 1635 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1636 001d 00000000 		.4byte	0
 1637 0021 00000000 		.4byte	.Ldebug_line0
 1638 0025 02       		.uleb128 0x2
 1639 0026 01       		.byte	0x1
 1640 0027 06       		.byte	0x6
 1641 0028 F60A0000 		.4byte	.LASF0
 1642 002c 02       		.uleb128 0x2
 1643 002d 01       		.byte	0x1
 1644 002e 08       		.byte	0x8
 1645 002f 340A0000 		.4byte	.LASF1
 1646 0033 02       		.uleb128 0x2
 1647 0034 02       		.byte	0x2
 1648 0035 05       		.byte	0x5
 1649 0036 38080000 		.4byte	.LASF2
 1650 003a 02       		.uleb128 0x2
 1651 003b 02       		.byte	0x2
 1652 003c 07       		.byte	0x7
 1653 003d 070B0000 		.4byte	.LASF3
 1654 0041 02       		.uleb128 0x2
 1655 0042 04       		.byte	0x4
 1656 0043 05       		.byte	0x5
 1657 0044 42080000 		.4byte	.LASF4
 1658 0048 02       		.uleb128 0x2
 1659 0049 04       		.byte	0x4
 1660 004a 07       		.byte	0x7
 1661 004b B0090000 		.4byte	.LASF5
 1662 004f 02       		.uleb128 0x2
 1663 0050 08       		.byte	0x8
 1664 0051 05       		.byte	0x5
 1665 0052 EC050000 		.4byte	.LASF6
 1666 0056 02       		.uleb128 0x2
 1667 0057 08       		.byte	0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 80


 1668 0058 07       		.byte	0x7
 1669 0059 66020000 		.4byte	.LASF7
 1670 005d 03       		.uleb128 0x3
 1671 005e 04       		.byte	0x4
 1672 005f 05       		.byte	0x5
 1673 0060 696E7400 		.ascii	"int\000"
 1674 0064 02       		.uleb128 0x2
 1675 0065 04       		.byte	0x4
 1676 0066 07       		.byte	0x7
 1677 0067 8E000000 		.4byte	.LASF8
 1678 006b 04       		.uleb128 0x4
 1679 006c 5E0B0000 		.4byte	.LASF9
 1680 0070 02       		.byte	0x2
 1681 0071 E401     		.2byte	0x1e4
 1682 0073 2C000000 		.4byte	0x2c
 1683 0077 04       		.uleb128 0x4
 1684 0078 24050000 		.4byte	.LASF10
 1685 007c 02       		.byte	0x2
 1686 007d E501     		.2byte	0x1e5
 1687 007f 3A000000 		.4byte	0x3a
 1688 0083 04       		.uleb128 0x4
 1689 0084 F5060000 		.4byte	.LASF11
 1690 0088 02       		.byte	0x2
 1691 0089 E601     		.2byte	0x1e6
 1692 008b 48000000 		.4byte	0x48
 1693 008f 02       		.uleb128 0x2
 1694 0090 04       		.byte	0x4
 1695 0091 04       		.byte	0x4
 1696 0092 38020000 		.4byte	.LASF12
 1697 0096 02       		.uleb128 0x2
 1698 0097 08       		.byte	0x8
 1699 0098 04       		.byte	0x4
 1700 0099 640B0000 		.4byte	.LASF13
 1701 009d 02       		.uleb128 0x2
 1702 009e 01       		.byte	0x1
 1703 009f 08       		.byte	0x8
 1704 00a0 F0040000 		.4byte	.LASF14
 1705 00a4 04       		.uleb128 0x4
 1706 00a5 0B0A0000 		.4byte	.LASF15
 1707 00a9 02       		.byte	0x2
 1708 00aa 8602     		.2byte	0x286
 1709 00ac 48000000 		.4byte	0x48
 1710 00b0 05       		.uleb128 0x5
 1711 00b1 6B000000 		.4byte	0x6b
 1712 00b5 04       		.uleb128 0x4
 1713 00b6 8D070000 		.4byte	.LASF16
 1714 00ba 02       		.byte	0x2
 1715 00bb 9002     		.2byte	0x290
 1716 00bd C1000000 		.4byte	0xc1
 1717 00c1 05       		.uleb128 0x5
 1718 00c2 83000000 		.4byte	0x83
 1719 00c6 04       		.uleb128 0x4
 1720 00c7 FA050000 		.4byte	.LASF17
 1721 00cb 03       		.byte	0x3
 1722 00cc 0101     		.2byte	0x101
 1723 00ce 77000000 		.4byte	0x77
 1724 00d2 04       		.uleb128 0x4
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 81


 1725 00d3 AD020000 		.4byte	.LASF18
 1726 00d7 03       		.byte	0x3
 1727 00d8 0501     		.2byte	0x105
 1728 00da 6B000000 		.4byte	0x6b
 1729 00de 06       		.uleb128 0x6
 1730 00df 0C       		.byte	0xc
 1731 00e0 04       		.byte	0x4
 1732 00e1 6E       		.byte	0x6e
 1733 00e2 3B010000 		.4byte	0x13b
 1734 00e6 07       		.uleb128 0x7
 1735 00e7 930B0000 		.4byte	.LASF19
 1736 00eb 04       		.byte	0x4
 1737 00ec 73       		.byte	0x73
 1738 00ed 77000000 		.4byte	0x77
 1739 00f1 00       		.byte	0
 1740 00f2 07       		.uleb128 0x7
 1741 00f3 9A0B0000 		.4byte	.LASF20
 1742 00f7 04       		.byte	0x4
 1743 00f8 77       		.byte	0x77
 1744 00f9 77000000 		.4byte	0x77
 1745 00fd 02       		.byte	0x2
 1746 00fe 07       		.uleb128 0x7
 1747 00ff A10B0000 		.4byte	.LASF21
 1748 0103 04       		.byte	0x4
 1749 0104 7B       		.byte	0x7b
 1750 0105 77000000 		.4byte	0x77
 1751 0109 04       		.byte	0x4
 1752 010a 07       		.uleb128 0x7
 1753 010b A80B0000 		.4byte	.LASF22
 1754 010f 04       		.byte	0x4
 1755 0110 7F       		.byte	0x7f
 1756 0111 77000000 		.4byte	0x77
 1757 0115 06       		.byte	0x6
 1758 0116 07       		.uleb128 0x7
 1759 0117 AF0B0000 		.4byte	.LASF23
 1760 011b 04       		.byte	0x4
 1761 011c 83       		.byte	0x83
 1762 011d 77000000 		.4byte	0x77
 1763 0121 08       		.byte	0x8
 1764 0122 07       		.uleb128 0x7
 1765 0123 B60B0000 		.4byte	.LASF24
 1766 0127 04       		.byte	0x4
 1767 0128 87       		.byte	0x87
 1768 0129 6B000000 		.4byte	0x6b
 1769 012d 0A       		.byte	0xa
 1770 012e 07       		.uleb128 0x7
 1771 012f BD0B0000 		.4byte	.LASF25
 1772 0133 04       		.byte	0x4
 1773 0134 8B       		.byte	0x8b
 1774 0135 6B000000 		.4byte	0x6b
 1775 0139 0B       		.byte	0xb
 1776 013a 00       		.byte	0
 1777 013b 08       		.uleb128 0x8
 1778 013c A5040000 		.4byte	.LASF26
 1779 0140 04       		.byte	0x4
 1780 0141 8C       		.byte	0x8c
 1781 0142 DE000000 		.4byte	0xde
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 82


 1782 0146 09       		.uleb128 0x9
 1783 0147 01       		.byte	0x1
 1784 0148 2C000000 		.4byte	0x2c
 1785 014c 05       		.byte	0x5
 1786 014d 6F       		.byte	0x6f
 1787 014e 71010000 		.4byte	0x171
 1788 0152 0A       		.uleb128 0xa
 1789 0153 17070000 		.4byte	.LASF27
 1790 0157 00       		.byte	0
 1791 0158 0A       		.uleb128 0xa
 1792 0159 8A090000 		.4byte	.LASF28
 1793 015d 01       		.byte	0x1
 1794 015e 0A       		.uleb128 0xa
 1795 015f A1080000 		.4byte	.LASF29
 1796 0163 02       		.byte	0x2
 1797 0164 0A       		.uleb128 0xa
 1798 0165 01040000 		.4byte	.LASF30
 1799 0169 03       		.byte	0x3
 1800 016a 0A       		.uleb128 0xa
 1801 016b 6F070000 		.4byte	.LASF31
 1802 016f 04       		.byte	0x4
 1803 0170 00       		.byte	0
 1804 0171 06       		.uleb128 0x6
 1805 0172 12       		.byte	0x12
 1806 0173 05       		.byte	0x5
 1807 0174 8D       		.byte	0x8d
 1808 0175 0A020000 		.4byte	0x20a
 1809 0179 07       		.uleb128 0x7
 1810 017a 2B050000 		.4byte	.LASF32
 1811 017e 05       		.byte	0x5
 1812 017f 92       		.byte	0x92
 1813 0180 77000000 		.4byte	0x77
 1814 0184 00       		.byte	0
 1815 0185 07       		.uleb128 0x7
 1816 0186 FA090000 		.4byte	.LASF33
 1817 018a 05       		.byte	0x5
 1818 018b 97       		.byte	0x97
 1819 018c C6000000 		.4byte	0xc6
 1820 0190 02       		.byte	0x2
 1821 0191 07       		.uleb128 0x7
 1822 0192 E8040000 		.4byte	.LASF34
 1823 0196 05       		.byte	0x5
 1824 0197 9C       		.byte	0x9c
 1825 0198 6B000000 		.4byte	0x6b
 1826 019c 04       		.byte	0x4
 1827 019d 07       		.uleb128 0x7
 1828 019e AE060000 		.4byte	.LASF35
 1829 01a2 05       		.byte	0x5
 1830 01a3 A1       		.byte	0xa1
 1831 01a4 6B000000 		.4byte	0x6b
 1832 01a8 05       		.byte	0x5
 1833 01a9 07       		.uleb128 0x7
 1834 01aa FC060000 		.4byte	.LASF36
 1835 01ae 05       		.byte	0x5
 1836 01af A7       		.byte	0xa7
 1837 01b0 6B000000 		.4byte	0x6b
 1838 01b4 06       		.byte	0x6
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 83


 1839 01b5 07       		.uleb128 0x7
 1840 01b6 31060000 		.4byte	.LASF37
 1841 01ba 05       		.byte	0x5
 1842 01bb AD       		.byte	0xad
 1843 01bc 6B000000 		.4byte	0x6b
 1844 01c0 07       		.byte	0x7
 1845 01c1 07       		.uleb128 0x7
 1846 01c2 29040000 		.4byte	.LASF38
 1847 01c6 05       		.byte	0x5
 1848 01c7 B4       		.byte	0xb4
 1849 01c8 D2000000 		.4byte	0xd2
 1850 01cc 08       		.byte	0x8
 1851 01cd 07       		.uleb128 0x7
 1852 01ce CE090000 		.4byte	.LASF39
 1853 01d2 05       		.byte	0x5
 1854 01d3 BB       		.byte	0xbb
 1855 01d4 0A020000 		.4byte	0x20a
 1856 01d8 09       		.byte	0x9
 1857 01d9 07       		.uleb128 0x7
 1858 01da C00A0000 		.4byte	.LASF40
 1859 01de 05       		.byte	0x5
 1860 01df C3       		.byte	0xc3
 1861 01e0 77000000 		.4byte	0x77
 1862 01e4 0A       		.byte	0xa
 1863 01e5 07       		.uleb128 0x7
 1864 01e6 F2070000 		.4byte	.LASF41
 1865 01ea 05       		.byte	0x5
 1866 01eb C8       		.byte	0xc8
 1867 01ec 6B000000 		.4byte	0x6b
 1868 01f0 0C       		.byte	0xc
 1869 01f1 07       		.uleb128 0x7
 1870 01f2 44090000 		.4byte	.LASF42
 1871 01f6 05       		.byte	0x5
 1872 01f7 CE       		.byte	0xce
 1873 01f8 77000000 		.4byte	0x77
 1874 01fc 0E       		.byte	0xe
 1875 01fd 07       		.uleb128 0x7
 1876 01fe C8030000 		.4byte	.LASF43
 1877 0202 05       		.byte	0x5
 1878 0203 D3       		.byte	0xd3
 1879 0204 77000000 		.4byte	0x77
 1880 0208 10       		.byte	0x10
 1881 0209 00       		.byte	0
 1882 020a 0B       		.uleb128 0xb
 1883 020b 6B000000 		.4byte	0x6b
 1884 020f 1A020000 		.4byte	0x21a
 1885 0213 0C       		.uleb128 0xc
 1886 0214 1A020000 		.4byte	0x21a
 1887 0218 00       		.byte	0
 1888 0219 00       		.byte	0
 1889 021a 02       		.uleb128 0x2
 1890 021b 04       		.byte	0x4
 1891 021c 07       		.byte	0x7
 1892 021d 07080000 		.4byte	.LASF44
 1893 0221 08       		.uleb128 0x8
 1894 0222 CE060000 		.4byte	.LASF45
 1895 0226 05       		.byte	0x5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 84


 1896 0227 D4       		.byte	0xd4
 1897 0228 71010000 		.4byte	0x171
 1898 022c 06       		.uleb128 0x6
 1899 022d 14       		.byte	0x14
 1900 022e 05       		.byte	0x5
 1901 022f D9       		.byte	0xd9
 1902 0230 D8020000 		.4byte	0x2d8
 1903 0234 07       		.uleb128 0x7
 1904 0235 2B050000 		.4byte	.LASF32
 1905 0239 05       		.byte	0x5
 1906 023a DE       		.byte	0xde
 1907 023b 77000000 		.4byte	0x77
 1908 023f 00       		.byte	0
 1909 0240 07       		.uleb128 0x7
 1910 0241 FA090000 		.4byte	.LASF33
 1911 0245 05       		.byte	0x5
 1912 0246 E3       		.byte	0xe3
 1913 0247 C6000000 		.4byte	0xc6
 1914 024b 02       		.byte	0x2
 1915 024c 07       		.uleb128 0x7
 1916 024d E8040000 		.4byte	.LASF34
 1917 0251 05       		.byte	0x5
 1918 0252 E8       		.byte	0xe8
 1919 0253 6B000000 		.4byte	0x6b
 1920 0257 04       		.byte	0x4
 1921 0258 07       		.uleb128 0x7
 1922 0259 AE060000 		.4byte	.LASF35
 1923 025d 05       		.byte	0x5
 1924 025e ED       		.byte	0xed
 1925 025f 6B000000 		.4byte	0x6b
 1926 0263 05       		.byte	0x5
 1927 0264 07       		.uleb128 0x7
 1928 0265 FC060000 		.4byte	.LASF36
 1929 0269 05       		.byte	0x5
 1930 026a F3       		.byte	0xf3
 1931 026b 6B000000 		.4byte	0x6b
 1932 026f 06       		.byte	0x6
 1933 0270 07       		.uleb128 0x7
 1934 0271 31060000 		.4byte	.LASF37
 1935 0275 05       		.byte	0x5
 1936 0276 F9       		.byte	0xf9
 1937 0277 6B000000 		.4byte	0x6b
 1938 027b 07       		.byte	0x7
 1939 027c 0D       		.uleb128 0xd
 1940 027d 29040000 		.4byte	.LASF38
 1941 0281 05       		.byte	0x5
 1942 0282 0001     		.2byte	0x100
 1943 0284 D2000000 		.4byte	0xd2
 1944 0288 08       		.byte	0x8
 1945 0289 0D       		.uleb128 0xd
 1946 028a CE090000 		.4byte	.LASF39
 1947 028e 05       		.byte	0x5
 1948 028f 0701     		.2byte	0x107
 1949 0291 0A020000 		.4byte	0x20a
 1950 0295 09       		.byte	0x9
 1951 0296 0D       		.uleb128 0xd
 1952 0297 C00A0000 		.4byte	.LASF40
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 85


 1953 029b 05       		.byte	0x5
 1954 029c 0F01     		.2byte	0x10f
 1955 029e 77000000 		.4byte	0x77
 1956 02a2 0A       		.byte	0xa
 1957 02a3 0D       		.uleb128 0xd
 1958 02a4 F2070000 		.4byte	.LASF41
 1959 02a8 05       		.byte	0x5
 1960 02a9 1401     		.2byte	0x114
 1961 02ab 6B000000 		.4byte	0x6b
 1962 02af 0C       		.byte	0xc
 1963 02b0 0D       		.uleb128 0xd
 1964 02b1 44090000 		.4byte	.LASF42
 1965 02b5 05       		.byte	0x5
 1966 02b6 1A01     		.2byte	0x11a
 1967 02b8 77000000 		.4byte	0x77
 1968 02bc 0E       		.byte	0xe
 1969 02bd 0D       		.uleb128 0xd
 1970 02be C8030000 		.4byte	.LASF43
 1971 02c2 05       		.byte	0x5
 1972 02c3 1F01     		.2byte	0x11f
 1973 02c5 77000000 		.4byte	0x77
 1974 02c9 10       		.byte	0x10
 1975 02ca 0D       		.uleb128 0xd
 1976 02cb 120C0000 		.4byte	.LASF46
 1977 02cf 05       		.byte	0x5
 1978 02d0 2401     		.2byte	0x124
 1979 02d2 D8020000 		.4byte	0x2d8
 1980 02d6 12       		.byte	0x12
 1981 02d7 00       		.byte	0
 1982 02d8 0B       		.uleb128 0xb
 1983 02d9 77000000 		.4byte	0x77
 1984 02dd E8020000 		.4byte	0x2e8
 1985 02e1 0C       		.uleb128 0xc
 1986 02e2 1A020000 		.4byte	0x21a
 1987 02e6 00       		.byte	0
 1988 02e7 00       		.byte	0
 1989 02e8 04       		.uleb128 0x4
 1990 02e9 140A0000 		.4byte	.LASF47
 1991 02ed 05       		.byte	0x5
 1992 02ee 2501     		.2byte	0x125
 1993 02f0 2C020000 		.4byte	0x22c
 1994 02f4 0E       		.uleb128 0xe
 1995 02f5 14       		.byte	0x14
 1996 02f6 05       		.byte	0x5
 1997 02f7 2B01     		.2byte	0x12b
 1998 02f9 0B030000 		.4byte	0x30b
 1999 02fd 0D       		.uleb128 0xd
 2000 02fe 8D0A0000 		.4byte	.LASF48
 2001 0302 05       		.byte	0x5
 2002 0303 3001     		.2byte	0x130
 2003 0305 E8020000 		.4byte	0x2e8
 2004 0309 00       		.byte	0
 2005 030a 00       		.byte	0
 2006 030b 04       		.uleb128 0x4
 2007 030c D0010000 		.4byte	.LASF49
 2008 0310 05       		.byte	0x5
 2009 0311 3101     		.2byte	0x131
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 86


 2010 0313 F4020000 		.4byte	0x2f4
 2011 0317 0E       		.uleb128 0xe
 2012 0318 0A       		.byte	0xa
 2013 0319 05       		.byte	0x5
 2014 031a 3701     		.2byte	0x137
 2015 031c 6F030000 		.4byte	0x36f
 2016 0320 0F       		.uleb128 0xf
 2017 0321 72617700 		.ascii	"raw\000"
 2018 0325 05       		.byte	0x5
 2019 0326 3C01     		.2byte	0x13c
 2020 0328 D8020000 		.4byte	0x2d8
 2021 032c 00       		.byte	0
 2022 032d 0D       		.uleb128 0xd
 2023 032e 020B0000 		.4byte	.LASF50
 2024 0332 05       		.byte	0x5
 2025 0333 4101     		.2byte	0x141
 2026 0335 D8020000 		.4byte	0x2d8
 2027 0339 02       		.byte	0x2
 2028 033a 0D       		.uleb128 0xd
 2029 033b 030A0000 		.4byte	.LASF51
 2030 033f 05       		.byte	0x5
 2031 0340 4701     		.2byte	0x147
 2032 0342 0A020000 		.4byte	0x20a
 2033 0346 04       		.byte	0x4
 2034 0347 0D       		.uleb128 0xd
 2035 0348 85080000 		.4byte	.LASF52
 2036 034c 05       		.byte	0x5
 2037 034d 4C01     		.2byte	0x14c
 2038 034f C6000000 		.4byte	0xc6
 2039 0353 06       		.byte	0x6
 2040 0354 0D       		.uleb128 0xd
 2041 0355 6B0B0000 		.4byte	.LASF53
 2042 0359 05       		.byte	0x5
 2043 035a 5101     		.2byte	0x151
 2044 035c 6F030000 		.4byte	0x36f
 2045 0360 08       		.byte	0x8
 2046 0361 0D       		.uleb128 0xd
 2047 0362 68050000 		.4byte	.LASF54
 2048 0366 05       		.byte	0x5
 2049 0367 5601     		.2byte	0x156
 2050 0369 0A020000 		.4byte	0x20a
 2051 036d 09       		.byte	0x9
 2052 036e 00       		.byte	0
 2053 036f 0B       		.uleb128 0xb
 2054 0370 D2000000 		.4byte	0xd2
 2055 0374 7F030000 		.4byte	0x37f
 2056 0378 0C       		.uleb128 0xc
 2057 0379 1A020000 		.4byte	0x21a
 2058 037d 00       		.byte	0
 2059 037e 00       		.byte	0
 2060 037f 04       		.uleb128 0x4
 2061 0380 790B0000 		.4byte	.LASF55
 2062 0384 05       		.byte	0x5
 2063 0385 5701     		.2byte	0x157
 2064 0387 17030000 		.4byte	0x317
 2065 038b 0E       		.uleb128 0xe
 2066 038c 32       		.byte	0x32
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 87


 2067 038d 05       		.byte	0x5
 2068 038e 5D01     		.2byte	0x15d
 2069 0390 A2030000 		.4byte	0x3a2
 2070 0394 0D       		.uleb128 0xd
 2071 0395 8D0A0000 		.4byte	.LASF48
 2072 0399 05       		.byte	0x5
 2073 039a 6201     		.2byte	0x162
 2074 039c A2030000 		.4byte	0x3a2
 2075 03a0 00       		.byte	0
 2076 03a1 00       		.byte	0
 2077 03a2 0B       		.uleb128 0xb
 2078 03a3 7F030000 		.4byte	0x37f
 2079 03a7 B2030000 		.4byte	0x3b2
 2080 03ab 0C       		.uleb128 0xc
 2081 03ac 1A020000 		.4byte	0x21a
 2082 03b0 04       		.byte	0x4
 2083 03b1 00       		.byte	0
 2084 03b2 04       		.uleb128 0x4
 2085 03b3 2E070000 		.4byte	.LASF56
 2086 03b7 05       		.byte	0x5
 2087 03b8 6301     		.2byte	0x163
 2088 03ba 8B030000 		.4byte	0x38b
 2089 03be 0E       		.uleb128 0xe
 2090 03bf 6C       		.byte	0x6c
 2091 03c0 05       		.byte	0x5
 2092 03c1 6901     		.2byte	0x169
 2093 03c3 A5040000 		.4byte	0x4a5
 2094 03c7 0D       		.uleb128 0xd
 2095 03c8 A6070000 		.4byte	.LASF57
 2096 03cc 05       		.byte	0x5
 2097 03cd 7001     		.2byte	0x170
 2098 03cf 77000000 		.4byte	0x77
 2099 03d3 00       		.byte	0
 2100 03d4 0D       		.uleb128 0xd
 2101 03d5 DD0B0000 		.4byte	.LASF58
 2102 03d9 05       		.byte	0x5
 2103 03da 7501     		.2byte	0x175
 2104 03dc 77000000 		.4byte	0x77
 2105 03e0 02       		.byte	0x2
 2106 03e1 0D       		.uleb128 0xd
 2107 03e2 CE000000 		.4byte	.LASF59
 2108 03e6 05       		.byte	0x5
 2109 03e7 7A01     		.2byte	0x17a
 2110 03e9 77000000 		.4byte	0x77
 2111 03ed 04       		.byte	0x4
 2112 03ee 0D       		.uleb128 0xd
 2113 03ef 8A080000 		.4byte	.LASF60
 2114 03f3 05       		.byte	0x5
 2115 03f4 8001     		.2byte	0x180
 2116 03f6 77000000 		.4byte	0x77
 2117 03fa 06       		.byte	0x6
 2118 03fb 0D       		.uleb128 0xd
 2119 03fc 9B000000 		.4byte	.LASF61
 2120 0400 05       		.byte	0x5
 2121 0401 8501     		.2byte	0x185
 2122 0403 77000000 		.4byte	0x77
 2123 0407 08       		.byte	0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 88


 2124 0408 0D       		.uleb128 0xd
 2125 0409 4C050000 		.4byte	.LASF62
 2126 040d 05       		.byte	0x5
 2127 040e 8A01     		.2byte	0x18a
 2128 0410 C1000000 		.4byte	0xc1
 2129 0414 0C       		.byte	0xc
 2130 0415 0D       		.uleb128 0xd
 2131 0416 67080000 		.4byte	.LASF63
 2132 041a 05       		.byte	0x5
 2133 041b 9001     		.2byte	0x190
 2134 041d A5040000 		.4byte	0x4a5
 2135 0421 10       		.byte	0x10
 2136 0422 0D       		.uleb128 0xd
 2137 0423 4E090000 		.4byte	.LASF64
 2138 0427 05       		.byte	0x5
 2139 0428 9701     		.2byte	0x197
 2140 042a A5040000 		.4byte	0x4a5
 2141 042e 14       		.byte	0x14
 2142 042f 0D       		.uleb128 0xd
 2143 0430 E8070000 		.4byte	.LASF65
 2144 0434 05       		.byte	0x5
 2145 0435 A701     		.2byte	0x1a7
 2146 0437 0A020000 		.4byte	0x20a
 2147 043b 18       		.byte	0x18
 2148 043c 0D       		.uleb128 0xd
 2149 043d B7060000 		.4byte	.LASF66
 2150 0441 05       		.byte	0x5
 2151 0442 AD01     		.2byte	0x1ad
 2152 0444 77000000 		.4byte	0x77
 2153 0448 1A       		.byte	0x1a
 2154 0449 0D       		.uleb128 0xd
 2155 044a 83030000 		.4byte	.LASF67
 2156 044e 05       		.byte	0x5
 2157 044f B201     		.2byte	0x1b2
 2158 0451 6B000000 		.4byte	0x6b
 2159 0455 1C       		.byte	0x1c
 2160 0456 0D       		.uleb128 0xd
 2161 0457 68060000 		.4byte	.LASF68
 2162 045b 05       		.byte	0x5
 2163 045c B701     		.2byte	0x1b7
 2164 045e 0B030000 		.4byte	0x30b
 2165 0462 1E       		.byte	0x1e
 2166 0463 0D       		.uleb128 0xd
 2167 0464 5E020000 		.4byte	.LASF69
 2168 0468 05       		.byte	0x5
 2169 0469 BC01     		.2byte	0x1bc
 2170 046b B2030000 		.4byte	0x3b2
 2171 046f 32       		.byte	0x32
 2172 0470 0D       		.uleb128 0xd
 2173 0471 63000000 		.4byte	.LASF70
 2174 0475 05       		.byte	0x5
 2175 0476 C101     		.2byte	0x1c1
 2176 0478 6B000000 		.4byte	0x6b
 2177 047c 64       		.byte	0x64
 2178 047d 0D       		.uleb128 0xd
 2179 047e 7D020000 		.4byte	.LASF71
 2180 0482 05       		.byte	0x5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 89


 2181 0483 C601     		.2byte	0x1c6
 2182 0485 6B000000 		.4byte	0x6b
 2183 0489 65       		.byte	0x65
 2184 048a 0D       		.uleb128 0xd
 2185 048b 93070000 		.4byte	.LASF72
 2186 048f 05       		.byte	0x5
 2187 0490 CB01     		.2byte	0x1cb
 2188 0492 77000000 		.4byte	0x77
 2189 0496 66       		.byte	0x66
 2190 0497 0D       		.uleb128 0xd
 2191 0498 7E060000 		.4byte	.LASF73
 2192 049c 05       		.byte	0x5
 2193 049d D001     		.2byte	0x1d0
 2194 049f D8020000 		.4byte	0x2d8
 2195 04a3 68       		.byte	0x68
 2196 04a4 00       		.byte	0
 2197 04a5 0B       		.uleb128 0xb
 2198 04a6 83000000 		.4byte	0x83
 2199 04aa B5040000 		.4byte	0x4b5
 2200 04ae 0C       		.uleb128 0xc
 2201 04af 1A020000 		.4byte	0x21a
 2202 04b3 00       		.byte	0
 2203 04b4 00       		.byte	0
 2204 04b5 04       		.uleb128 0x4
 2205 04b6 36050000 		.4byte	.LASF74
 2206 04ba 05       		.byte	0x5
 2207 04bb D101     		.2byte	0x1d1
 2208 04bd BE030000 		.4byte	0x3be
 2209 04c1 0E       		.uleb128 0xe
 2210 04c2 1C       		.byte	0x1c
 2211 04c3 05       		.byte	0x5
 2212 04c4 D701     		.2byte	0x1d7
 2213 04c6 40050000 		.4byte	0x540
 2214 04ca 0D       		.uleb128 0xd
 2215 04cb EC060000 		.4byte	.LASF75
 2216 04cf 05       		.byte	0x5
 2217 04d0 DC01     		.2byte	0x1dc
 2218 04d2 40050000 		.4byte	0x540
 2219 04d6 00       		.byte	0
 2220 04d7 0D       		.uleb128 0xd
 2221 04d8 91050000 		.4byte	.LASF76
 2222 04dc 05       		.byte	0x5
 2223 04dd E101     		.2byte	0x1e1
 2224 04df 40050000 		.4byte	0x540
 2225 04e3 04       		.byte	0x4
 2226 04e4 0D       		.uleb128 0xd
 2227 04e5 C2030000 		.4byte	.LASF77
 2228 04e9 05       		.byte	0x5
 2229 04ea E601     		.2byte	0x1e6
 2230 04ec 40050000 		.4byte	0x540
 2231 04f0 08       		.byte	0x8
 2232 04f1 0D       		.uleb128 0xd
 2233 04f2 9B080000 		.4byte	.LASF78
 2234 04f6 05       		.byte	0x5
 2235 04f7 EB01     		.2byte	0x1eb
 2236 04f9 40050000 		.4byte	0x540
 2237 04fd 0C       		.byte	0xc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 90


 2238 04fe 0D       		.uleb128 0xd
 2239 04ff 9B0A0000 		.4byte	.LASF79
 2240 0503 05       		.byte	0x5
 2241 0504 F001     		.2byte	0x1f0
 2242 0506 83000000 		.4byte	0x83
 2243 050a 10       		.byte	0x10
 2244 050b 0D       		.uleb128 0xd
 2245 050c 4D070000 		.4byte	.LASF80
 2246 0510 05       		.byte	0x5
 2247 0511 F501     		.2byte	0x1f5
 2248 0513 83000000 		.4byte	0x83
 2249 0517 14       		.byte	0x14
 2250 0518 0D       		.uleb128 0xd
 2251 0519 19050000 		.4byte	.LASF81
 2252 051d 05       		.byte	0x5
 2253 051e FA01     		.2byte	0x1fa
 2254 0520 6B000000 		.4byte	0x6b
 2255 0524 18       		.byte	0x18
 2256 0525 0D       		.uleb128 0xd
 2257 0526 A8090000 		.4byte	.LASF82
 2258 052a 05       		.byte	0x5
 2259 052b FF01     		.2byte	0x1ff
 2260 052d 6B000000 		.4byte	0x6b
 2261 0531 19       		.byte	0x19
 2262 0532 0D       		.uleb128 0xd
 2263 0533 3E020000 		.4byte	.LASF83
 2264 0537 05       		.byte	0x5
 2265 0538 0402     		.2byte	0x204
 2266 053a 6B000000 		.4byte	0x6b
 2267 053e 1A       		.byte	0x1a
 2268 053f 00       		.byte	0
 2269 0540 10       		.uleb128 0x10
 2270 0541 04       		.byte	0x4
 2271 0542 B5000000 		.4byte	0xb5
 2272 0546 04       		.uleb128 0x4
 2273 0547 1A0B0000 		.4byte	.LASF84
 2274 054b 05       		.byte	0x5
 2275 054c 0502     		.2byte	0x205
 2276 054e C1040000 		.4byte	0x4c1
 2277 0552 0E       		.uleb128 0xe
 2278 0553 2C       		.byte	0x2c
 2279 0554 05       		.byte	0x5
 2280 0555 3802     		.2byte	0x238
 2281 0557 05060000 		.4byte	0x605
 2282 055b 0D       		.uleb128 0xd
 2283 055c 71060000 		.4byte	.LASF85
 2284 0560 05       		.byte	0x5
 2285 0561 4102     		.2byte	0x241
 2286 0563 05060000 		.4byte	0x605
 2287 0567 00       		.byte	0
 2288 0568 0D       		.uleb128 0xd
 2289 0569 810A0000 		.4byte	.LASF86
 2290 056d 05       		.byte	0x5
 2291 056e 4802     		.2byte	0x248
 2292 0570 0C060000 		.4byte	0x60c
 2293 0574 04       		.byte	0x4
 2294 0575 0D       		.uleb128 0xd
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 91


 2295 0576 AF070000 		.4byte	.LASF87
 2296 057a 05       		.byte	0x5
 2297 057b 4E02     		.2byte	0x24e
 2298 057d 0E060000 		.4byte	0x60e
 2299 0581 08       		.byte	0x8
 2300 0582 0D       		.uleb128 0xd
 2301 0583 07070000 		.4byte	.LASF88
 2302 0587 05       		.byte	0x5
 2303 0588 5402     		.2byte	0x254
 2304 058a 0C060000 		.4byte	0x60c
 2305 058e 0C       		.byte	0xc
 2306 058f 0D       		.uleb128 0xd
 2307 0590 D6090000 		.4byte	.LASF89
 2308 0594 05       		.byte	0x5
 2309 0595 5B02     		.2byte	0x25b
 2310 0597 14060000 		.4byte	0x614
 2311 059b 10       		.byte	0x10
 2312 059c 0D       		.uleb128 0xd
 2313 059d 420A0000 		.4byte	.LASF90
 2314 05a1 05       		.byte	0x5
 2315 05a2 6002     		.2byte	0x260
 2316 05a4 83000000 		.4byte	0x83
 2317 05a8 14       		.byte	0x14
 2318 05a9 0D       		.uleb128 0xd
 2319 05aa 8D040000 		.4byte	.LASF91
 2320 05ae 05       		.byte	0x5
 2321 05af 6702     		.2byte	0x267
 2322 05b1 77000000 		.4byte	0x77
 2323 05b5 18       		.byte	0x18
 2324 05b6 0D       		.uleb128 0xd
 2325 05b7 A4020000 		.4byte	.LASF92
 2326 05bb 05       		.byte	0x5
 2327 05bc 6E02     		.2byte	0x26e
 2328 05be 6B000000 		.4byte	0x6b
 2329 05c2 1A       		.byte	0x1a
 2330 05c3 0D       		.uleb128 0xd
 2331 05c4 DD080000 		.4byte	.LASF93
 2332 05c8 05       		.byte	0x5
 2333 05c9 7802     		.2byte	0x278
 2334 05cb 6B000000 		.4byte	0x6b
 2335 05cf 1B       		.byte	0x1b
 2336 05d0 0D       		.uleb128 0xd
 2337 05d1 10080000 		.4byte	.LASF94
 2338 05d5 05       		.byte	0x5
 2339 05d6 7D02     		.2byte	0x27d
 2340 05d8 77000000 		.4byte	0x77
 2341 05dc 1C       		.byte	0x1c
 2342 05dd 0D       		.uleb128 0xd
 2343 05de E6090000 		.4byte	.LASF95
 2344 05e2 05       		.byte	0x5
 2345 05e3 8602     		.2byte	0x286
 2346 05e5 83000000 		.4byte	0x83
 2347 05e9 20       		.byte	0x20
 2348 05ea 0D       		.uleb128 0xd
 2349 05eb 8D020000 		.4byte	.LASF96
 2350 05ef 05       		.byte	0x5
 2351 05f0 8E02     		.2byte	0x28e
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 92


 2352 05f2 1A060000 		.4byte	0x61a
 2353 05f6 24       		.byte	0x24
 2354 05f7 0D       		.uleb128 0xd
 2355 05f8 C1010000 		.4byte	.LASF97
 2356 05fc 05       		.byte	0x5
 2357 05fd 9302     		.2byte	0x293
 2358 05ff 6B000000 		.4byte	0x6b
 2359 0603 28       		.byte	0x28
 2360 0604 00       		.byte	0
 2361 0605 10       		.uleb128 0x10
 2362 0606 04       		.byte	0x4
 2363 0607 0B060000 		.4byte	0x60b
 2364 060b 11       		.uleb128 0x11
 2365 060c 12       		.uleb128 0x12
 2366 060d 04       		.byte	0x4
 2367 060e 10       		.uleb128 0x10
 2368 060f 04       		.byte	0x4
 2369 0610 7F030000 		.4byte	0x37f
 2370 0614 10       		.uleb128 0x10
 2371 0615 04       		.byte	0x4
 2372 0616 6B000000 		.4byte	0x6b
 2373 061a 10       		.uleb128 0x10
 2374 061b 04       		.byte	0x4
 2375 061c 3B010000 		.4byte	0x13b
 2376 0620 04       		.uleb128 0x4
 2377 0621 30000000 		.4byte	.LASF98
 2378 0625 05       		.byte	0x5
 2379 0626 9402     		.2byte	0x294
 2380 0628 52050000 		.4byte	0x552
 2381 062c 0E       		.uleb128 0xe
 2382 062d 2C       		.byte	0x2c
 2383 062e 05       		.byte	0x5
 2384 062f 9A02     		.2byte	0x29a
 2385 0631 43060000 		.4byte	0x643
 2386 0635 0D       		.uleb128 0xd
 2387 0636 3D0C0000 		.4byte	.LASF99
 2388 063a 05       		.byte	0x5
 2389 063b 9F02     		.2byte	0x29f
 2390 063d 43060000 		.4byte	0x643
 2391 0641 00       		.byte	0
 2392 0642 00       		.byte	0
 2393 0643 0B       		.uleb128 0xb
 2394 0644 20060000 		.4byte	0x620
 2395 0648 53060000 		.4byte	0x653
 2396 064c 0C       		.uleb128 0xc
 2397 064d 1A020000 		.4byte	0x21a
 2398 0651 00       		.byte	0
 2399 0652 00       		.byte	0
 2400 0653 04       		.uleb128 0x4
 2401 0654 D0070000 		.4byte	.LASF100
 2402 0658 05       		.byte	0x5
 2403 0659 A002     		.2byte	0x2a0
 2404 065b 2C060000 		.4byte	0x62c
 2405 065f 02       		.uleb128 0x2
 2406 0660 08       		.byte	0x8
 2407 0661 04       		.byte	0x4
 2408 0662 C2060000 		.4byte	.LASF101
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 93


 2409 0666 13       		.uleb128 0x13
 2410 0667 1C020000 		.4byte	.LASF124
 2411 066b 01       		.byte	0x1
 2412 066c 070A     		.2byte	0xa07
 2413 066e 03       		.byte	0x3
 2414 066f 14       		.uleb128 0x14
 2415 0670 00000000 		.4byte	.LASF102
 2416 0674 01       		.byte	0x1
 2417 0675 A701     		.2byte	0x1a7
 2418 0677 00000000 		.4byte	.LFB1
 2419 067b 10000000 		.4byte	.LFE1-.LFB1
 2420 067f 01       		.uleb128 0x1
 2421 0680 9C       		.byte	0x9c
 2422 0681 15       		.uleb128 0x15
 2423 0682 1B0C0000 		.4byte	.LASF112
 2424 0686 01       		.byte	0x1
 2425 0687 D806     		.2byte	0x6d8
 2426 0689 00000000 		.4byte	.LFB16
 2427 068d 1C000000 		.4byte	.LFE16-.LFB16
 2428 0691 01       		.uleb128 0x1
 2429 0692 9C       		.byte	0x9c
 2430 0693 A6060000 		.4byte	0x6a6
 2431 0697 16       		.uleb128 0x16
 2432 0698 350B0000 		.4byte	.LASF107
 2433 069c 01       		.byte	0x1
 2434 069d DA06     		.2byte	0x6da
 2435 069f 83000000 		.4byte	0x83
 2436 06a3 01       		.uleb128 0x1
 2437 06a4 53       		.byte	0x53
 2438 06a5 00       		.byte	0
 2439 06a6 14       		.uleb128 0x14
 2440 06a7 8E060000 		.4byte	.LASF103
 2441 06ab 01       		.byte	0x1
 2442 06ac 0307     		.2byte	0x703
 2443 06ae 00000000 		.4byte	.LFB17
 2444 06b2 10000000 		.4byte	.LFE17-.LFB17
 2445 06b6 01       		.uleb128 0x1
 2446 06b7 9C       		.byte	0x9c
 2447 06b8 17       		.uleb128 0x17
 2448 06b9 4F0A0000 		.4byte	.LASF142
 2449 06bd 01       		.byte	0x1
 2450 06be 3107     		.2byte	0x731
 2451 06c0 A4000000 		.4byte	0xa4
 2452 06c4 00000000 		.4byte	.LFB18
 2453 06c8 42000000 		.4byte	.LFE18-.LFB18
 2454 06cc 01       		.uleb128 0x1
 2455 06cd 9C       		.byte	0x9c
 2456 06ce 41070000 		.4byte	0x741
 2457 06d2 18       		.uleb128 0x18
 2458 06d3 14020000 		.4byte	.LASF104
 2459 06d7 01       		.byte	0x1
 2460 06d8 3107     		.2byte	0x731
 2461 06da 41070000 		.4byte	0x741
 2462 06de 00000000 		.4byte	.LLST0
 2463 06e2 18       		.uleb128 0x18
 2464 06e3 20040000 		.4byte	.LASF105
 2465 06e7 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 94


 2466 06e8 3107     		.2byte	0x731
 2467 06ea 83000000 		.4byte	0x83
 2468 06ee 21000000 		.4byte	.LLST1
 2469 06f2 18       		.uleb128 0x18
 2470 06f3 FF070000 		.4byte	.LASF106
 2471 06f7 01       		.byte	0x1
 2472 06f8 3107     		.2byte	0x731
 2473 06fa 83000000 		.4byte	0x83
 2474 06fe 4D000000 		.4byte	.LLST2
 2475 0702 16       		.uleb128 0x16
 2476 0703 58060000 		.4byte	.LASF108
 2477 0707 01       		.byte	0x1
 2478 0708 3307     		.2byte	0x733
 2479 070a A4000000 		.4byte	0xa4
 2480 070e 01       		.uleb128 0x1
 2481 070f 50       		.byte	0x50
 2482 0710 19       		.uleb128 0x19
 2483 0711 B10A0000 		.4byte	.LASF109
 2484 0715 01       		.byte	0x1
 2485 0716 3407     		.2byte	0x734
 2486 0718 83000000 		.4byte	0x83
 2487 071c 79000000 		.4byte	.LLST3
 2488 0720 19       		.uleb128 0x19
 2489 0721 99040000 		.4byte	.LASF110
 2490 0725 01       		.byte	0x1
 2491 0726 3507     		.2byte	0x735
 2492 0728 83000000 		.4byte	0x83
 2493 072c 97000000 		.4byte	.LLST4
 2494 0730 19       		.uleb128 0x19
 2495 0731 52070000 		.4byte	.LASF111
 2496 0735 01       		.byte	0x1
 2497 0736 3607     		.2byte	0x736
 2498 0738 83000000 		.4byte	0x83
 2499 073c E3000000 		.4byte	.LLST5
 2500 0740 00       		.byte	0
 2501 0741 10       		.uleb128 0x10
 2502 0742 04       		.byte	0x4
 2503 0743 47070000 		.4byte	0x747
 2504 0747 1A       		.uleb128 0x1a
 2505 0748 21020000 		.4byte	0x221
 2506 074c 15       		.uleb128 0x15
 2507 074d A7000000 		.4byte	.LASF113
 2508 0751 01       		.byte	0x1
 2509 0752 5E01     		.2byte	0x15e
 2510 0754 00000000 		.4byte	.LFB0
 2511 0758 1C000000 		.4byte	.LFE0-.LFB0
 2512 075c 01       		.uleb128 0x1
 2513 075d 9C       		.byte	0x9c
 2514 075e 94070000 		.4byte	0x794
 2515 0762 18       		.uleb128 0x18
 2516 0763 F2070000 		.4byte	.LASF41
 2517 0767 01       		.byte	0x1
 2518 0768 5E01     		.2byte	0x15e
 2519 076a 83000000 		.4byte	0x83
 2520 076e 01010000 		.4byte	.LLST6
 2521 0772 18       		.uleb128 0x18
 2522 0773 CF0B0000 		.4byte	.LASF114
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 95


 2523 0777 01       		.byte	0x1
 2524 0778 5E01     		.2byte	0x15e
 2525 077a 83000000 		.4byte	0x83
 2526 077e 22010000 		.4byte	.LLST7
 2527 0782 1B       		.uleb128 0x1b
 2528 0783 14000000 		.4byte	.LVL22
 2529 0787 310F0000 		.4byte	0xf31
 2530 078b 1C       		.uleb128 0x1c
 2531 078c 01       		.uleb128 0x1
 2532 078d 50       		.byte	0x50
 2533 078e 03       		.uleb128 0x3
 2534 078f F3       		.byte	0xf3
 2535 0790 01       		.uleb128 0x1
 2536 0791 51       		.byte	0x51
 2537 0792 00       		.byte	0
 2538 0793 00       		.byte	0
 2539 0794 1D       		.uleb128 0x1d
 2540 0795 A6010000 		.4byte	.LASF115
 2541 0799 01       		.byte	0x1
 2542 079a DF01     		.2byte	0x1df
 2543 079c 00000000 		.4byte	.LFB2
 2544 07a0 3C000000 		.4byte	.LFE2-.LFB2
 2545 07a4 01       		.uleb128 0x1
 2546 07a5 9C       		.byte	0x9c
 2547 07a6 CD070000 		.4byte	0x7cd
 2548 07aa 19       		.uleb128 0x19
 2549 07ab 350B0000 		.4byte	.LASF107
 2550 07af 01       		.byte	0x1
 2551 07b0 E101     		.2byte	0x1e1
 2552 07b2 83000000 		.4byte	0x83
 2553 07b6 43010000 		.4byte	.LLST8
 2554 07ba 1E       		.uleb128 0x1e
 2555 07bb 06000000 		.4byte	.LVL23
 2556 07bf 3C0F0000 		.4byte	0xf3c
 2557 07c3 1E       		.uleb128 0x1e
 2558 07c4 0A000000 		.4byte	.LVL24
 2559 07c8 6F060000 		.4byte	0x66f
 2560 07cc 00       		.byte	0
 2561 07cd 1D       		.uleb128 0x1d
 2562 07ce 73000000 		.4byte	.LASF116
 2563 07d2 01       		.byte	0x1
 2564 07d3 F302     		.2byte	0x2f3
 2565 07d5 00000000 		.4byte	.LFB4
 2566 07d9 40000000 		.4byte	.LFE4-.LFB4
 2567 07dd 01       		.uleb128 0x1
 2568 07de 9C       		.byte	0x9c
 2569 07df 36080000 		.4byte	0x836
 2570 07e3 18       		.uleb128 0x18
 2571 07e4 14020000 		.4byte	.LASF104
 2572 07e8 01       		.byte	0x1
 2573 07e9 F302     		.2byte	0x2f3
 2574 07eb 41070000 		.4byte	0x741
 2575 07ef 7C010000 		.4byte	.LLST9
 2576 07f3 19       		.uleb128 0x19
 2577 07f4 ED000000 		.4byte	.LASF117
 2578 07f8 01       		.byte	0x1
 2579 07f9 F602     		.2byte	0x2f6
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 96


 2580 07fb 6B000000 		.4byte	0x6b
 2581 07ff B7010000 		.4byte	.LLST10
 2582 0803 19       		.uleb128 0x19
 2583 0804 350B0000 		.4byte	.LASF107
 2584 0808 01       		.byte	0x1
 2585 0809 2E03     		.2byte	0x32e
 2586 080b 83000000 		.4byte	0x83
 2587 080f CA010000 		.4byte	.LLST11
 2588 0813 19       		.uleb128 0x19
 2589 0814 C40B0000 		.4byte	.LASF118
 2590 0818 01       		.byte	0x1
 2591 0819 2F03     		.2byte	0x32f
 2592 081b 36080000 		.4byte	0x836
 2593 081f E8010000 		.4byte	.LLST12
 2594 0823 1E       		.uleb128 0x1e
 2595 0824 0A000000 		.4byte	.LVL34
 2596 0828 470F0000 		.4byte	0xf47
 2597 082c 1E       		.uleb128 0x1e
 2598 082d 2C000000 		.4byte	.LVL39
 2599 0831 520F0000 		.4byte	0xf52
 2600 0835 00       		.byte	0
 2601 0836 10       		.uleb128 0x10
 2602 0837 04       		.byte	0x4
 2603 0838 3C080000 		.4byte	0x83c
 2604 083c 1A       		.uleb128 0x1a
 2605 083d 6B000000 		.4byte	0x6b
 2606 0841 1D       		.uleb128 0x1d
 2607 0842 3C060000 		.4byte	.LASF119
 2608 0846 01       		.byte	0x1
 2609 0847 B403     		.2byte	0x3b4
 2610 0849 00000000 		.4byte	.LFB5
 2611 084d 30000000 		.4byte	.LFE5-.LFB5
 2612 0851 01       		.uleb128 0x1
 2613 0852 9C       		.byte	0x9c
 2614 0853 A1080000 		.4byte	0x8a1
 2615 0857 19       		.uleb128 0x19
 2616 0858 CF0B0000 		.4byte	.LASF114
 2617 085c 01       		.byte	0x1
 2618 085d B603     		.2byte	0x3b6
 2619 085f 83000000 		.4byte	0x83
 2620 0863 16020000 		.4byte	.LLST13
 2621 0867 19       		.uleb128 0x19
 2622 0868 44020000 		.4byte	.LASF120
 2623 086c 01       		.byte	0x1
 2624 086d B703     		.2byte	0x3b7
 2625 086f 83000000 		.4byte	0x83
 2626 0873 29020000 		.4byte	.LLST14
 2627 0877 19       		.uleb128 0x19
 2628 0878 350B0000 		.4byte	.LASF107
 2629 087c 01       		.byte	0x1
 2630 087d B803     		.2byte	0x3b8
 2631 087f 83000000 		.4byte	0x83
 2632 0883 29020000 		.4byte	.LLST14
 2633 0887 19       		.uleb128 0x19
 2634 0888 14020000 		.4byte	.LASF104
 2635 088c 01       		.byte	0x1
 2636 088d BA03     		.2byte	0x3ba
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 97


 2637 088f 41070000 		.4byte	0x741
 2638 0893 3C020000 		.4byte	.LLST16
 2639 0897 1E       		.uleb128 0x1e
 2640 0898 26000000 		.4byte	.LVL46
 2641 089c 4C070000 		.4byte	0x74c
 2642 08a0 00       		.byte	0
 2643 08a1 1D       		.uleb128 0x1d
 2644 08a2 C70A0000 		.4byte	.LASF121
 2645 08a6 01       		.byte	0x1
 2646 08a7 1904     		.2byte	0x419
 2647 08a9 00000000 		.4byte	.LFB6
 2648 08ad 14000000 		.4byte	.LFE6-.LFB6
 2649 08b1 01       		.uleb128 0x1
 2650 08b2 9C       		.byte	0x9c
 2651 08b3 C6080000 		.4byte	0x8c6
 2652 08b7 1F       		.uleb128 0x1f
 2653 08b8 14020000 		.4byte	.LASF104
 2654 08bc 01       		.byte	0x1
 2655 08bd 1904     		.2byte	0x419
 2656 08bf 41070000 		.4byte	0x741
 2657 08c3 01       		.uleb128 0x1
 2658 08c4 50       		.byte	0x50
 2659 08c5 00       		.byte	0
 2660 08c6 20       		.uleb128 0x20
 2661 08c7 CA040000 		.4byte	.LASF173
 2662 08cb 01       		.byte	0x1
 2663 08cc 8709     		.2byte	0x987
 2664 08ce 03       		.byte	0x3
 2665 08cf F8080000 		.4byte	0x8f8
 2666 08d3 21       		.uleb128 0x21
 2667 08d4 C2090000 		.4byte	.LASF122
 2668 08d8 01       		.byte	0x1
 2669 08d9 C609     		.2byte	0x9c6
 2670 08db 83000000 		.4byte	0x83
 2671 08df 21       		.uleb128 0x21
 2672 08e0 350B0000 		.4byte	.LASF107
 2673 08e4 01       		.byte	0x1
 2674 08e5 C709     		.2byte	0x9c7
 2675 08e7 83000000 		.4byte	0x83
 2676 08eb 21       		.uleb128 0x21
 2677 08ec 4E020000 		.4byte	.LASF123
 2678 08f0 01       		.byte	0x1
 2679 08f1 C809     		.2byte	0x9c8
 2680 08f3 83000000 		.4byte	0x83
 2681 08f7 00       		.byte	0
 2682 08f8 13       		.uleb128 0x13
 2683 08f9 14060000 		.4byte	.LASF125
 2684 08fd 01       		.byte	0x1
 2685 08fe 3E09     		.2byte	0x93e
 2686 0900 03       		.byte	0x3
 2687 0901 1D       		.uleb128 0x1d
 2688 0902 4B080000 		.4byte	.LASF126
 2689 0906 01       		.byte	0x1
 2690 0907 EF04     		.2byte	0x4ef
 2691 0909 00000000 		.4byte	.LFB9
 2692 090d B0000000 		.4byte	.LFE9-.LFB9
 2693 0911 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 98


 2694 0912 9C       		.byte	0x9c
 2695 0913 E0090000 		.4byte	0x9e0
 2696 0917 19       		.uleb128 0x19
 2697 0918 ED000000 		.4byte	.LASF117
 2698 091c 01       		.byte	0x1
 2699 091d F204     		.2byte	0x4f2
 2700 091f 6B000000 		.4byte	0x6b
 2701 0923 4F020000 		.4byte	.LLST17
 2702 0927 22       		.uleb128 0x22
 2703 0928 F8080000 		.4byte	0x8f8
 2704 092c 14000000 		.4byte	.LBB10
 2705 0930 1C000000 		.4byte	.LBE10-.LBB10
 2706 0934 01       		.byte	0x1
 2707 0935 1F05     		.2byte	0x51f
 2708 0937 45090000 		.4byte	0x945
 2709 093b 1E       		.uleb128 0x1e
 2710 093c 1C000000 		.4byte	.LVL50
 2711 0940 5D0F0000 		.4byte	0xf5d
 2712 0944 00       		.byte	0
 2713 0945 22       		.uleb128 0x22
 2714 0946 C6080000 		.4byte	0x8c6
 2715 094a 30000000 		.4byte	.LBB12
 2716 094e 3E000000 		.4byte	.LBE12-.LBB12
 2717 0952 01       		.byte	0x1
 2718 0953 2205     		.2byte	0x522
 2719 0955 A2090000 		.4byte	0x9a2
 2720 0959 23       		.uleb128 0x23
 2721 095a 30000000 		.4byte	.LBB13
 2722 095e 3E000000 		.4byte	.LBE13-.LBB13
 2723 0962 24       		.uleb128 0x24
 2724 0963 D3080000 		.4byte	0x8d3
 2725 0967 62020000 		.4byte	.LLST18
 2726 096b 24       		.uleb128 0x24
 2727 096c DF080000 		.4byte	0x8df
 2728 0970 81020000 		.4byte	.LLST19
 2729 0974 24       		.uleb128 0x24
 2730 0975 EB080000 		.4byte	0x8eb
 2731 0979 D5020000 		.4byte	.LLST20
 2732 097d 25       		.uleb128 0x25
 2733 097e 3A000000 		.4byte	.LVL52
 2734 0982 680F0000 		.4byte	0xf68
 2735 0986 91090000 		.4byte	0x991
 2736 098a 1C       		.uleb128 0x1c
 2737 098b 01       		.uleb128 0x1
 2738 098c 50       		.byte	0x50
 2739 098d 02       		.uleb128 0x2
 2740 098e 08       		.byte	0x8
 2741 098f 27       		.byte	0x27
 2742 0990 00       		.byte	0
 2743 0991 1B       		.uleb128 0x1b
 2744 0992 6E000000 		.4byte	.LVL62
 2745 0996 730F0000 		.4byte	0xf73
 2746 099a 1C       		.uleb128 0x1c
 2747 099b 01       		.uleb128 0x1
 2748 099c 50       		.byte	0x50
 2749 099d 01       		.uleb128 0x1
 2750 099e 3F       		.byte	0x3f
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 99


 2751 099f 00       		.byte	0
 2752 09a0 00       		.byte	0
 2753 09a1 00       		.byte	0
 2754 09a2 26       		.uleb128 0x26
 2755 09a3 66060000 		.4byte	0x666
 2756 09a7 74000000 		.4byte	.LBB14
 2757 09ab 06000000 		.4byte	.LBE14-.LBB14
 2758 09af 01       		.byte	0x1
 2759 09b0 2A05     		.2byte	0x52a
 2760 09b2 1E       		.uleb128 0x1e
 2761 09b3 06000000 		.4byte	.LVL48
 2762 09b7 470F0000 		.4byte	0xf47
 2763 09bb 25       		.uleb128 0x25
 2764 09bc 74000000 		.4byte	.LVL63
 2765 09c0 680F0000 		.4byte	0xf68
 2766 09c4 CF090000 		.4byte	0x9cf
 2767 09c8 1C       		.uleb128 0x1c
 2768 09c9 01       		.uleb128 0x1
 2769 09ca 50       		.byte	0x50
 2770 09cb 02       		.uleb128 0x2
 2771 09cc 08       		.byte	0x8
 2772 09cd 6F       		.byte	0x6f
 2773 09ce 00       		.byte	0
 2774 09cf 1B       		.uleb128 0x1b
 2775 09d0 80000000 		.4byte	.LVL64
 2776 09d4 520F0000 		.4byte	0xf52
 2777 09d8 1C       		.uleb128 0x1c
 2778 09d9 01       		.uleb128 0x1
 2779 09da 50       		.byte	0x50
 2780 09db 02       		.uleb128 0x2
 2781 09dc 74       		.byte	0x74
 2782 09dd 00       		.sleb128 0
 2783 09de 00       		.byte	0
 2784 09df 00       		.byte	0
 2785 09e0 1D       		.uleb128 0x1d
 2786 09e1 BA070000 		.4byte	.LASF127
 2787 09e5 01       		.byte	0x1
 2788 09e6 5A05     		.2byte	0x55a
 2789 09e8 00000000 		.4byte	.LFB10
 2790 09ec 1C000000 		.4byte	.LFE10-.LFB10
 2791 09f0 01       		.uleb128 0x1
 2792 09f1 9C       		.byte	0x9c
 2793 09f2 000A0000 		.4byte	0xa00
 2794 09f6 1E       		.uleb128 0x1e
 2795 09f7 10000000 		.4byte	.LVL66
 2796 09fb 01090000 		.4byte	0x901
 2797 09ff 00       		.byte	0
 2798 0a00 1D       		.uleb128 0x1d
 2799 0a01 19010000 		.4byte	.LASF128
 2800 0a05 01       		.byte	0x1
 2801 0a06 6906     		.2byte	0x669
 2802 0a08 00000000 		.4byte	.LFB14
 2803 0a0c 34000000 		.4byte	.LFE14-.LFB14
 2804 0a10 01       		.uleb128 0x1
 2805 0a11 9C       		.byte	0x9c
 2806 0a12 790A0000 		.4byte	0xa79
 2807 0a16 18       		.uleb128 0x18
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 100


 2808 0a17 25000000 		.4byte	.LASF129
 2809 0a1b 01       		.byte	0x1
 2810 0a1c 6906     		.2byte	0x669
 2811 0a1e 790A0000 		.4byte	0xa79
 2812 0a22 F6020000 		.4byte	.LLST21
 2813 0a26 19       		.uleb128 0x19
 2814 0a27 72030000 		.4byte	.LASF130
 2815 0a2b 01       		.byte	0x1
 2816 0a2c 6B06     		.2byte	0x66b
 2817 0a2e 83000000 		.4byte	0x83
 2818 0a32 22030000 		.4byte	.LLST22
 2819 0a36 19       		.uleb128 0x19
 2820 0a37 ED000000 		.4byte	.LASF117
 2821 0a3b 01       		.byte	0x1
 2822 0a3c 6C06     		.2byte	0x66c
 2823 0a3e 6B000000 		.4byte	0x6b
 2824 0a42 4B030000 		.4byte	.LLST23
 2825 0a46 19       		.uleb128 0x19
 2826 0a47 99010000 		.4byte	.LASF131
 2827 0a4b 01       		.byte	0x1
 2828 0a4c 6D06     		.2byte	0x66d
 2829 0a4e 83000000 		.4byte	0x83
 2830 0a52 5E030000 		.4byte	.LLST24
 2831 0a56 19       		.uleb128 0x19
 2832 0a57 32010000 		.4byte	.LASF132
 2833 0a5b 01       		.byte	0x1
 2834 0a5c 6E06     		.2byte	0x66e
 2835 0a5e 83000000 		.4byte	0x83
 2836 0a62 71030000 		.4byte	.LLST25
 2837 0a66 1E       		.uleb128 0x1e
 2838 0a67 0C000000 		.4byte	.LVL70
 2839 0a6b 470F0000 		.4byte	0xf47
 2840 0a6f 1E       		.uleb128 0x1e
 2841 0a70 32000000 		.4byte	.LVL76
 2842 0a74 520F0000 		.4byte	0xf52
 2843 0a78 00       		.byte	0
 2844 0a79 10       		.uleb128 0x10
 2845 0a7a 04       		.byte	0x4
 2846 0a7b 7F0A0000 		.4byte	0xa7f
 2847 0a7f 1A       		.uleb128 0x1a
 2848 0a80 46050000 		.4byte	0x546
 2849 0a84 1D       		.uleb128 0x1d
 2850 0a85 6E0A0000 		.4byte	.LASF133
 2851 0a89 01       		.byte	0x1
 2852 0a8a 8E05     		.2byte	0x58e
 2853 0a8c 00000000 		.4byte	.LFB11
 2854 0a90 70000000 		.4byte	.LFE11-.LFB11
 2855 0a94 01       		.uleb128 0x1
 2856 0a95 9C       		.byte	0x9c
 2857 0a96 CF0A0000 		.4byte	0xacf
 2858 0a9a 19       		.uleb128 0x19
 2859 0a9b 14020000 		.4byte	.LASF104
 2860 0a9f 01       		.byte	0x1
 2861 0aa0 9005     		.2byte	0x590
 2862 0aa2 41070000 		.4byte	0x741
 2863 0aa6 84030000 		.4byte	.LLST26
 2864 0aaa 1E       		.uleb128 0x1e
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 101


 2865 0aab 32000000 		.4byte	.LVL80
 2866 0aaf CD070000 		.4byte	0x7cd
 2867 0ab3 1E       		.uleb128 0x1e
 2868 0ab4 4C000000 		.4byte	.LVL81
 2869 0ab8 000A0000 		.4byte	0xa00
 2870 0abc 1E       		.uleb128 0x1e
 2871 0abd 52000000 		.4byte	.LVL82
 2872 0ac1 7E0F0000 		.4byte	0xf7e
 2873 0ac5 1E       		.uleb128 0x1e
 2874 0ac6 56000000 		.4byte	.LVL83
 2875 0aca E0090000 		.4byte	0x9e0
 2876 0ace 00       		.byte	0
 2877 0acf 1D       		.uleb128 0x1d
 2878 0ad0 5F010000 		.4byte	.LASF134
 2879 0ad4 01       		.byte	0x1
 2880 0ad5 DA05     		.2byte	0x5da
 2881 0ad7 00000000 		.4byte	.LFB12
 2882 0adb 24000000 		.4byte	.LFE12-.LFB12
 2883 0adf 01       		.uleb128 0x1
 2884 0ae0 9C       		.byte	0x9c
 2885 0ae1 0F0B0000 		.4byte	0xb0f
 2886 0ae5 18       		.uleb128 0x18
 2887 0ae6 E60B0000 		.4byte	.LASF135
 2888 0aea 01       		.byte	0x1
 2889 0aeb DA05     		.2byte	0x5da
 2890 0aed 83000000 		.4byte	0x83
 2891 0af1 97030000 		.4byte	.LLST27
 2892 0af5 18       		.uleb128 0x18
 2893 0af6 0B020000 		.4byte	.LASF136
 2894 0afa 01       		.byte	0x1
 2895 0afb DA05     		.2byte	0x5da
 2896 0afd 83000000 		.4byte	0x83
 2897 0b01 B8030000 		.4byte	.LLST28
 2898 0b05 1E       		.uleb128 0x1e
 2899 0b06 1A000000 		.4byte	.LVL87
 2900 0b0a 000A0000 		.4byte	0xa00
 2901 0b0e 00       		.byte	0
 2902 0b0f 1D       		.uleb128 0x1d
 2903 0b10 1C080000 		.4byte	.LASF137
 2904 0b14 01       		.byte	0x1
 2905 0b15 9D06     		.2byte	0x69d
 2906 0b17 00000000 		.4byte	.LFB15
 2907 0b1b 40000000 		.4byte	.LFE15-.LFB15
 2908 0b1f 01       		.uleb128 0x1
 2909 0b20 9C       		.byte	0x9c
 2910 0b21 880B0000 		.4byte	0xb88
 2911 0b25 18       		.uleb128 0x18
 2912 0b26 25000000 		.4byte	.LASF129
 2913 0b2a 01       		.byte	0x1
 2914 0b2b 9D06     		.2byte	0x69d
 2915 0b2d 790A0000 		.4byte	0xa79
 2916 0b31 D9030000 		.4byte	.LLST29
 2917 0b35 19       		.uleb128 0x19
 2918 0b36 32010000 		.4byte	.LASF132
 2919 0b3a 01       		.byte	0x1
 2920 0b3b 9F06     		.2byte	0x69f
 2921 0b3d 83000000 		.4byte	0x83
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 102


 2922 0b41 05040000 		.4byte	.LLST30
 2923 0b45 19       		.uleb128 0x19
 2924 0b46 72030000 		.4byte	.LASF130
 2925 0b4a 01       		.byte	0x1
 2926 0b4b A006     		.2byte	0x6a0
 2927 0b4d 83000000 		.4byte	0x83
 2928 0b51 18040000 		.4byte	.LLST31
 2929 0b55 19       		.uleb128 0x19
 2930 0b56 99010000 		.4byte	.LASF131
 2931 0b5a 01       		.byte	0x1
 2932 0b5b A106     		.2byte	0x6a1
 2933 0b5d 83000000 		.4byte	0x83
 2934 0b61 41040000 		.4byte	.LLST32
 2935 0b65 19       		.uleb128 0x19
 2936 0b66 ED000000 		.4byte	.LASF117
 2937 0b6a 01       		.byte	0x1
 2938 0b6b A506     		.2byte	0x6a5
 2939 0b6d 6B000000 		.4byte	0x6b
 2940 0b71 54040000 		.4byte	.LLST33
 2941 0b75 1E       		.uleb128 0x1e
 2942 0b76 18000000 		.4byte	.LVL91
 2943 0b7a 470F0000 		.4byte	0xf47
 2944 0b7e 1E       		.uleb128 0x1e
 2945 0b7f 30000000 		.4byte	.LVL96
 2946 0b83 520F0000 		.4byte	0xf52
 2947 0b87 00       		.byte	0
 2948 0b88 1D       		.uleb128 0x1d
 2949 0b89 40010000 		.4byte	.LASF138
 2950 0b8d 01       		.byte	0x1
 2951 0b8e B602     		.2byte	0x2b6
 2952 0b90 00000000 		.4byte	.LFB3
 2953 0b94 24000000 		.4byte	.LFE3-.LFB3
 2954 0b98 01       		.uleb128 0x1
 2955 0b99 9C       		.byte	0x9c
 2956 0b9a A80B0000 		.4byte	0xba8
 2957 0b9e 1E       		.uleb128 0x1e
 2958 0b9f 12000000 		.4byte	.LVL99
 2959 0ba3 0F0B0000 		.4byte	0xb0f
 2960 0ba7 00       		.byte	0
 2961 0ba8 1D       		.uleb128 0x1d
 2962 0ba9 59090000 		.4byte	.LASF139
 2963 0bad 01       		.byte	0x1
 2964 0bae 6004     		.2byte	0x460
 2965 0bb0 00000000 		.4byte	.LFB7
 2966 0bb4 58000000 		.4byte	.LFE7-.LFB7
 2967 0bb8 01       		.uleb128 0x1
 2968 0bb9 9C       		.byte	0x9c
 2969 0bba 180C0000 		.4byte	0xc18
 2970 0bbe 18       		.uleb128 0x18
 2971 0bbf E60B0000 		.4byte	.LASF135
 2972 0bc3 01       		.byte	0x1
 2973 0bc4 6004     		.2byte	0x460
 2974 0bc6 83000000 		.4byte	0x83
 2975 0bca 67040000 		.4byte	.LLST34
 2976 0bce 19       		.uleb128 0x19
 2977 0bcf 14020000 		.4byte	.LASF104
 2978 0bd3 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 103


 2979 0bd4 6304     		.2byte	0x463
 2980 0bd6 41070000 		.4byte	0x741
 2981 0bda 88040000 		.4byte	.LLST35
 2982 0bde 25       		.uleb128 0x25
 2983 0bdf 1A000000 		.4byte	.LVL103
 2984 0be3 890F0000 		.4byte	0xf89
 2985 0be7 F10B0000 		.4byte	0xbf1
 2986 0beb 1C       		.uleb128 0x1c
 2987 0bec 01       		.uleb128 0x1
 2988 0bed 50       		.byte	0x50
 2989 0bee 01       		.uleb128 0x1
 2990 0bef 31       		.byte	0x31
 2991 0bf0 00       		.byte	0
 2992 0bf1 1E       		.uleb128 0x1e
 2993 0bf2 1E000000 		.4byte	.LVL104
 2994 0bf6 880B0000 		.4byte	0xb88
 2995 0bfa 25       		.uleb128 0x25
 2996 0bfb 40000000 		.4byte	.LVL105
 2997 0bff A1080000 		.4byte	0x8a1
 2998 0c03 0E0C0000 		.4byte	0xc0e
 2999 0c07 1C       		.uleb128 0x1c
 3000 0c08 01       		.uleb128 0x1
 3001 0c09 50       		.byte	0x50
 3002 0c0a 02       		.uleb128 0x2
 3003 0c0b 75       		.byte	0x75
 3004 0c0c 00       		.sleb128 0
 3005 0c0d 00       		.byte	0
 3006 0c0e 1E       		.uleb128 0x1e
 3007 0c0f 44000000 		.4byte	.LVL106
 3008 0c13 41080000 		.4byte	0x841
 3009 0c17 00       		.byte	0
 3010 0c18 1D       		.uleb128 0x1d
 3011 0c19 FC000000 		.4byte	.LASF140
 3012 0c1d 01       		.byte	0x1
 3013 0c1e B104     		.2byte	0x4b1
 3014 0c20 00000000 		.4byte	.LFB8
 3015 0c24 6C000000 		.4byte	.LFE8-.LFB8
 3016 0c28 01       		.uleb128 0x1
 3017 0c29 9C       		.byte	0x9c
 3018 0c2a 9A0C0000 		.4byte	0xc9a
 3019 0c2e 18       		.uleb128 0x18
 3020 0c2f E60B0000 		.4byte	.LASF135
 3021 0c33 01       		.byte	0x1
 3022 0c34 B104     		.2byte	0x4b1
 3023 0c36 83000000 		.4byte	0x83
 3024 0c3a B0040000 		.4byte	.LLST36
 3025 0c3e 18       		.uleb128 0x18
 3026 0c3f 0B020000 		.4byte	.LASF136
 3027 0c43 01       		.byte	0x1
 3028 0c44 B104     		.2byte	0x4b1
 3029 0c46 83000000 		.4byte	0x83
 3030 0c4a D1040000 		.4byte	.LLST37
 3031 0c4e 19       		.uleb128 0x19
 3032 0c4f 14020000 		.4byte	.LASF104
 3033 0c53 01       		.byte	0x1
 3034 0c54 B304     		.2byte	0x4b3
 3035 0c56 41070000 		.4byte	0x741
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 104


 3036 0c5a F2040000 		.4byte	.LLST38
 3037 0c5e 25       		.uleb128 0x25
 3038 0c5f 28000000 		.4byte	.LVL113
 3039 0c63 A80B0000 		.4byte	0xba8
 3040 0c67 730C0000 		.4byte	0xc73
 3041 0c6b 1C       		.uleb128 0x1c
 3042 0c6c 01       		.uleb128 0x1
 3043 0c6d 50       		.byte	0x50
 3044 0c6e 03       		.uleb128 0x3
 3045 0c6f F3       		.byte	0xf3
 3046 0c70 01       		.uleb128 0x1
 3047 0c71 50       		.byte	0x50
 3048 0c72 00       		.byte	0
 3049 0c73 25       		.uleb128 0x25
 3050 0c74 2E000000 		.4byte	.LVL114
 3051 0c78 CD070000 		.4byte	0x7cd
 3052 0c7c 870C0000 		.4byte	0xc87
 3053 0c80 1C       		.uleb128 0x1c
 3054 0c81 01       		.uleb128 0x1
 3055 0c82 50       		.byte	0x50
 3056 0c83 02       		.uleb128 0x2
 3057 0c84 75       		.byte	0x75
 3058 0c85 00       		.sleb128 0
 3059 0c86 00       		.byte	0
 3060 0c87 1E       		.uleb128 0x1e
 3061 0c88 46000000 		.4byte	.LVL115
 3062 0c8c 000A0000 		.4byte	0xa00
 3063 0c90 1E       		.uleb128 0x1e
 3064 0c91 52000000 		.4byte	.LVL116
 3065 0c95 7E0F0000 		.4byte	0xf7e
 3066 0c99 00       		.byte	0
 3067 0c9a 1D       		.uleb128 0x1d
 3068 0c9b 23090000 		.4byte	.LASF141
 3069 0c9f 01       		.byte	0x1
 3070 0ca0 2006     		.2byte	0x620
 3071 0ca2 00000000 		.4byte	.LFB13
 3072 0ca6 24000000 		.4byte	.LFE13-.LFB13
 3073 0caa 01       		.uleb128 0x1
 3074 0cab 9C       		.byte	0x9c
 3075 0cac DA0C0000 		.4byte	0xcda
 3076 0cb0 18       		.uleb128 0x18
 3077 0cb1 E60B0000 		.4byte	.LASF135
 3078 0cb5 01       		.byte	0x1
 3079 0cb6 2006     		.2byte	0x620
 3080 0cb8 83000000 		.4byte	0x83
 3081 0cbc 05050000 		.4byte	.LLST39
 3082 0cc0 18       		.uleb128 0x18
 3083 0cc1 0B020000 		.4byte	.LASF136
 3084 0cc5 01       		.byte	0x1
 3085 0cc6 2006     		.2byte	0x620
 3086 0cc8 83000000 		.4byte	0x83
 3087 0ccc 26050000 		.4byte	.LLST40
 3088 0cd0 1E       		.uleb128 0x1e
 3089 0cd1 1A000000 		.4byte	.LVL121
 3090 0cd5 0F0B0000 		.4byte	0xb0f
 3091 0cd9 00       		.byte	0
 3092 0cda 27       		.uleb128 0x27
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 105


 3093 0cdb EF0B0000 		.4byte	.LASF143
 3094 0cdf 01       		.byte	0x1
 3095 0ce0 7407     		.2byte	0x774
 3096 0ce2 A4000000 		.4byte	0xa4
 3097 0ce6 00000000 		.4byte	.LFB19
 3098 0cea F0000000 		.4byte	.LFE19-.LFB19
 3099 0cee 01       		.uleb128 0x1
 3100 0cef 9C       		.byte	0x9c
 3101 0cf0 D20D0000 		.4byte	0xdd2
 3102 0cf4 18       		.uleb128 0x18
 3103 0cf5 20040000 		.4byte	.LASF105
 3104 0cf9 01       		.byte	0x1
 3105 0cfa 7407     		.2byte	0x774
 3106 0cfc 83000000 		.4byte	0x83
 3107 0d00 47050000 		.4byte	.LLST41
 3108 0d04 18       		.uleb128 0x18
 3109 0d05 93080000 		.4byte	.LASF144
 3110 0d09 01       		.byte	0x1
 3111 0d0a 7507     		.2byte	0x775
 3112 0d0c 14060000 		.4byte	0x614
 3113 0d10 73050000 		.4byte	.LLST42
 3114 0d14 18       		.uleb128 0x18
 3115 0d15 ED0A0000 		.4byte	.LASF145
 3116 0d19 01       		.byte	0x1
 3117 0d1a 7607     		.2byte	0x776
 3118 0d1c 14060000 		.4byte	0x614
 3119 0d20 9F050000 		.4byte	.LLST43
 3120 0d24 16       		.uleb128 0x16
 3121 0d25 58060000 		.4byte	.LASF108
 3122 0d29 01       		.byte	0x1
 3123 0d2a 7807     		.2byte	0x778
 3124 0d2c A4000000 		.4byte	0xa4
 3125 0d30 01       		.uleb128 0x1
 3126 0d31 50       		.byte	0x50
 3127 0d32 19       		.uleb128 0x19
 3128 0d33 9C020000 		.4byte	.LASF146
 3129 0d37 01       		.byte	0x1
 3130 0d38 7907     		.2byte	0x779
 3131 0d3a 83000000 		.4byte	0x83
 3132 0d3e CB050000 		.4byte	.LLST44
 3133 0d42 19       		.uleb128 0x19
 3134 0d43 4E020000 		.4byte	.LASF123
 3135 0d47 01       		.byte	0x1
 3136 0d48 7A07     		.2byte	0x77a
 3137 0d4a 83000000 		.4byte	0x83
 3138 0d4e EC050000 		.4byte	.LLST45
 3139 0d52 19       		.uleb128 0x19
 3140 0d53 1C000000 		.4byte	.LASF147
 3141 0d57 01       		.byte	0x1
 3142 0d58 7C07     		.2byte	0x77c
 3143 0d5a 77000000 		.4byte	0x77
 3144 0d5e 0D060000 		.4byte	.LLST46
 3145 0d62 19       		.uleb128 0x19
 3146 0d63 14020000 		.4byte	.LASF104
 3147 0d67 01       		.byte	0x1
 3148 0d68 8307     		.2byte	0x783
 3149 0d6a D20D0000 		.4byte	0xdd2
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 106


 3150 0d6e 2C060000 		.4byte	.LLST47
 3151 0d72 1E       		.uleb128 0x1e
 3152 0d73 30000000 		.4byte	.LVL129
 3153 0d77 180C0000 		.4byte	0xc18
 3154 0d7b 1E       		.uleb128 0x1e
 3155 0d7c 34000000 		.4byte	.LVL130
 3156 0d80 81060000 		.4byte	0x681
 3157 0d84 25       		.uleb128 0x25
 3158 0d85 52000000 		.4byte	.LVL133
 3159 0d89 CD070000 		.4byte	0x7cd
 3160 0d8d 990D0000 		.4byte	0xd99
 3161 0d91 1C       		.uleb128 0x1c
 3162 0d92 01       		.uleb128 0x1
 3163 0d93 50       		.byte	0x50
 3164 0d94 03       		.uleb128 0x3
 3165 0d95 91       		.byte	0x91
 3166 0d96 64       		.sleb128 -28
 3167 0d97 06       		.byte	0x6
 3168 0d98 00       		.byte	0
 3169 0d99 1E       		.uleb128 0x1e
 3170 0d9a 56000000 		.4byte	.LVL134
 3171 0d9e E0090000 		.4byte	0x9e0
 3172 0da2 1E       		.uleb128 0x1e
 3173 0da3 96000000 		.4byte	.LVL139
 3174 0da7 0F0B0000 		.4byte	0xb0f
 3175 0dab 1E       		.uleb128 0x1e
 3176 0dac A0000000 		.4byte	.LVL140
 3177 0db0 A6060000 		.4byte	0x6a6
 3178 0db4 1B       		.uleb128 0x1b
 3179 0db5 AA000000 		.4byte	.LVL141
 3180 0db9 B8060000 		.4byte	0x6b8
 3181 0dbd 1C       		.uleb128 0x1c
 3182 0dbe 01       		.uleb128 0x1
 3183 0dbf 50       		.byte	0x50
 3184 0dc0 03       		.uleb128 0x3
 3185 0dc1 91       		.byte	0x91
 3186 0dc2 64       		.sleb128 -28
 3187 0dc3 06       		.byte	0x6
 3188 0dc4 1C       		.uleb128 0x1c
 3189 0dc5 01       		.uleb128 0x1
 3190 0dc6 51       		.byte	0x51
 3191 0dc7 02       		.uleb128 0x2
 3192 0dc8 77       		.byte	0x77
 3193 0dc9 00       		.sleb128 0
 3194 0dca 1C       		.uleb128 0x1c
 3195 0dcb 01       		.uleb128 0x1
 3196 0dcc 52       		.byte	0x52
 3197 0dcd 02       		.uleb128 0x2
 3198 0dce 74       		.byte	0x74
 3199 0dcf 00       		.sleb128 0
 3200 0dd0 00       		.byte	0
 3201 0dd1 00       		.byte	0
 3202 0dd2 10       		.uleb128 0x10
 3203 0dd3 04       		.byte	0x4
 3204 0dd4 21020000 		.4byte	0x221
 3205 0dd8 28       		.uleb128 0x28
 3206 0dd9 BF080000 		.4byte	.LASF174
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 107


 3207 0ddd 01       		.byte	0x1
 3208 0dde 3E08     		.2byte	0x83e
 3209 0de0 A4000000 		.4byte	0xa4
 3210 0de4 00000000 		.4byte	.LFB20
 3211 0de8 10010000 		.4byte	.LFE20-.LFB20
 3212 0dec 01       		.uleb128 0x1
 3213 0ded 9C       		.byte	0x9c
 3214 0dee 880E0000 		.4byte	0xe88
 3215 0df2 18       		.uleb128 0x18
 3216 0df3 E60B0000 		.4byte	.LASF135
 3217 0df7 01       		.byte	0x1
 3218 0df8 3E08     		.2byte	0x83e
 3219 0dfa 83000000 		.4byte	0x83
 3220 0dfe 4B060000 		.4byte	.LLST48
 3221 0e02 18       		.uleb128 0x18
 3222 0e03 BB030000 		.4byte	.LASF148
 3223 0e07 01       		.byte	0x1
 3224 0e08 3E08     		.2byte	0x83e
 3225 0e0a 83000000 		.4byte	0x83
 3226 0e0e 77060000 		.4byte	.LLST49
 3227 0e12 19       		.uleb128 0x19
 3228 0e13 20040000 		.4byte	.LASF105
 3229 0e17 01       		.byte	0x1
 3230 0e18 4008     		.2byte	0x840
 3231 0e1a 83000000 		.4byte	0x83
 3232 0e1e A3060000 		.4byte	.LLST50
 3233 0e22 19       		.uleb128 0x19
 3234 0e23 58060000 		.4byte	.LASF108
 3235 0e27 01       		.byte	0x1
 3236 0e28 4108     		.2byte	0x841
 3237 0e2a A4000000 		.4byte	0xa4
 3238 0e2e DF060000 		.4byte	.LLST51
 3239 0e32 19       		.uleb128 0x19
 3240 0e33 14020000 		.4byte	.LASF104
 3241 0e37 01       		.byte	0x1
 3242 0e38 4B08     		.2byte	0x84b
 3243 0e3a D20D0000 		.4byte	0xdd2
 3244 0e3e 09070000 		.4byte	.LLST52
 3245 0e42 16       		.uleb128 0x16
 3246 0e43 ED0A0000 		.4byte	.LASF145
 3247 0e47 01       		.byte	0x1
 3248 0e48 4F08     		.2byte	0x84f
 3249 0e4a 0A020000 		.4byte	0x20a
 3250 0e4e 02       		.uleb128 0x2
 3251 0e4f 91       		.byte	0x91
 3252 0e50 64       		.sleb128 -28
 3253 0e51 19       		.uleb128 0x19
 3254 0e52 93080000 		.4byte	.LASF144
 3255 0e56 01       		.byte	0x1
 3256 0e57 5408     		.2byte	0x854
 3257 0e59 14060000 		.4byte	0x614
 3258 0e5d 1C070000 		.4byte	.LLST53
 3259 0e61 1E       		.uleb128 0x1e
 3260 0e62 3A000000 		.4byte	.LVL157
 3261 0e66 7E0F0000 		.4byte	0xf7e
 3262 0e6a 1B       		.uleb128 0x1b
 3263 0e6b 58000000 		.4byte	.LVL160
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 108


 3264 0e6f DA0C0000 		.4byte	0xcda
 3265 0e73 1C       		.uleb128 0x1c
 3266 0e74 01       		.uleb128 0x1
 3267 0e75 50       		.byte	0x50
 3268 0e76 03       		.uleb128 0x3
 3269 0e77 91       		.byte	0x91
 3270 0e78 5C       		.sleb128 -36
 3271 0e79 06       		.byte	0x6
 3272 0e7a 1C       		.uleb128 0x1c
 3273 0e7b 01       		.uleb128 0x1
 3274 0e7c 51       		.byte	0x51
 3275 0e7d 02       		.uleb128 0x2
 3276 0e7e 76       		.byte	0x76
 3277 0e7f 00       		.sleb128 0
 3278 0e80 1C       		.uleb128 0x1c
 3279 0e81 01       		.uleb128 0x1
 3280 0e82 52       		.byte	0x52
 3281 0e83 02       		.uleb128 0x2
 3282 0e84 91       		.byte	0x91
 3283 0e85 64       		.sleb128 -28
 3284 0e86 00       		.byte	0
 3285 0e87 00       		.byte	0
 3286 0e88 29       		.uleb128 0x29
 3287 0e89 EE010000 		.4byte	.LASF149
 3288 0e8d 01       		.byte	0x1
 3289 0e8e 6E       		.byte	0x6e
 3290 0e8f 83000000 		.4byte	0x83
 3291 0e93 05       		.uleb128 0x5
 3292 0e94 03       		.byte	0x3
 3293 0e95 04000000 		.4byte	CapSense_1_counterResolution
 3294 0e99 29       		.uleb128 0x29
 3295 0e9a 71050000 		.4byte	.LASF150
 3296 0e9e 01       		.byte	0x1
 3297 0e9f 72       		.byte	0x72
 3298 0ea0 6B000000 		.4byte	0x6b
 3299 0ea4 05       		.uleb128 0x5
 3300 0ea5 03       		.byte	0x3
 3301 0ea6 00000000 		.4byte	CapSense_1_eleCsdDisconnectFlag
 3302 0eaa 2A       		.uleb128 0x2a
 3303 0eab 5E070000 		.4byte	.LASF151
 3304 0eaf 05       		.byte	0x5
 3305 0eb0 3404     		.2byte	0x434
 3306 0eb2 B5040000 		.4byte	0x4b5
 3307 0eb6 2A       		.uleb128 0x2a
 3308 0eb7 72080000 		.4byte	.LASF152
 3309 0ebb 05       		.byte	0x5
 3310 0ebc 3504     		.2byte	0x435
 3311 0ebe C20E0000 		.4byte	0xec2
 3312 0ec2 1A       		.uleb128 0x1a
 3313 0ec3 53060000 		.4byte	0x653
 3314 0ec7 2B       		.uleb128 0x2b
 3315 0ec8 34040000 		.4byte	.LASF153
 3316 0ecc 06       		.byte	0x6
 3317 0ecd 9D       		.byte	0x9d
 3318 0ece B0000000 		.4byte	0xb0
 3319 0ed2 2B       		.uleb128 0x2b
 3320 0ed3 73090000 		.4byte	.LASF154
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 109


 3321 0ed7 06       		.byte	0x6
 3322 0ed8 9E       		.byte	0x9e
 3323 0ed9 B0000000 		.4byte	0xb0
 3324 0edd 2B       		.uleb128 0x2b
 3325 0ede 4B000000 		.4byte	.LASF155
 3326 0ee2 06       		.byte	0x6
 3327 0ee3 A1       		.byte	0xa1
 3328 0ee4 0E060000 		.4byte	0x60e
 3329 0ee8 2B       		.uleb128 0x2b
 3330 0ee9 80010000 		.4byte	.LASF156
 3331 0eed 06       		.byte	0x6
 3332 0eee A8       		.byte	0xa8
 3333 0eef 3C080000 		.4byte	0x83c
 3334 0ef3 2B       		.uleb128 0x2b
 3335 0ef4 D6000000 		.4byte	.LASF157
 3336 0ef8 06       		.byte	0x6
 3337 0ef9 B6       		.byte	0xb6
 3338 0efa 790A0000 		.4byte	0xa79
 3339 0efe 2C       		.uleb128 0x2c
 3340 0eff 53050000 		.4byte	.LASF158
 3341 0f03 01       		.byte	0x1
 3342 0f04 6D       		.byte	0x6d
 3343 0f05 83000000 		.4byte	0x83
 3344 0f09 05       		.uleb128 0x5
 3345 0f0a 03       		.byte	0x3
 3346 0f0b 00000000 		.4byte	CapSense_1_configCsd
 3347 0f0f 2C       		.uleb128 0x2c
 3348 0f10 CA020000 		.4byte	.LASF159
 3349 0f14 01       		.byte	0x1
 3350 0f15 7A       		.byte	0x7a
 3351 0f16 6B000000 		.4byte	0x6b
 3352 0f1a 05       		.uleb128 0x5
 3353 0f1b 03       		.byte	0x3
 3354 0f1c 00000000 		.4byte	CapSense_1_calibratedIdac
 3355 0f20 2C       		.uleb128 0x2c
 3356 0f21 05090000 		.4byte	.LASF160
 3357 0f25 01       		.byte	0x1
 3358 0f26 7B       		.byte	0x7b
 3359 0f27 77000000 		.4byte	0x77
 3360 0f2b 05       		.uleb128 0x5
 3361 0f2c 03       		.byte	0x3
 3362 0f2d 00000000 		.4byte	CapSense_1_calibratedRawcount
 3363 0f31 2D       		.uleb128 0x2d
 3364 0f32 E5080000 		.4byte	.LASF161
 3365 0f36 E5080000 		.4byte	.LASF161
 3366 0f3a 06       		.byte	0x6
 3367 0f3b 69       		.byte	0x69
 3368 0f3c 2D       		.uleb128 0x2d
 3369 0f3d 410B0000 		.4byte	.LASF162
 3370 0f41 410B0000 		.4byte	.LASF162
 3371 0f45 06       		.byte	0x6
 3372 0f46 85       		.byte	0x85
 3373 0f47 2D       		.uleb128 0x2d
 3374 0f48 A4030000 		.4byte	.LASF163
 3375 0f4c A4030000 		.4byte	.LASF163
 3376 0f50 07       		.byte	0x7
 3377 0f51 E5       		.byte	0xe5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 110


 3378 0f52 2D       		.uleb128 0x2d
 3379 0f53 F5040000 		.4byte	.LASF164
 3380 0f57 F5040000 		.4byte	.LASF164
 3381 0f5b 07       		.byte	0x7
 3382 0f5c E6       		.byte	0xe6
 3383 0f5d 2D       		.uleb128 0x2d
 3384 0f5e 6A040000 		.4byte	.LASF165
 3385 0f62 6A040000 		.4byte	.LASF165
 3386 0f66 06       		.byte	0x6
 3387 0f67 68       		.byte	0x68
 3388 0f68 2D       		.uleb128 0x2d
 3389 0f69 0B050000 		.4byte	.LASF166
 3390 0f6d 0B050000 		.4byte	.LASF166
 3391 0f71 07       		.byte	0x7
 3392 0f72 DC       		.byte	0xdc
 3393 0f73 2D       		.uleb128 0x2d
 3394 0f74 A50A0000 		.4byte	.LASF167
 3395 0f78 A50A0000 		.4byte	.LASF167
 3396 0f7c 07       		.byte	0x7
 3397 0f7d C3       		.byte	0xc3
 3398 0f7e 2D       		.uleb128 0x2d
 3399 0f7f 8D030000 		.4byte	.LASF168
 3400 0f83 8D030000 		.4byte	.LASF168
 3401 0f87 08       		.byte	0x8
 3402 0f88 18       		.byte	0x18
 3403 0f89 2D       		.uleb128 0x2d
 3404 0f8a 4B040000 		.4byte	.LASF169
 3405 0f8e 4B040000 		.4byte	.LASF169
 3406 0f92 06       		.byte	0x6
 3407 0f93 6E       		.byte	0x6e
 3408 0f94 00       		.byte	0
 3409              		.section	.debug_abbrev,"",%progbits
 3410              	.Ldebug_abbrev0:
 3411 0000 01       		.uleb128 0x1
 3412 0001 11       		.uleb128 0x11
 3413 0002 01       		.byte	0x1
 3414 0003 25       		.uleb128 0x25
 3415 0004 0E       		.uleb128 0xe
 3416 0005 13       		.uleb128 0x13
 3417 0006 0B       		.uleb128 0xb
 3418 0007 03       		.uleb128 0x3
 3419 0008 0E       		.uleb128 0xe
 3420 0009 1B       		.uleb128 0x1b
 3421 000a 0E       		.uleb128 0xe
 3422 000b 55       		.uleb128 0x55
 3423 000c 17       		.uleb128 0x17
 3424 000d 11       		.uleb128 0x11
 3425 000e 01       		.uleb128 0x1
 3426 000f 10       		.uleb128 0x10
 3427 0010 17       		.uleb128 0x17
 3428 0011 00       		.byte	0
 3429 0012 00       		.byte	0
 3430 0013 02       		.uleb128 0x2
 3431 0014 24       		.uleb128 0x24
 3432 0015 00       		.byte	0
 3433 0016 0B       		.uleb128 0xb
 3434 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 111


 3435 0018 3E       		.uleb128 0x3e
 3436 0019 0B       		.uleb128 0xb
 3437 001a 03       		.uleb128 0x3
 3438 001b 0E       		.uleb128 0xe
 3439 001c 00       		.byte	0
 3440 001d 00       		.byte	0
 3441 001e 03       		.uleb128 0x3
 3442 001f 24       		.uleb128 0x24
 3443 0020 00       		.byte	0
 3444 0021 0B       		.uleb128 0xb
 3445 0022 0B       		.uleb128 0xb
 3446 0023 3E       		.uleb128 0x3e
 3447 0024 0B       		.uleb128 0xb
 3448 0025 03       		.uleb128 0x3
 3449 0026 08       		.uleb128 0x8
 3450 0027 00       		.byte	0
 3451 0028 00       		.byte	0
 3452 0029 04       		.uleb128 0x4
 3453 002a 16       		.uleb128 0x16
 3454 002b 00       		.byte	0
 3455 002c 03       		.uleb128 0x3
 3456 002d 0E       		.uleb128 0xe
 3457 002e 3A       		.uleb128 0x3a
 3458 002f 0B       		.uleb128 0xb
 3459 0030 3B       		.uleb128 0x3b
 3460 0031 05       		.uleb128 0x5
 3461 0032 49       		.uleb128 0x49
 3462 0033 13       		.uleb128 0x13
 3463 0034 00       		.byte	0
 3464 0035 00       		.byte	0
 3465 0036 05       		.uleb128 0x5
 3466 0037 35       		.uleb128 0x35
 3467 0038 00       		.byte	0
 3468 0039 49       		.uleb128 0x49
 3469 003a 13       		.uleb128 0x13
 3470 003b 00       		.byte	0
 3471 003c 00       		.byte	0
 3472 003d 06       		.uleb128 0x6
 3473 003e 13       		.uleb128 0x13
 3474 003f 01       		.byte	0x1
 3475 0040 0B       		.uleb128 0xb
 3476 0041 0B       		.uleb128 0xb
 3477 0042 3A       		.uleb128 0x3a
 3478 0043 0B       		.uleb128 0xb
 3479 0044 3B       		.uleb128 0x3b
 3480 0045 0B       		.uleb128 0xb
 3481 0046 01       		.uleb128 0x1
 3482 0047 13       		.uleb128 0x13
 3483 0048 00       		.byte	0
 3484 0049 00       		.byte	0
 3485 004a 07       		.uleb128 0x7
 3486 004b 0D       		.uleb128 0xd
 3487 004c 00       		.byte	0
 3488 004d 03       		.uleb128 0x3
 3489 004e 0E       		.uleb128 0xe
 3490 004f 3A       		.uleb128 0x3a
 3491 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 112


 3492 0051 3B       		.uleb128 0x3b
 3493 0052 0B       		.uleb128 0xb
 3494 0053 49       		.uleb128 0x49
 3495 0054 13       		.uleb128 0x13
 3496 0055 38       		.uleb128 0x38
 3497 0056 0B       		.uleb128 0xb
 3498 0057 00       		.byte	0
 3499 0058 00       		.byte	0
 3500 0059 08       		.uleb128 0x8
 3501 005a 16       		.uleb128 0x16
 3502 005b 00       		.byte	0
 3503 005c 03       		.uleb128 0x3
 3504 005d 0E       		.uleb128 0xe
 3505 005e 3A       		.uleb128 0x3a
 3506 005f 0B       		.uleb128 0xb
 3507 0060 3B       		.uleb128 0x3b
 3508 0061 0B       		.uleb128 0xb
 3509 0062 49       		.uleb128 0x49
 3510 0063 13       		.uleb128 0x13
 3511 0064 00       		.byte	0
 3512 0065 00       		.byte	0
 3513 0066 09       		.uleb128 0x9
 3514 0067 04       		.uleb128 0x4
 3515 0068 01       		.byte	0x1
 3516 0069 0B       		.uleb128 0xb
 3517 006a 0B       		.uleb128 0xb
 3518 006b 49       		.uleb128 0x49
 3519 006c 13       		.uleb128 0x13
 3520 006d 3A       		.uleb128 0x3a
 3521 006e 0B       		.uleb128 0xb
 3522 006f 3B       		.uleb128 0x3b
 3523 0070 0B       		.uleb128 0xb
 3524 0071 01       		.uleb128 0x1
 3525 0072 13       		.uleb128 0x13
 3526 0073 00       		.byte	0
 3527 0074 00       		.byte	0
 3528 0075 0A       		.uleb128 0xa
 3529 0076 28       		.uleb128 0x28
 3530 0077 00       		.byte	0
 3531 0078 03       		.uleb128 0x3
 3532 0079 0E       		.uleb128 0xe
 3533 007a 1C       		.uleb128 0x1c
 3534 007b 0B       		.uleb128 0xb
 3535 007c 00       		.byte	0
 3536 007d 00       		.byte	0
 3537 007e 0B       		.uleb128 0xb
 3538 007f 01       		.uleb128 0x1
 3539 0080 01       		.byte	0x1
 3540 0081 49       		.uleb128 0x49
 3541 0082 13       		.uleb128 0x13
 3542 0083 01       		.uleb128 0x1
 3543 0084 13       		.uleb128 0x13
 3544 0085 00       		.byte	0
 3545 0086 00       		.byte	0
 3546 0087 0C       		.uleb128 0xc
 3547 0088 21       		.uleb128 0x21
 3548 0089 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 113


 3549 008a 49       		.uleb128 0x49
 3550 008b 13       		.uleb128 0x13
 3551 008c 2F       		.uleb128 0x2f
 3552 008d 0B       		.uleb128 0xb
 3553 008e 00       		.byte	0
 3554 008f 00       		.byte	0
 3555 0090 0D       		.uleb128 0xd
 3556 0091 0D       		.uleb128 0xd
 3557 0092 00       		.byte	0
 3558 0093 03       		.uleb128 0x3
 3559 0094 0E       		.uleb128 0xe
 3560 0095 3A       		.uleb128 0x3a
 3561 0096 0B       		.uleb128 0xb
 3562 0097 3B       		.uleb128 0x3b
 3563 0098 05       		.uleb128 0x5
 3564 0099 49       		.uleb128 0x49
 3565 009a 13       		.uleb128 0x13
 3566 009b 38       		.uleb128 0x38
 3567 009c 0B       		.uleb128 0xb
 3568 009d 00       		.byte	0
 3569 009e 00       		.byte	0
 3570 009f 0E       		.uleb128 0xe
 3571 00a0 13       		.uleb128 0x13
 3572 00a1 01       		.byte	0x1
 3573 00a2 0B       		.uleb128 0xb
 3574 00a3 0B       		.uleb128 0xb
 3575 00a4 3A       		.uleb128 0x3a
 3576 00a5 0B       		.uleb128 0xb
 3577 00a6 3B       		.uleb128 0x3b
 3578 00a7 05       		.uleb128 0x5
 3579 00a8 01       		.uleb128 0x1
 3580 00a9 13       		.uleb128 0x13
 3581 00aa 00       		.byte	0
 3582 00ab 00       		.byte	0
 3583 00ac 0F       		.uleb128 0xf
 3584 00ad 0D       		.uleb128 0xd
 3585 00ae 00       		.byte	0
 3586 00af 03       		.uleb128 0x3
 3587 00b0 08       		.uleb128 0x8
 3588 00b1 3A       		.uleb128 0x3a
 3589 00b2 0B       		.uleb128 0xb
 3590 00b3 3B       		.uleb128 0x3b
 3591 00b4 05       		.uleb128 0x5
 3592 00b5 49       		.uleb128 0x49
 3593 00b6 13       		.uleb128 0x13
 3594 00b7 38       		.uleb128 0x38
 3595 00b8 0B       		.uleb128 0xb
 3596 00b9 00       		.byte	0
 3597 00ba 00       		.byte	0
 3598 00bb 10       		.uleb128 0x10
 3599 00bc 0F       		.uleb128 0xf
 3600 00bd 00       		.byte	0
 3601 00be 0B       		.uleb128 0xb
 3602 00bf 0B       		.uleb128 0xb
 3603 00c0 49       		.uleb128 0x49
 3604 00c1 13       		.uleb128 0x13
 3605 00c2 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 114


 3606 00c3 00       		.byte	0
 3607 00c4 11       		.uleb128 0x11
 3608 00c5 26       		.uleb128 0x26
 3609 00c6 00       		.byte	0
 3610 00c7 00       		.byte	0
 3611 00c8 00       		.byte	0
 3612 00c9 12       		.uleb128 0x12
 3613 00ca 0F       		.uleb128 0xf
 3614 00cb 00       		.byte	0
 3615 00cc 0B       		.uleb128 0xb
 3616 00cd 0B       		.uleb128 0xb
 3617 00ce 00       		.byte	0
 3618 00cf 00       		.byte	0
 3619 00d0 13       		.uleb128 0x13
 3620 00d1 2E       		.uleb128 0x2e
 3621 00d2 00       		.byte	0
 3622 00d3 03       		.uleb128 0x3
 3623 00d4 0E       		.uleb128 0xe
 3624 00d5 3A       		.uleb128 0x3a
 3625 00d6 0B       		.uleb128 0xb
 3626 00d7 3B       		.uleb128 0x3b
 3627 00d8 05       		.uleb128 0x5
 3628 00d9 27       		.uleb128 0x27
 3629 00da 19       		.uleb128 0x19
 3630 00db 20       		.uleb128 0x20
 3631 00dc 0B       		.uleb128 0xb
 3632 00dd 00       		.byte	0
 3633 00de 00       		.byte	0
 3634 00df 14       		.uleb128 0x14
 3635 00e0 2E       		.uleb128 0x2e
 3636 00e1 00       		.byte	0
 3637 00e2 03       		.uleb128 0x3
 3638 00e3 0E       		.uleb128 0xe
 3639 00e4 3A       		.uleb128 0x3a
 3640 00e5 0B       		.uleb128 0xb
 3641 00e6 3B       		.uleb128 0x3b
 3642 00e7 05       		.uleb128 0x5
 3643 00e8 27       		.uleb128 0x27
 3644 00e9 19       		.uleb128 0x19
 3645 00ea 11       		.uleb128 0x11
 3646 00eb 01       		.uleb128 0x1
 3647 00ec 12       		.uleb128 0x12
 3648 00ed 06       		.uleb128 0x6
 3649 00ee 40       		.uleb128 0x40
 3650 00ef 18       		.uleb128 0x18
 3651 00f0 9742     		.uleb128 0x2117
 3652 00f2 19       		.uleb128 0x19
 3653 00f3 00       		.byte	0
 3654 00f4 00       		.byte	0
 3655 00f5 15       		.uleb128 0x15
 3656 00f6 2E       		.uleb128 0x2e
 3657 00f7 01       		.byte	0x1
 3658 00f8 03       		.uleb128 0x3
 3659 00f9 0E       		.uleb128 0xe
 3660 00fa 3A       		.uleb128 0x3a
 3661 00fb 0B       		.uleb128 0xb
 3662 00fc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 115


 3663 00fd 05       		.uleb128 0x5
 3664 00fe 27       		.uleb128 0x27
 3665 00ff 19       		.uleb128 0x19
 3666 0100 11       		.uleb128 0x11
 3667 0101 01       		.uleb128 0x1
 3668 0102 12       		.uleb128 0x12
 3669 0103 06       		.uleb128 0x6
 3670 0104 40       		.uleb128 0x40
 3671 0105 18       		.uleb128 0x18
 3672 0106 9742     		.uleb128 0x2117
 3673 0108 19       		.uleb128 0x19
 3674 0109 01       		.uleb128 0x1
 3675 010a 13       		.uleb128 0x13
 3676 010b 00       		.byte	0
 3677 010c 00       		.byte	0
 3678 010d 16       		.uleb128 0x16
 3679 010e 34       		.uleb128 0x34
 3680 010f 00       		.byte	0
 3681 0110 03       		.uleb128 0x3
 3682 0111 0E       		.uleb128 0xe
 3683 0112 3A       		.uleb128 0x3a
 3684 0113 0B       		.uleb128 0xb
 3685 0114 3B       		.uleb128 0x3b
 3686 0115 05       		.uleb128 0x5
 3687 0116 49       		.uleb128 0x49
 3688 0117 13       		.uleb128 0x13
 3689 0118 02       		.uleb128 0x2
 3690 0119 18       		.uleb128 0x18
 3691 011a 00       		.byte	0
 3692 011b 00       		.byte	0
 3693 011c 17       		.uleb128 0x17
 3694 011d 2E       		.uleb128 0x2e
 3695 011e 01       		.byte	0x1
 3696 011f 03       		.uleb128 0x3
 3697 0120 0E       		.uleb128 0xe
 3698 0121 3A       		.uleb128 0x3a
 3699 0122 0B       		.uleb128 0xb
 3700 0123 3B       		.uleb128 0x3b
 3701 0124 05       		.uleb128 0x5
 3702 0125 27       		.uleb128 0x27
 3703 0126 19       		.uleb128 0x19
 3704 0127 49       		.uleb128 0x49
 3705 0128 13       		.uleb128 0x13
 3706 0129 11       		.uleb128 0x11
 3707 012a 01       		.uleb128 0x1
 3708 012b 12       		.uleb128 0x12
 3709 012c 06       		.uleb128 0x6
 3710 012d 40       		.uleb128 0x40
 3711 012e 18       		.uleb128 0x18
 3712 012f 9642     		.uleb128 0x2116
 3713 0131 19       		.uleb128 0x19
 3714 0132 01       		.uleb128 0x1
 3715 0133 13       		.uleb128 0x13
 3716 0134 00       		.byte	0
 3717 0135 00       		.byte	0
 3718 0136 18       		.uleb128 0x18
 3719 0137 05       		.uleb128 0x5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 116


 3720 0138 00       		.byte	0
 3721 0139 03       		.uleb128 0x3
 3722 013a 0E       		.uleb128 0xe
 3723 013b 3A       		.uleb128 0x3a
 3724 013c 0B       		.uleb128 0xb
 3725 013d 3B       		.uleb128 0x3b
 3726 013e 05       		.uleb128 0x5
 3727 013f 49       		.uleb128 0x49
 3728 0140 13       		.uleb128 0x13
 3729 0141 02       		.uleb128 0x2
 3730 0142 17       		.uleb128 0x17
 3731 0143 00       		.byte	0
 3732 0144 00       		.byte	0
 3733 0145 19       		.uleb128 0x19
 3734 0146 34       		.uleb128 0x34
 3735 0147 00       		.byte	0
 3736 0148 03       		.uleb128 0x3
 3737 0149 0E       		.uleb128 0xe
 3738 014a 3A       		.uleb128 0x3a
 3739 014b 0B       		.uleb128 0xb
 3740 014c 3B       		.uleb128 0x3b
 3741 014d 05       		.uleb128 0x5
 3742 014e 49       		.uleb128 0x49
 3743 014f 13       		.uleb128 0x13
 3744 0150 02       		.uleb128 0x2
 3745 0151 17       		.uleb128 0x17
 3746 0152 00       		.byte	0
 3747 0153 00       		.byte	0
 3748 0154 1A       		.uleb128 0x1a
 3749 0155 26       		.uleb128 0x26
 3750 0156 00       		.byte	0
 3751 0157 49       		.uleb128 0x49
 3752 0158 13       		.uleb128 0x13
 3753 0159 00       		.byte	0
 3754 015a 00       		.byte	0
 3755 015b 1B       		.uleb128 0x1b
 3756 015c 898201   		.uleb128 0x4109
 3757 015f 01       		.byte	0x1
 3758 0160 11       		.uleb128 0x11
 3759 0161 01       		.uleb128 0x1
 3760 0162 31       		.uleb128 0x31
 3761 0163 13       		.uleb128 0x13
 3762 0164 00       		.byte	0
 3763 0165 00       		.byte	0
 3764 0166 1C       		.uleb128 0x1c
 3765 0167 8A8201   		.uleb128 0x410a
 3766 016a 00       		.byte	0
 3767 016b 02       		.uleb128 0x2
 3768 016c 18       		.uleb128 0x18
 3769 016d 9142     		.uleb128 0x2111
 3770 016f 18       		.uleb128 0x18
 3771 0170 00       		.byte	0
 3772 0171 00       		.byte	0
 3773 0172 1D       		.uleb128 0x1d
 3774 0173 2E       		.uleb128 0x2e
 3775 0174 01       		.byte	0x1
 3776 0175 3F       		.uleb128 0x3f
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 117


 3777 0176 19       		.uleb128 0x19
 3778 0177 03       		.uleb128 0x3
 3779 0178 0E       		.uleb128 0xe
 3780 0179 3A       		.uleb128 0x3a
 3781 017a 0B       		.uleb128 0xb
 3782 017b 3B       		.uleb128 0x3b
 3783 017c 05       		.uleb128 0x5
 3784 017d 27       		.uleb128 0x27
 3785 017e 19       		.uleb128 0x19
 3786 017f 11       		.uleb128 0x11
 3787 0180 01       		.uleb128 0x1
 3788 0181 12       		.uleb128 0x12
 3789 0182 06       		.uleb128 0x6
 3790 0183 40       		.uleb128 0x40
 3791 0184 18       		.uleb128 0x18
 3792 0185 9742     		.uleb128 0x2117
 3793 0187 19       		.uleb128 0x19
 3794 0188 01       		.uleb128 0x1
 3795 0189 13       		.uleb128 0x13
 3796 018a 00       		.byte	0
 3797 018b 00       		.byte	0
 3798 018c 1E       		.uleb128 0x1e
 3799 018d 898201   		.uleb128 0x4109
 3800 0190 00       		.byte	0
 3801 0191 11       		.uleb128 0x11
 3802 0192 01       		.uleb128 0x1
 3803 0193 31       		.uleb128 0x31
 3804 0194 13       		.uleb128 0x13
 3805 0195 00       		.byte	0
 3806 0196 00       		.byte	0
 3807 0197 1F       		.uleb128 0x1f
 3808 0198 05       		.uleb128 0x5
 3809 0199 00       		.byte	0
 3810 019a 03       		.uleb128 0x3
 3811 019b 0E       		.uleb128 0xe
 3812 019c 3A       		.uleb128 0x3a
 3813 019d 0B       		.uleb128 0xb
 3814 019e 3B       		.uleb128 0x3b
 3815 019f 05       		.uleb128 0x5
 3816 01a0 49       		.uleb128 0x49
 3817 01a1 13       		.uleb128 0x13
 3818 01a2 02       		.uleb128 0x2
 3819 01a3 18       		.uleb128 0x18
 3820 01a4 00       		.byte	0
 3821 01a5 00       		.byte	0
 3822 01a6 20       		.uleb128 0x20
 3823 01a7 2E       		.uleb128 0x2e
 3824 01a8 01       		.byte	0x1
 3825 01a9 03       		.uleb128 0x3
 3826 01aa 0E       		.uleb128 0xe
 3827 01ab 3A       		.uleb128 0x3a
 3828 01ac 0B       		.uleb128 0xb
 3829 01ad 3B       		.uleb128 0x3b
 3830 01ae 05       		.uleb128 0x5
 3831 01af 27       		.uleb128 0x27
 3832 01b0 19       		.uleb128 0x19
 3833 01b1 20       		.uleb128 0x20
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 118


 3834 01b2 0B       		.uleb128 0xb
 3835 01b3 01       		.uleb128 0x1
 3836 01b4 13       		.uleb128 0x13
 3837 01b5 00       		.byte	0
 3838 01b6 00       		.byte	0
 3839 01b7 21       		.uleb128 0x21
 3840 01b8 34       		.uleb128 0x34
 3841 01b9 00       		.byte	0
 3842 01ba 03       		.uleb128 0x3
 3843 01bb 0E       		.uleb128 0xe
 3844 01bc 3A       		.uleb128 0x3a
 3845 01bd 0B       		.uleb128 0xb
 3846 01be 3B       		.uleb128 0x3b
 3847 01bf 05       		.uleb128 0x5
 3848 01c0 49       		.uleb128 0x49
 3849 01c1 13       		.uleb128 0x13
 3850 01c2 00       		.byte	0
 3851 01c3 00       		.byte	0
 3852 01c4 22       		.uleb128 0x22
 3853 01c5 1D       		.uleb128 0x1d
 3854 01c6 01       		.byte	0x1
 3855 01c7 31       		.uleb128 0x31
 3856 01c8 13       		.uleb128 0x13
 3857 01c9 11       		.uleb128 0x11
 3858 01ca 01       		.uleb128 0x1
 3859 01cb 12       		.uleb128 0x12
 3860 01cc 06       		.uleb128 0x6
 3861 01cd 58       		.uleb128 0x58
 3862 01ce 0B       		.uleb128 0xb
 3863 01cf 59       		.uleb128 0x59
 3864 01d0 05       		.uleb128 0x5
 3865 01d1 01       		.uleb128 0x1
 3866 01d2 13       		.uleb128 0x13
 3867 01d3 00       		.byte	0
 3868 01d4 00       		.byte	0
 3869 01d5 23       		.uleb128 0x23
 3870 01d6 0B       		.uleb128 0xb
 3871 01d7 01       		.byte	0x1
 3872 01d8 11       		.uleb128 0x11
 3873 01d9 01       		.uleb128 0x1
 3874 01da 12       		.uleb128 0x12
 3875 01db 06       		.uleb128 0x6
 3876 01dc 00       		.byte	0
 3877 01dd 00       		.byte	0
 3878 01de 24       		.uleb128 0x24
 3879 01df 34       		.uleb128 0x34
 3880 01e0 00       		.byte	0
 3881 01e1 31       		.uleb128 0x31
 3882 01e2 13       		.uleb128 0x13
 3883 01e3 02       		.uleb128 0x2
 3884 01e4 17       		.uleb128 0x17
 3885 01e5 00       		.byte	0
 3886 01e6 00       		.byte	0
 3887 01e7 25       		.uleb128 0x25
 3888 01e8 898201   		.uleb128 0x4109
 3889 01eb 01       		.byte	0x1
 3890 01ec 11       		.uleb128 0x11
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 119


 3891 01ed 01       		.uleb128 0x1
 3892 01ee 31       		.uleb128 0x31
 3893 01ef 13       		.uleb128 0x13
 3894 01f0 01       		.uleb128 0x1
 3895 01f1 13       		.uleb128 0x13
 3896 01f2 00       		.byte	0
 3897 01f3 00       		.byte	0
 3898 01f4 26       		.uleb128 0x26
 3899 01f5 1D       		.uleb128 0x1d
 3900 01f6 00       		.byte	0
 3901 01f7 31       		.uleb128 0x31
 3902 01f8 13       		.uleb128 0x13
 3903 01f9 11       		.uleb128 0x11
 3904 01fa 01       		.uleb128 0x1
 3905 01fb 12       		.uleb128 0x12
 3906 01fc 06       		.uleb128 0x6
 3907 01fd 58       		.uleb128 0x58
 3908 01fe 0B       		.uleb128 0xb
 3909 01ff 59       		.uleb128 0x59
 3910 0200 05       		.uleb128 0x5
 3911 0201 00       		.byte	0
 3912 0202 00       		.byte	0
 3913 0203 27       		.uleb128 0x27
 3914 0204 2E       		.uleb128 0x2e
 3915 0205 01       		.byte	0x1
 3916 0206 03       		.uleb128 0x3
 3917 0207 0E       		.uleb128 0xe
 3918 0208 3A       		.uleb128 0x3a
 3919 0209 0B       		.uleb128 0xb
 3920 020a 3B       		.uleb128 0x3b
 3921 020b 05       		.uleb128 0x5
 3922 020c 27       		.uleb128 0x27
 3923 020d 19       		.uleb128 0x19
 3924 020e 49       		.uleb128 0x49
 3925 020f 13       		.uleb128 0x13
 3926 0210 11       		.uleb128 0x11
 3927 0211 01       		.uleb128 0x1
 3928 0212 12       		.uleb128 0x12
 3929 0213 06       		.uleb128 0x6
 3930 0214 40       		.uleb128 0x40
 3931 0215 18       		.uleb128 0x18
 3932 0216 9742     		.uleb128 0x2117
 3933 0218 19       		.uleb128 0x19
 3934 0219 01       		.uleb128 0x1
 3935 021a 13       		.uleb128 0x13
 3936 021b 00       		.byte	0
 3937 021c 00       		.byte	0
 3938 021d 28       		.uleb128 0x28
 3939 021e 2E       		.uleb128 0x2e
 3940 021f 01       		.byte	0x1
 3941 0220 3F       		.uleb128 0x3f
 3942 0221 19       		.uleb128 0x19
 3943 0222 03       		.uleb128 0x3
 3944 0223 0E       		.uleb128 0xe
 3945 0224 3A       		.uleb128 0x3a
 3946 0225 0B       		.uleb128 0xb
 3947 0226 3B       		.uleb128 0x3b
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 120


 3948 0227 05       		.uleb128 0x5
 3949 0228 27       		.uleb128 0x27
 3950 0229 19       		.uleb128 0x19
 3951 022a 49       		.uleb128 0x49
 3952 022b 13       		.uleb128 0x13
 3953 022c 11       		.uleb128 0x11
 3954 022d 01       		.uleb128 0x1
 3955 022e 12       		.uleb128 0x12
 3956 022f 06       		.uleb128 0x6
 3957 0230 40       		.uleb128 0x40
 3958 0231 18       		.uleb128 0x18
 3959 0232 9642     		.uleb128 0x2116
 3960 0234 19       		.uleb128 0x19
 3961 0235 01       		.uleb128 0x1
 3962 0236 13       		.uleb128 0x13
 3963 0237 00       		.byte	0
 3964 0238 00       		.byte	0
 3965 0239 29       		.uleb128 0x29
 3966 023a 34       		.uleb128 0x34
 3967 023b 00       		.byte	0
 3968 023c 03       		.uleb128 0x3
 3969 023d 0E       		.uleb128 0xe
 3970 023e 3A       		.uleb128 0x3a
 3971 023f 0B       		.uleb128 0xb
 3972 0240 3B       		.uleb128 0x3b
 3973 0241 0B       		.uleb128 0xb
 3974 0242 49       		.uleb128 0x49
 3975 0243 13       		.uleb128 0x13
 3976 0244 02       		.uleb128 0x2
 3977 0245 18       		.uleb128 0x18
 3978 0246 00       		.byte	0
 3979 0247 00       		.byte	0
 3980 0248 2A       		.uleb128 0x2a
 3981 0249 34       		.uleb128 0x34
 3982 024a 00       		.byte	0
 3983 024b 03       		.uleb128 0x3
 3984 024c 0E       		.uleb128 0xe
 3985 024d 3A       		.uleb128 0x3a
 3986 024e 0B       		.uleb128 0xb
 3987 024f 3B       		.uleb128 0x3b
 3988 0250 05       		.uleb128 0x5
 3989 0251 49       		.uleb128 0x49
 3990 0252 13       		.uleb128 0x13
 3991 0253 3F       		.uleb128 0x3f
 3992 0254 19       		.uleb128 0x19
 3993 0255 3C       		.uleb128 0x3c
 3994 0256 19       		.uleb128 0x19
 3995 0257 00       		.byte	0
 3996 0258 00       		.byte	0
 3997 0259 2B       		.uleb128 0x2b
 3998 025a 34       		.uleb128 0x34
 3999 025b 00       		.byte	0
 4000 025c 03       		.uleb128 0x3
 4001 025d 0E       		.uleb128 0xe
 4002 025e 3A       		.uleb128 0x3a
 4003 025f 0B       		.uleb128 0xb
 4004 0260 3B       		.uleb128 0x3b
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 121


 4005 0261 0B       		.uleb128 0xb
 4006 0262 49       		.uleb128 0x49
 4007 0263 13       		.uleb128 0x13
 4008 0264 3F       		.uleb128 0x3f
 4009 0265 19       		.uleb128 0x19
 4010 0266 3C       		.uleb128 0x3c
 4011 0267 19       		.uleb128 0x19
 4012 0268 00       		.byte	0
 4013 0269 00       		.byte	0
 4014 026a 2C       		.uleb128 0x2c
 4015 026b 34       		.uleb128 0x34
 4016 026c 00       		.byte	0
 4017 026d 03       		.uleb128 0x3
 4018 026e 0E       		.uleb128 0xe
 4019 026f 3A       		.uleb128 0x3a
 4020 0270 0B       		.uleb128 0xb
 4021 0271 3B       		.uleb128 0x3b
 4022 0272 0B       		.uleb128 0xb
 4023 0273 49       		.uleb128 0x49
 4024 0274 13       		.uleb128 0x13
 4025 0275 3F       		.uleb128 0x3f
 4026 0276 19       		.uleb128 0x19
 4027 0277 02       		.uleb128 0x2
 4028 0278 18       		.uleb128 0x18
 4029 0279 00       		.byte	0
 4030 027a 00       		.byte	0
 4031 027b 2D       		.uleb128 0x2d
 4032 027c 2E       		.uleb128 0x2e
 4033 027d 00       		.byte	0
 4034 027e 3F       		.uleb128 0x3f
 4035 027f 19       		.uleb128 0x19
 4036 0280 3C       		.uleb128 0x3c
 4037 0281 19       		.uleb128 0x19
 4038 0282 6E       		.uleb128 0x6e
 4039 0283 0E       		.uleb128 0xe
 4040 0284 03       		.uleb128 0x3
 4041 0285 0E       		.uleb128 0xe
 4042 0286 3A       		.uleb128 0x3a
 4043 0287 0B       		.uleb128 0xb
 4044 0288 3B       		.uleb128 0x3b
 4045 0289 0B       		.uleb128 0xb
 4046 028a 00       		.byte	0
 4047 028b 00       		.byte	0
 4048 028c 00       		.byte	0
 4049              		.section	.debug_loc,"",%progbits
 4050              	.Ldebug_loc0:
 4051              	.LLST0:
 4052 0000 00000000 		.4byte	.LVL2
 4053 0004 14000000 		.4byte	.LVL5
 4054 0008 0100     		.2byte	0x1
 4055 000a 50       		.byte	0x50
 4056 000b 14000000 		.4byte	.LVL5
 4057 000f 42000000 		.4byte	.LFE18
 4058 0013 0400     		.2byte	0x4
 4059 0015 F3       		.byte	0xf3
 4060 0016 01       		.uleb128 0x1
 4061 0017 50       		.byte	0x50
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 122


 4062 0018 9F       		.byte	0x9f
 4063 0019 00000000 		.4byte	0
 4064 001d 00000000 		.4byte	0
 4065              	.LLST1:
 4066 0021 00000000 		.4byte	.LVL2
 4067 0025 16000000 		.4byte	.LVL6
 4068 0029 0100     		.2byte	0x1
 4069 002b 51       		.byte	0x51
 4070 002c 16000000 		.4byte	.LVL6
 4071 0030 40000000 		.4byte	.LVL19
 4072 0034 0100     		.2byte	0x1
 4073 0036 56       		.byte	0x56
 4074 0037 40000000 		.4byte	.LVL19
 4075 003b 42000000 		.4byte	.LFE18
 4076 003f 0400     		.2byte	0x4
 4077 0041 F3       		.byte	0xf3
 4078 0042 01       		.uleb128 0x1
 4079 0043 51       		.byte	0x51
 4080 0044 9F       		.byte	0x9f
 4081 0045 00000000 		.4byte	0
 4082 0049 00000000 		.4byte	0
 4083              	.LLST2:
 4084 004d 00000000 		.4byte	.LVL2
 4085 0051 19000000 		.4byte	.LVL7-1
 4086 0055 0100     		.2byte	0x1
 4087 0057 52       		.byte	0x52
 4088 0058 19000000 		.4byte	.LVL7-1
 4089 005c 40000000 		.4byte	.LVL18
 4090 0060 0100     		.2byte	0x1
 4091 0062 55       		.byte	0x55
 4092 0063 40000000 		.4byte	.LVL18
 4093 0067 42000000 		.4byte	.LFE18
 4094 006b 0400     		.2byte	0x4
 4095 006d F3       		.byte	0xf3
 4096 006e 01       		.uleb128 0x1
 4097 006f 52       		.byte	0x52
 4098 0070 9F       		.byte	0x9f
 4099 0071 00000000 		.4byte	0
 4100 0075 00000000 		.4byte	0
 4101              	.LLST3:
 4102 0079 1C000000 		.4byte	.LVL8
 4103 007d 2A000000 		.4byte	.LVL10
 4104 0081 0100     		.2byte	0x1
 4105 0083 50       		.byte	0x50
 4106 0084 2C000000 		.4byte	.LVL11
 4107 0088 2E000000 		.4byte	.LVL12
 4108 008c 0100     		.2byte	0x1
 4109 008e 50       		.byte	0x50
 4110 008f 00000000 		.4byte	0
 4111 0093 00000000 		.4byte	0
 4112              	.LLST4:
 4113 0097 06000000 		.4byte	.LVL3
 4114 009b 2A000000 		.4byte	.LVL10
 4115 009f 0200     		.2byte	0x2
 4116 00a1 30       		.byte	0x30
 4117 00a2 9F       		.byte	0x9f
 4118 00a3 2A000000 		.4byte	.LVL10
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 123


 4119 00a7 2C000000 		.4byte	.LVL11
 4120 00ab 0100     		.2byte	0x1
 4121 00ad 50       		.byte	0x50
 4122 00ae 2C000000 		.4byte	.LVL11
 4123 00b2 2E000000 		.4byte	.LVL12
 4124 00b6 0200     		.2byte	0x2
 4125 00b8 30       		.byte	0x30
 4126 00b9 9F       		.byte	0x9f
 4127 00ba 2E000000 		.4byte	.LVL12
 4128 00be 38000000 		.4byte	.LVL13
 4129 00c2 0100     		.2byte	0x1
 4130 00c4 50       		.byte	0x50
 4131 00c5 3A000000 		.4byte	.LVL14
 4132 00c9 3C000000 		.4byte	.LVL15
 4133 00cd 0100     		.2byte	0x1
 4134 00cf 50       		.byte	0x50
 4135 00d0 3E000000 		.4byte	.LVL16
 4136 00d4 40000000 		.4byte	.LVL17
 4137 00d8 0100     		.2byte	0x1
 4138 00da 50       		.byte	0x50
 4139 00db 00000000 		.4byte	0
 4140 00df 00000000 		.4byte	0
 4141              	.LLST5:
 4142 00e3 0E000000 		.4byte	.LVL4
 4143 00e7 24000000 		.4byte	.LVL9
 4144 00eb 0100     		.2byte	0x1
 4145 00ed 54       		.byte	0x54
 4146 00ee 24000000 		.4byte	.LVL9
 4147 00f2 42000000 		.4byte	.LFE18
 4148 00f6 0100     		.2byte	0x1
 4149 00f8 53       		.byte	0x53
 4150 00f9 00000000 		.4byte	0
 4151 00fd 00000000 		.4byte	0
 4152              	.LLST6:
 4153 0101 00000000 		.4byte	.LVL20
 4154 0105 0C000000 		.4byte	.LVL21
 4155 0109 0100     		.2byte	0x1
 4156 010b 50       		.byte	0x50
 4157 010c 0C000000 		.4byte	.LVL21
 4158 0110 1C000000 		.4byte	.LFE0
 4159 0114 0400     		.2byte	0x4
 4160 0116 F3       		.byte	0xf3
 4161 0117 01       		.uleb128 0x1
 4162 0118 50       		.byte	0x50
 4163 0119 9F       		.byte	0x9f
 4164 011a 00000000 		.4byte	0
 4165 011e 00000000 		.4byte	0
 4166              	.LLST7:
 4167 0122 00000000 		.4byte	.LVL20
 4168 0126 13000000 		.4byte	.LVL22-1
 4169 012a 0100     		.2byte	0x1
 4170 012c 51       		.byte	0x51
 4171 012d 13000000 		.4byte	.LVL22-1
 4172 0131 1C000000 		.4byte	.LFE0
 4173 0135 0400     		.2byte	0x4
 4174 0137 F3       		.byte	0xf3
 4175 0138 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 124


 4176 0139 51       		.byte	0x51
 4177 013a 9F       		.byte	0x9f
 4178 013b 00000000 		.4byte	0
 4179 013f 00000000 		.4byte	0
 4180              	.LLST8:
 4181 0143 0E000000 		.4byte	.LVL25
 4182 0147 12000000 		.4byte	.LVL26
 4183 014b 0100     		.2byte	0x1
 4184 014d 51       		.byte	0x51
 4185 014e 12000000 		.4byte	.LVL26
 4186 0152 1C000000 		.4byte	.LVL28
 4187 0156 0100     		.2byte	0x1
 4188 0158 53       		.byte	0x53
 4189 0159 1C000000 		.4byte	.LVL28
 4190 015d 20000000 		.4byte	.LVL29
 4191 0161 0200     		.2byte	0x2
 4192 0163 72       		.byte	0x72
 4193 0164 00       		.sleb128 0
 4194 0165 20000000 		.4byte	.LVL29
 4195 0169 26000000 		.4byte	.LVL30
 4196 016d 0500     		.2byte	0x5
 4197 016f 0C       		.byte	0xc
 4198 0170 10000140 		.4byte	0x40010010
 4199 0174 00000000 		.4byte	0
 4200 0178 00000000 		.4byte	0
 4201              	.LLST9:
 4202 017c 00000000 		.4byte	.LVL31
 4203 0180 04000000 		.4byte	.LVL32
 4204 0184 0100     		.2byte	0x1
 4205 0186 50       		.byte	0x50
 4206 0187 04000000 		.4byte	.LVL32
 4207 018b 09000000 		.4byte	.LVL34-1
 4208 018f 0300     		.2byte	0x3
 4209 0191 70       		.byte	0x70
 4210 0192 77       		.sleb128 -9
 4211 0193 9F       		.byte	0x9f
 4212 0194 09000000 		.4byte	.LVL34-1
 4213 0198 1A000000 		.4byte	.LVL37
 4214 019c 0300     		.2byte	0x3
 4215 019e 74       		.byte	0x74
 4216 019f 77       		.sleb128 -9
 4217 01a0 9F       		.byte	0x9f
 4218 01a1 1A000000 		.4byte	.LVL37
 4219 01a5 40000000 		.4byte	.LFE4
 4220 01a9 0400     		.2byte	0x4
 4221 01ab F3       		.byte	0xf3
 4222 01ac 01       		.uleb128 0x1
 4223 01ad 50       		.byte	0x50
 4224 01ae 9F       		.byte	0x9f
 4225 01af 00000000 		.4byte	0
 4226 01b3 00000000 		.4byte	0
 4227              	.LLST10:
 4228 01b7 0A000000 		.4byte	.LVL34
 4229 01bb 2B000000 		.4byte	.LVL39-1
 4230 01bf 0100     		.2byte	0x1
 4231 01c1 50       		.byte	0x50
 4232 01c2 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 125


 4233 01c6 00000000 		.4byte	0
 4234              	.LLST11:
 4235 01ca 0E000000 		.4byte	.LVL35
 4236 01ce 26000000 		.4byte	.LVL38
 4237 01d2 0100     		.2byte	0x1
 4238 01d4 51       		.byte	0x51
 4239 01d5 26000000 		.4byte	.LVL38
 4240 01d9 2B000000 		.4byte	.LVL39-1
 4241 01dd 0100     		.2byte	0x1
 4242 01df 53       		.byte	0x53
 4243 01e0 00000000 		.4byte	0
 4244 01e4 00000000 		.4byte	0
 4245              	.LLST12:
 4246 01e8 06000000 		.4byte	.LVL33
 4247 01ec 09000000 		.4byte	.LVL34-1
 4248 01f0 0100     		.2byte	0x1
 4249 01f2 50       		.byte	0x50
 4250 01f3 09000000 		.4byte	.LVL34-1
 4251 01f7 1A000000 		.4byte	.LVL37
 4252 01fb 0100     		.2byte	0x1
 4253 01fd 54       		.byte	0x54
 4254 01fe 1A000000 		.4byte	.LVL37
 4255 0202 40000000 		.4byte	.LFE4
 4256 0206 0600     		.2byte	0x6
 4257 0208 F3       		.byte	0xf3
 4258 0209 01       		.uleb128 0x1
 4259 020a 50       		.byte	0x50
 4260 020b 23       		.byte	0x23
 4261 020c 09       		.uleb128 0x9
 4262 020d 9F       		.byte	0x9f
 4263 020e 00000000 		.4byte	0
 4264 0212 00000000 		.4byte	0
 4265              	.LLST13:
 4266 0216 12000000 		.4byte	.LVL41
 4267 021a 25000000 		.4byte	.LVL46-1
 4268 021e 0100     		.2byte	0x1
 4269 0220 51       		.byte	0x51
 4270 0221 00000000 		.4byte	0
 4271 0225 00000000 		.4byte	0
 4272              	.LLST14:
 4273 0229 14000000 		.4byte	.LVL42
 4274 022d 25000000 		.4byte	.LVL46-1
 4275 0231 0100     		.2byte	0x1
 4276 0233 50       		.byte	0x50
 4277 0234 00000000 		.4byte	0
 4278 0238 00000000 		.4byte	0
 4279              	.LLST16:
 4280 023c 10000000 		.4byte	.LVL40
 4281 0240 16000000 		.4byte	.LVL43
 4282 0244 0100     		.2byte	0x1
 4283 0246 53       		.byte	0x53
 4284 0247 00000000 		.4byte	0
 4285 024b 00000000 		.4byte	0
 4286              	.LLST17:
 4287 024f 08000000 		.4byte	.LVL49
 4288 0253 80000000 		.4byte	.LVL65
 4289 0257 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 126


 4290 0259 54       		.byte	0x54
 4291 025a 00000000 		.4byte	0
 4292 025e 00000000 		.4byte	0
 4293              	.LLST18:
 4294 0262 34000000 		.4byte	.LVL51
 4295 0266 5E000000 		.4byte	.LVL60
 4296 026a 0100     		.2byte	0x1
 4297 026c 55       		.byte	0x55
 4298 026d 5E000000 		.4byte	.LVL60
 4299 0271 68000000 		.4byte	.LVL61
 4300 0275 0200     		.2byte	0x2
 4301 0277 76       		.byte	0x76
 4302 0278 00       		.sleb128 0
 4303 0279 00000000 		.4byte	0
 4304 027d 00000000 		.4byte	0
 4305              	.LLST19:
 4306 0281 42000000 		.4byte	.LVL53
 4307 0285 46000000 		.4byte	.LVL55
 4308 0289 0100     		.2byte	0x1
 4309 028b 53       		.byte	0x53
 4310 028c 46000000 		.4byte	.LVL55
 4311 0290 5C000000 		.4byte	.LVL59
 4312 0294 0200     		.2byte	0x2
 4313 0296 76       		.byte	0x76
 4314 0297 00       		.sleb128 0
 4315 0298 5C000000 		.4byte	.LVL59
 4316 029c 5E000000 		.4byte	.LVL60
 4317 02a0 1000     		.2byte	0x10
 4318 02a2 75       		.byte	0x75
 4319 02a3 00       		.sleb128 0
 4320 02a4 11       		.byte	0x11
 4321 02a5 80D0FFFF 		.sleb128 -1073747968
 4321      7B
 4322 02aa 1A       		.byte	0x1a
 4323 02ab 0C       		.byte	0xc
 4324 02ac F0060040 		.4byte	0x400006f0
 4325 02b0 21       		.byte	0x21
 4326 02b1 9F       		.byte	0x9f
 4327 02b2 5E000000 		.4byte	.LVL60
 4328 02b6 68000000 		.4byte	.LVL61
 4329 02ba 1100     		.2byte	0x11
 4330 02bc 76       		.byte	0x76
 4331 02bd 00       		.sleb128 0
 4332 02be 06       		.byte	0x6
 4333 02bf 11       		.byte	0x11
 4334 02c0 80D0FFFF 		.sleb128 -1073747968
 4334      7B
 4335 02c5 1A       		.byte	0x1a
 4336 02c6 0C       		.byte	0xc
 4337 02c7 F0060040 		.4byte	0x400006f0
 4338 02cb 21       		.byte	0x21
 4339 02cc 9F       		.byte	0x9f
 4340 02cd 00000000 		.4byte	0
 4341 02d1 00000000 		.4byte	0
 4342              	.LLST20:
 4343 02d5 44000000 		.4byte	.LVL54
 4344 02d9 4A000000 		.4byte	.LVL56
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 127


 4345 02dd 0400     		.2byte	0x4
 4346 02df 0A       		.byte	0xa
 4347 02e0 8070     		.2byte	0x7080
 4348 02e2 9F       		.byte	0x9f
 4349 02e3 4A000000 		.4byte	.LVL56
 4350 02e7 5A000000 		.4byte	.LVL58
 4351 02eb 0100     		.2byte	0x1
 4352 02ed 53       		.byte	0x53
 4353 02ee 00000000 		.4byte	0
 4354 02f2 00000000 		.4byte	0
 4355              	.LLST21:
 4356 02f6 00000000 		.4byte	.LVL67
 4357 02fa 0B000000 		.4byte	.LVL70-1
 4358 02fe 0100     		.2byte	0x1
 4359 0300 50       		.byte	0x50
 4360 0301 0B000000 		.4byte	.LVL70-1
 4361 0305 32000000 		.4byte	.LVL77
 4362 0309 0100     		.2byte	0x1
 4363 030b 54       		.byte	0x54
 4364 030c 32000000 		.4byte	.LVL77
 4365 0310 34000000 		.4byte	.LFE14
 4366 0314 0400     		.2byte	0x4
 4367 0316 F3       		.byte	0xf3
 4368 0317 01       		.uleb128 0x1
 4369 0318 50       		.byte	0x50
 4370 0319 9F       		.byte	0x9f
 4371 031a 00000000 		.4byte	0
 4372 031e 00000000 		.4byte	0
 4373              	.LLST22:
 4374 0322 10000000 		.4byte	.LVL71
 4375 0326 16000000 		.4byte	.LVL72
 4376 032a 0100     		.2byte	0x1
 4377 032c 53       		.byte	0x53
 4378 032d 18000000 		.4byte	.LVL73
 4379 0331 1E000000 		.4byte	.LVL74
 4380 0335 0100     		.2byte	0x1
 4381 0337 52       		.byte	0x52
 4382 0338 1E000000 		.4byte	.LVL74
 4383 033c 31000000 		.4byte	.LVL76-1
 4384 0340 0100     		.2byte	0x1
 4385 0342 53       		.byte	0x53
 4386 0343 00000000 		.4byte	0
 4387 0347 00000000 		.4byte	0
 4388              	.LLST23:
 4389 034b 0C000000 		.4byte	.LVL70
 4390 034f 31000000 		.4byte	.LVL76-1
 4391 0353 0100     		.2byte	0x1
 4392 0355 50       		.byte	0x50
 4393 0356 00000000 		.4byte	0
 4394 035a 00000000 		.4byte	0
 4395              	.LLST24:
 4396 035e 06000000 		.4byte	.LVL68
 4397 0362 32000000 		.4byte	.LVL78
 4398 0366 0100     		.2byte	0x1
 4399 0368 55       		.byte	0x55
 4400 0369 00000000 		.4byte	0
 4401 036d 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 128


 4402              	.LLST25:
 4403 0371 08000000 		.4byte	.LVL69
 4404 0375 20000000 		.4byte	.LVL75
 4405 0379 0100     		.2byte	0x1
 4406 037b 56       		.byte	0x56
 4407 037c 00000000 		.4byte	0
 4408 0380 00000000 		.4byte	0
 4409              	.LLST26:
 4410 0384 10000000 		.4byte	.LVL79
 4411 0388 31000000 		.4byte	.LVL80-1
 4412 038c 0100     		.2byte	0x1
 4413 038e 50       		.byte	0x50
 4414 038f 00000000 		.4byte	0
 4415 0393 00000000 		.4byte	0
 4416              	.LLST27:
 4417 0397 00000000 		.4byte	.LVL84
 4418 039b 06000000 		.4byte	.LVL85
 4419 039f 0100     		.2byte	0x1
 4420 03a1 50       		.byte	0x50
 4421 03a2 06000000 		.4byte	.LVL85
 4422 03a6 24000000 		.4byte	.LFE12
 4423 03aa 0400     		.2byte	0x4
 4424 03ac F3       		.byte	0xf3
 4425 03ad 01       		.uleb128 0x1
 4426 03ae 50       		.byte	0x50
 4427 03af 9F       		.byte	0x9f
 4428 03b0 00000000 		.4byte	0
 4429 03b4 00000000 		.4byte	0
 4430              	.LLST28:
 4431 03b8 00000000 		.4byte	.LVL84
 4432 03bc 0E000000 		.4byte	.LVL86
 4433 03c0 0100     		.2byte	0x1
 4434 03c2 51       		.byte	0x51
 4435 03c3 0E000000 		.4byte	.LVL86
 4436 03c7 24000000 		.4byte	.LFE12
 4437 03cb 0400     		.2byte	0x4
 4438 03cd F3       		.byte	0xf3
 4439 03ce 01       		.uleb128 0x1
 4440 03cf 51       		.byte	0x51
 4441 03d0 9F       		.byte	0x9f
 4442 03d1 00000000 		.4byte	0
 4443 03d5 00000000 		.4byte	0
 4444              	.LLST29:
 4445 03d9 00000000 		.4byte	.LVL88
 4446 03dd 06000000 		.4byte	.LVL89
 4447 03e1 0100     		.2byte	0x1
 4448 03e3 50       		.byte	0x50
 4449 03e4 06000000 		.4byte	.LVL89
 4450 03e8 3E000000 		.4byte	.LVL97
 4451 03ec 0100     		.2byte	0x1
 4452 03ee 54       		.byte	0x54
 4453 03ef 3E000000 		.4byte	.LVL97
 4454 03f3 40000000 		.4byte	.LFE15
 4455 03f7 0400     		.2byte	0x4
 4456 03f9 F3       		.byte	0xf3
 4457 03fa 01       		.uleb128 0x1
 4458 03fb 50       		.byte	0x50
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 129


 4459 03fc 9F       		.byte	0x9f
 4460 03fd 00000000 		.4byte	0
 4461 0401 00000000 		.4byte	0
 4462              	.LLST30:
 4463 0405 06000000 		.4byte	.LVL89
 4464 0409 17000000 		.4byte	.LVL91-1
 4465 040d 0100     		.2byte	0x1
 4466 040f 50       		.byte	0x50
 4467 0410 00000000 		.4byte	0
 4468 0414 00000000 		.4byte	0
 4469              	.LLST31:
 4470 0418 1C000000 		.4byte	.LVL92
 4471 041c 22000000 		.4byte	.LVL93
 4472 0420 0100     		.2byte	0x1
 4473 0422 53       		.byte	0x53
 4474 0423 24000000 		.4byte	.LVL94
 4475 0427 2A000000 		.4byte	.LVL95
 4476 042b 0100     		.2byte	0x1
 4477 042d 52       		.byte	0x52
 4478 042e 2A000000 		.4byte	.LVL95
 4479 0432 2F000000 		.4byte	.LVL96-1
 4480 0436 0100     		.2byte	0x1
 4481 0438 53       		.byte	0x53
 4482 0439 00000000 		.4byte	0
 4483 043d 00000000 		.4byte	0
 4484              	.LLST32:
 4485 0441 08000000 		.4byte	.LVL90
 4486 0445 3E000000 		.4byte	.LVL98
 4487 0449 0100     		.2byte	0x1
 4488 044b 55       		.byte	0x55
 4489 044c 00000000 		.4byte	0
 4490 0450 00000000 		.4byte	0
 4491              	.LLST33:
 4492 0454 18000000 		.4byte	.LVL91
 4493 0458 2F000000 		.4byte	.LVL96-1
 4494 045c 0100     		.2byte	0x1
 4495 045e 50       		.byte	0x50
 4496 045f 00000000 		.4byte	0
 4497 0463 00000000 		.4byte	0
 4498              	.LLST34:
 4499 0467 00000000 		.4byte	.LVL100
 4500 046b 10000000 		.4byte	.LVL102
 4501 046f 0100     		.2byte	0x1
 4502 0471 50       		.byte	0x50
 4503 0472 10000000 		.4byte	.LVL102
 4504 0476 58000000 		.4byte	.LFE7
 4505 047a 0400     		.2byte	0x4
 4506 047c F3       		.byte	0xf3
 4507 047d 01       		.uleb128 0x1
 4508 047e 50       		.byte	0x50
 4509 047f 9F       		.byte	0x9f
 4510 0480 00000000 		.4byte	0
 4511 0484 00000000 		.4byte	0
 4512              	.LLST35:
 4513 0488 0E000000 		.4byte	.LVL101
 4514 048c 44000000 		.4byte	.LVL107
 4515 0490 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 130


 4516 0492 55       		.byte	0x55
 4517 0493 44000000 		.4byte	.LVL107
 4518 0497 44000000 		.4byte	.LVL108
 4519 049b 0B00     		.2byte	0xb
 4520 049d 77       		.byte	0x77
 4521 049e 00       		.sleb128 0
 4522 049f F3       		.byte	0xf3
 4523 04a0 01       		.uleb128 0x1
 4524 04a1 50       		.byte	0x50
 4525 04a2 1E       		.byte	0x1e
 4526 04a3 76       		.byte	0x76
 4527 04a4 00       		.sleb128 0
 4528 04a5 22       		.byte	0x22
 4529 04a6 23       		.byte	0x23
 4530 04a7 04       		.uleb128 0x4
 4531 04a8 00000000 		.4byte	0
 4532 04ac 00000000 		.4byte	0
 4533              	.LLST36:
 4534 04b0 00000000 		.4byte	.LVL110
 4535 04b4 27000000 		.4byte	.LVL113-1
 4536 04b8 0100     		.2byte	0x1
 4537 04ba 50       		.byte	0x50
 4538 04bb 27000000 		.4byte	.LVL113-1
 4539 04bf 6C000000 		.4byte	.LFE8
 4540 04c3 0400     		.2byte	0x4
 4541 04c5 F3       		.byte	0xf3
 4542 04c6 01       		.uleb128 0x1
 4543 04c7 50       		.byte	0x50
 4544 04c8 9F       		.byte	0x9f
 4545 04c9 00000000 		.4byte	0
 4546 04cd 00000000 		.4byte	0
 4547              	.LLST37:
 4548 04d1 00000000 		.4byte	.LVL110
 4549 04d5 0E000000 		.4byte	.LVL112
 4550 04d9 0100     		.2byte	0x1
 4551 04db 51       		.byte	0x51
 4552 04dc 0E000000 		.4byte	.LVL112
 4553 04e0 6C000000 		.4byte	.LFE8
 4554 04e4 0400     		.2byte	0x4
 4555 04e6 F3       		.byte	0xf3
 4556 04e7 01       		.uleb128 0x1
 4557 04e8 51       		.byte	0x51
 4558 04e9 9F       		.byte	0x9f
 4559 04ea 00000000 		.4byte	0
 4560 04ee 00000000 		.4byte	0
 4561              	.LLST38:
 4562 04f2 0C000000 		.4byte	.LVL111
 4563 04f6 52000000 		.4byte	.LVL117
 4564 04fa 0100     		.2byte	0x1
 4565 04fc 55       		.byte	0x55
 4566 04fd 00000000 		.4byte	0
 4567 0501 00000000 		.4byte	0
 4568              	.LLST39:
 4569 0505 00000000 		.4byte	.LVL118
 4570 0509 06000000 		.4byte	.LVL119
 4571 050d 0100     		.2byte	0x1
 4572 050f 50       		.byte	0x50
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 131


 4573 0510 06000000 		.4byte	.LVL119
 4574 0514 24000000 		.4byte	.LFE13
 4575 0518 0400     		.2byte	0x4
 4576 051a F3       		.byte	0xf3
 4577 051b 01       		.uleb128 0x1
 4578 051c 50       		.byte	0x50
 4579 051d 9F       		.byte	0x9f
 4580 051e 00000000 		.4byte	0
 4581 0522 00000000 		.4byte	0
 4582              	.LLST40:
 4583 0526 00000000 		.4byte	.LVL118
 4584 052a 0E000000 		.4byte	.LVL120
 4585 052e 0100     		.2byte	0x1
 4586 0530 51       		.byte	0x51
 4587 0531 0E000000 		.4byte	.LVL120
 4588 0535 24000000 		.4byte	.LFE13
 4589 0539 0400     		.2byte	0x4
 4590 053b F3       		.byte	0xf3
 4591 053c 01       		.uleb128 0x1
 4592 053d 51       		.byte	0x51
 4593 053e 9F       		.byte	0x9f
 4594 053f 00000000 		.4byte	0
 4595 0543 00000000 		.4byte	0
 4596              	.LLST41:
 4597 0547 00000000 		.4byte	.LVL122
 4598 054b 24000000 		.4byte	.LVL128
 4599 054f 0100     		.2byte	0x1
 4600 0551 50       		.byte	0x50
 4601 0552 24000000 		.4byte	.LVL128
 4602 0556 C8000000 		.4byte	.LVL145
 4603 055a 0100     		.2byte	0x1
 4604 055c 57       		.byte	0x57
 4605 055d C8000000 		.4byte	.LVL145
 4606 0561 F0000000 		.4byte	.LFE19
 4607 0565 0400     		.2byte	0x4
 4608 0567 F3       		.byte	0xf3
 4609 0568 01       		.uleb128 0x1
 4610 0569 50       		.byte	0x50
 4611 056a 9F       		.byte	0x9f
 4612 056b 00000000 		.4byte	0
 4613 056f 00000000 		.4byte	0
 4614              	.LLST42:
 4615 0573 00000000 		.4byte	.LVL122
 4616 0577 14000000 		.4byte	.LVL125
 4617 057b 0100     		.2byte	0x1
 4618 057d 51       		.byte	0x51
 4619 057e 14000000 		.4byte	.LVL125
 4620 0582 C8000000 		.4byte	.LVL144
 4621 0586 0100     		.2byte	0x1
 4622 0588 56       		.byte	0x56
 4623 0589 C8000000 		.4byte	.LVL144
 4624 058d F0000000 		.4byte	.LFE19
 4625 0591 0400     		.2byte	0x4
 4626 0593 F3       		.byte	0xf3
 4627 0594 01       		.uleb128 0x1
 4628 0595 51       		.byte	0x51
 4629 0596 9F       		.byte	0x9f
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 132


 4630 0597 00000000 		.4byte	0
 4631 059b 00000000 		.4byte	0
 4632              	.LLST43:
 4633 059f 00000000 		.4byte	.LVL122
 4634 05a3 10000000 		.4byte	.LVL124
 4635 05a7 0100     		.2byte	0x1
 4636 05a9 52       		.byte	0x52
 4637 05aa 10000000 		.4byte	.LVL124
 4638 05ae C8000000 		.4byte	.LVL146
 4639 05b2 0100     		.2byte	0x1
 4640 05b4 58       		.byte	0x58
 4641 05b5 C8000000 		.4byte	.LVL146
 4642 05b9 F0000000 		.4byte	.LFE19
 4643 05bd 0400     		.2byte	0x4
 4644 05bf F3       		.byte	0xf3
 4645 05c0 01       		.uleb128 0x1
 4646 05c1 52       		.byte	0x52
 4647 05c2 9F       		.byte	0x9f
 4648 05c3 00000000 		.4byte	0
 4649 05c7 00000000 		.4byte	0
 4650              	.LLST44:
 4651 05cb 0E000000 		.4byte	.LVL123
 4652 05cf 3A000000 		.4byte	.LVL131
 4653 05d3 0400     		.2byte	0x4
 4654 05d5 0A       		.byte	0xa
 4655 05d6 0001     		.2byte	0x100
 4656 05d8 9F       		.byte	0x9f
 4657 05d9 3A000000 		.4byte	.LVL131
 4658 05dd C8000000 		.4byte	.LVL143
 4659 05e1 0100     		.2byte	0x1
 4660 05e3 55       		.byte	0x55
 4661 05e4 00000000 		.4byte	0
 4662 05e8 00000000 		.4byte	0
 4663              	.LLST45:
 4664 05ec 56000000 		.4byte	.LVL134
 4665 05f0 5C000000 		.4byte	.LVL135
 4666 05f4 0400     		.2byte	0x4
 4667 05f6 0A       		.byte	0xa
 4668 05f7 8070     		.2byte	0x7080
 4669 05f9 9F       		.byte	0x9f
 4670 05fa 5C000000 		.4byte	.LVL135
 4671 05fe 6C000000 		.4byte	.LVL137
 4672 0602 0100     		.2byte	0x1
 4673 0604 53       		.byte	0x53
 4674 0605 00000000 		.4byte	0
 4675 0609 00000000 		.4byte	0
 4676              	.LLST46:
 4677 060d 0E000000 		.4byte	.LVL123
 4678 0611 3A000000 		.4byte	.LVL131
 4679 0615 0200     		.2byte	0x2
 4680 0617 30       		.byte	0x30
 4681 0618 9F       		.byte	0x9f
 4682 0619 3A000000 		.4byte	.LVL131
 4683 061d C8000000 		.4byte	.LVL142
 4684 0621 0100     		.2byte	0x1
 4685 0623 54       		.byte	0x54
 4686 0624 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 133


 4687 0628 00000000 		.4byte	0
 4688              	.LLST47:
 4689 062c 1E000000 		.4byte	.LVL126
 4690 0630 20000000 		.4byte	.LVL127
 4691 0634 0100     		.2byte	0x1
 4692 0636 53       		.byte	0x53
 4693 0637 20000000 		.4byte	.LVL127
 4694 063b F0000000 		.4byte	.LFE19
 4695 063f 0200     		.2byte	0x2
 4696 0641 91       		.byte	0x91
 4697 0642 64       		.sleb128 -28
 4698 0643 00000000 		.4byte	0
 4699 0647 00000000 		.4byte	0
 4700              	.LLST48:
 4701 064b 00000000 		.4byte	.LVL147
 4702 064f 20000000 		.4byte	.LVL150
 4703 0653 0100     		.2byte	0x1
 4704 0655 50       		.byte	0x50
 4705 0656 20000000 		.4byte	.LVL150
 4706 065a F0000000 		.4byte	.LVL165
 4707 065e 0100     		.2byte	0x1
 4708 0660 54       		.byte	0x54
 4709 0661 F0000000 		.4byte	.LVL165
 4710 0665 10010000 		.4byte	.LFE20
 4711 0669 0400     		.2byte	0x4
 4712 066b F3       		.byte	0xf3
 4713 066c 01       		.uleb128 0x1
 4714 066d 50       		.byte	0x50
 4715 066e 9F       		.byte	0x9f
 4716 066f 00000000 		.4byte	0
 4717 0673 00000000 		.4byte	0
 4718              	.LLST49:
 4719 0677 00000000 		.4byte	.LVL147
 4720 067b 28000000 		.4byte	.LVL153
 4721 067f 0100     		.2byte	0x1
 4722 0681 51       		.byte	0x51
 4723 0682 28000000 		.4byte	.LVL153
 4724 0686 F0000000 		.4byte	.LVL168
 4725 068a 0100     		.2byte	0x1
 4726 068c 59       		.byte	0x59
 4727 068d F0000000 		.4byte	.LVL168
 4728 0691 10010000 		.4byte	.LFE20
 4729 0695 0400     		.2byte	0x4
 4730 0697 F3       		.byte	0xf3
 4731 0698 01       		.uleb128 0x1
 4732 0699 51       		.byte	0x51
 4733 069a 9F       		.byte	0x9f
 4734 069b 00000000 		.4byte	0
 4735 069f 00000000 		.4byte	0
 4736              	.LLST50:
 4737 06a3 24000000 		.4byte	.LVL151
 4738 06a7 26000000 		.4byte	.LVL152
 4739 06ab 0100     		.2byte	0x1
 4740 06ad 50       		.byte	0x50
 4741 06ae 26000000 		.4byte	.LVL152
 4742 06b2 2B000000 		.4byte	.LVL154-1
 4743 06b6 0800     		.2byte	0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 134


 4744 06b8 75       		.byte	0x75
 4745 06b9 00       		.sleb128 0
 4746 06ba 73       		.byte	0x73
 4747 06bb 00       		.sleb128 0
 4748 06bc 24       		.byte	0x24
 4749 06bd 31       		.byte	0x31
 4750 06be 1C       		.byte	0x1c
 4751 06bf 9F       		.byte	0x9f
 4752 06c0 2E000000 		.4byte	.LVL155
 4753 06c4 36000000 		.4byte	.LVL156
 4754 06c8 0100     		.2byte	0x1
 4755 06ca 50       		.byte	0x50
 4756 06cb 36000000 		.4byte	.LVL156
 4757 06cf 10010000 		.4byte	.LFE20
 4758 06d3 0200     		.2byte	0x2
 4759 06d5 91       		.byte	0x91
 4760 06d6 5C       		.sleb128 -36
 4761 06d7 00000000 		.4byte	0
 4762 06db 00000000 		.4byte	0
 4763              	.LLST51:
 4764 06df 0C000000 		.4byte	.LVL148
 4765 06e3 4E000000 		.4byte	.LVL159
 4766 06e7 0200     		.2byte	0x2
 4767 06e9 30       		.byte	0x30
 4768 06ea 9F       		.byte	0x9f
 4769 06eb 4E000000 		.4byte	.LVL159
 4770 06ef F0000000 		.4byte	.LVL166
 4771 06f3 0100     		.2byte	0x1
 4772 06f5 55       		.byte	0x55
 4773 06f6 F0000000 		.4byte	.LVL166
 4774 06fa 10010000 		.4byte	.LFE20
 4775 06fe 0100     		.2byte	0x1
 4776 0700 50       		.byte	0x50
 4777 0701 00000000 		.4byte	0
 4778 0705 00000000 		.4byte	0
 4779              	.LLST52:
 4780 0709 16000000 		.4byte	.LVL149
 4781 070d F0000000 		.4byte	.LVL167
 4782 0711 0100     		.2byte	0x1
 4783 0713 57       		.byte	0x57
 4784 0714 00000000 		.4byte	0
 4785 0718 00000000 		.4byte	0
 4786              	.LLST53:
 4787 071c 3E000000 		.4byte	.LVL158
 4788 0720 8A000000 		.4byte	.LVL163
 4789 0724 0100     		.2byte	0x1
 4790 0726 56       		.byte	0x56
 4791 0727 8A000000 		.4byte	.LVL163
 4792 072b F0000000 		.4byte	.LVL167
 4793 072f 0300     		.2byte	0x3
 4794 0731 77       		.byte	0x77
 4795 0732 09       		.sleb128 9
 4796 0733 9F       		.byte	0x9f
 4797 0734 00000000 		.4byte	0
 4798 0738 00000000 		.4byte	0
 4799              		.section	.debug_aranges,"",%progbits
 4800 0000 BC000000 		.4byte	0xbc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 135


 4801 0004 0200     		.2byte	0x2
 4802 0006 00000000 		.4byte	.Ldebug_info0
 4803 000a 04       		.byte	0x4
 4804 000b 00       		.byte	0
 4805 000c 0000     		.2byte	0
 4806 000e 0000     		.2byte	0
 4807 0010 00000000 		.4byte	.LFB1
 4808 0014 10000000 		.4byte	.LFE1-.LFB1
 4809 0018 00000000 		.4byte	.LFB16
 4810 001c 1C000000 		.4byte	.LFE16-.LFB16
 4811 0020 00000000 		.4byte	.LFB17
 4812 0024 10000000 		.4byte	.LFE17-.LFB17
 4813 0028 00000000 		.4byte	.LFB18
 4814 002c 42000000 		.4byte	.LFE18-.LFB18
 4815 0030 00000000 		.4byte	.LFB0
 4816 0034 1C000000 		.4byte	.LFE0-.LFB0
 4817 0038 00000000 		.4byte	.LFB2
 4818 003c 3C000000 		.4byte	.LFE2-.LFB2
 4819 0040 00000000 		.4byte	.LFB4
 4820 0044 40000000 		.4byte	.LFE4-.LFB4
 4821 0048 00000000 		.4byte	.LFB5
 4822 004c 30000000 		.4byte	.LFE5-.LFB5
 4823 0050 00000000 		.4byte	.LFB6
 4824 0054 14000000 		.4byte	.LFE6-.LFB6
 4825 0058 00000000 		.4byte	.LFB9
 4826 005c B0000000 		.4byte	.LFE9-.LFB9
 4827 0060 00000000 		.4byte	.LFB10
 4828 0064 1C000000 		.4byte	.LFE10-.LFB10
 4829 0068 00000000 		.4byte	.LFB14
 4830 006c 34000000 		.4byte	.LFE14-.LFB14
 4831 0070 00000000 		.4byte	.LFB11
 4832 0074 70000000 		.4byte	.LFE11-.LFB11
 4833 0078 00000000 		.4byte	.LFB12
 4834 007c 24000000 		.4byte	.LFE12-.LFB12
 4835 0080 00000000 		.4byte	.LFB15
 4836 0084 40000000 		.4byte	.LFE15-.LFB15
 4837 0088 00000000 		.4byte	.LFB3
 4838 008c 24000000 		.4byte	.LFE3-.LFB3
 4839 0090 00000000 		.4byte	.LFB7
 4840 0094 58000000 		.4byte	.LFE7-.LFB7
 4841 0098 00000000 		.4byte	.LFB8
 4842 009c 6C000000 		.4byte	.LFE8-.LFB8
 4843 00a0 00000000 		.4byte	.LFB13
 4844 00a4 24000000 		.4byte	.LFE13-.LFB13
 4845 00a8 00000000 		.4byte	.LFB19
 4846 00ac F0000000 		.4byte	.LFE19-.LFB19
 4847 00b0 00000000 		.4byte	.LFB20
 4848 00b4 10010000 		.4byte	.LFE20-.LFB20
 4849 00b8 00000000 		.4byte	0
 4850 00bc 00000000 		.4byte	0
 4851              		.section	.debug_ranges,"",%progbits
 4852              	.Ldebug_ranges0:
 4853 0000 00000000 		.4byte	.LFB1
 4854 0004 10000000 		.4byte	.LFE1
 4855 0008 00000000 		.4byte	.LFB16
 4856 000c 1C000000 		.4byte	.LFE16
 4857 0010 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 136


 4858 0014 10000000 		.4byte	.LFE17
 4859 0018 00000000 		.4byte	.LFB18
 4860 001c 42000000 		.4byte	.LFE18
 4861 0020 00000000 		.4byte	.LFB0
 4862 0024 1C000000 		.4byte	.LFE0
 4863 0028 00000000 		.4byte	.LFB2
 4864 002c 3C000000 		.4byte	.LFE2
 4865 0030 00000000 		.4byte	.LFB4
 4866 0034 40000000 		.4byte	.LFE4
 4867 0038 00000000 		.4byte	.LFB5
 4868 003c 30000000 		.4byte	.LFE5
 4869 0040 00000000 		.4byte	.LFB6
 4870 0044 14000000 		.4byte	.LFE6
 4871 0048 00000000 		.4byte	.LFB9
 4872 004c B0000000 		.4byte	.LFE9
 4873 0050 00000000 		.4byte	.LFB10
 4874 0054 1C000000 		.4byte	.LFE10
 4875 0058 00000000 		.4byte	.LFB14
 4876 005c 34000000 		.4byte	.LFE14
 4877 0060 00000000 		.4byte	.LFB11
 4878 0064 70000000 		.4byte	.LFE11
 4879 0068 00000000 		.4byte	.LFB12
 4880 006c 24000000 		.4byte	.LFE12
 4881 0070 00000000 		.4byte	.LFB15
 4882 0074 40000000 		.4byte	.LFE15
 4883 0078 00000000 		.4byte	.LFB3
 4884 007c 24000000 		.4byte	.LFE3
 4885 0080 00000000 		.4byte	.LFB7
 4886 0084 58000000 		.4byte	.LFE7
 4887 0088 00000000 		.4byte	.LFB8
 4888 008c 6C000000 		.4byte	.LFE8
 4889 0090 00000000 		.4byte	.LFB13
 4890 0094 24000000 		.4byte	.LFE13
 4891 0098 00000000 		.4byte	.LFB19
 4892 009c F0000000 		.4byte	.LFE19
 4893 00a0 00000000 		.4byte	.LFB20
 4894 00a4 10010000 		.4byte	.LFE20
 4895 00a8 00000000 		.4byte	0
 4896 00ac 00000000 		.4byte	0
 4897              		.section	.debug_line,"",%progbits
 4898              	.Ldebug_line0:
 4899 0000 91030000 		.section	.debug_str,"MS",%progbits,1
 4899      0200E200 
 4899      00000201 
 4899      FB0E0D00 
 4899      01010101 
 4900              	.LASF102:
 4901 0000 43617053 		.ascii	"CapSense_1_SsCSDConfigIDACs\000"
 4901      656E7365 
 4901      5F315F53 
 4901      73435344 
 4901      436F6E66 
 4902              	.LASF147:
 4903 001c 72617744 		.ascii	"rawData0\000"
 4903      61746130 
 4903      00
 4904              	.LASF129:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 137


 4905 0025 736E7341 		.ascii	"snsAddrPtr\000"
 4905      64647250 
 4905      747200
 4906              	.LASF98:
 4907 0030 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4907      656E7365 
 4907      5F315F46 
 4907      4C415348 
 4907      5F57445F 
 4908              	.LASF155:
 4909 004b 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4909      656E7365 
 4909      5F315F63 
 4909      75725261 
 4909      6D536E73 
 4910              	.LASF70:
 4911 0063 736E7254 		.ascii	"snrTestWidgetId\000"
 4911      65737457 
 4911      69646765 
 4911      74496400 
 4912              	.LASF116:
 4913 0073 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 4913      656E7365 
 4913      5F315F53 
 4913      73435344 
 4913      53657455 
 4914              	.LASF8:
 4915 008e 756E7369 		.ascii	"unsigned int\000"
 4915      676E6564 
 4915      20696E74 
 4915      00
 4916              	.LASF61:
 4917 009b 7363616E 		.ascii	"scanCounter\000"
 4917      436F756E 
 4917      74657200 
 4918              	.LASF113:
 4919 00a7 43617053 		.ascii	"CapSense_1_SsCSDSetModeSnsClockDivider\000"
 4919      656E7365 
 4919      5F315F53 
 4919      73435344 
 4919      5365744D 
 4920              	.LASF59:
 4921 00ce 6877436C 		.ascii	"hwClock\000"
 4921      6F636B00 
 4922              	.LASF157:
 4923 00d6 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4923      656E7365 
 4923      5F315F63 
 4923      7572536E 
 4923      73494F50 
 4924              	.LASF117:
 4925 00ed 696E7465 		.ascii	"interruptState\000"
 4925      72727570 
 4925      74537461 
 4925      746500
 4926              	.LASF140:
 4927 00fc 43617053 		.ascii	"CapSense_1_CSDSetupWidgetExt\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 138


 4927      656E7365 
 4927      5F315F43 
 4927      53445365 
 4927      74757057 
 4928              	.LASF128:
 4929 0119 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4929      656E7365 
 4929      5F315F43 
 4929      5344436F 
 4929      6E6E6563 
 4930              	.LASF132:
 4931 0132 70696E48 		.ascii	"pinHSIOMShift\000"
 4931      53494F4D 
 4931      53686966 
 4931      7400
 4932              	.LASF138:
 4933 0140 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4933      656E7365 
 4933      5F315F53 
 4933      73435344 
 4933      456C6563 
 4934              	.LASF134:
 4935 015f 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 4935      656E7365 
 4935      5F315F53 
 4935      73435344 
 4935      436F6E6E 
 4936              	.LASF156:
 4937 0180 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4937      656E7365 
 4937      5F315F73 
 4937      63616E46 
 4937      72657149 
 4938              	.LASF131:
 4939 0199 70696E4D 		.ascii	"pinModeShift\000"
 4939      6F646553 
 4939      68696674 
 4939      00
 4940              	.LASF115:
 4941 01a6 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4941      656E7365 
 4941      5F315F53 
 4941      73435344 
 4941      496E6974 
 4942              	.LASF97:
 4943 01c1 69697246 		.ascii	"iirFilterCoeff\000"
 4943      696C7465 
 4943      72436F65 
 4943      666600
 4944              	.LASF49:
 4945 01d0 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4945      656E7365 
 4945      5F315F52 
 4945      414D5F57 
 4945      445F4C49 
 4946              	.LASF149:
 4947 01ee 43617053 		.ascii	"CapSense_1_counterResolution\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 139


 4947      656E7365 
 4947      5F315F63 
 4947      6F756E74 
 4947      65725265 
 4948              	.LASF136:
 4949 020b 73656E73 		.ascii	"sensorId\000"
 4949      6F724964 
 4949      00
 4950              	.LASF104:
 4951 0214 70747257 		.ascii	"ptrWdgt\000"
 4951      64677400 
 4952              	.LASF124:
 4953 021c 43617053 		.ascii	"CapSense_1_SsCSDTriggerScan\000"
 4953      656E7365 
 4953      5F315F53 
 4953      73435344 
 4953      54726967 
 4954              	.LASF12:
 4955 0238 666C6F61 		.ascii	"float\000"
 4955      7400
 4956              	.LASF83:
 4957 023e 73686966 		.ascii	"shift\000"
 4957      7400
 4958              	.LASF120:
 4959 0244 736E7343 		.ascii	"snsClkSrc\000"
 4959      6C6B5372 
 4959      6300
 4960              	.LASF123:
 4961 024e 77617463 		.ascii	"watchdogCounter\000"
 4961      68646F67 
 4961      436F756E 
 4961      74657200 
 4962              	.LASF69:
 4963 025e 736E734C 		.ascii	"snsList\000"
 4963      69737400 
 4964              	.LASF7:
 4965 0266 6C6F6E67 		.ascii	"long long unsigned int\000"
 4965      206C6F6E 
 4965      6720756E 
 4965      7369676E 
 4965      65642069 
 4966              	.LASF71:
 4967 027d 736E7254 		.ascii	"snrTestSensorId\000"
 4967      65737453 
 4967      656E736F 
 4967      72496400 
 4968              	.LASF96:
 4969 028d 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4969      4E6F6973 
 4969      65456E76 
 4969      6C7000
 4970              	.LASF146:
 4971 029c 63616C4D 		.ascii	"calMask\000"
 4971      61736B00 
 4972              	.LASF92:
 4973 02a4 77646774 		.ascii	"wdgtType\000"
 4973      54797065 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 140


 4973      00
 4974              	.LASF18:
 4975 02ad 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4975      656E7365 
 4975      5F315F4C 
 4975      4F575F42 
 4975      534C4E5F 
 4976              	.LASF159:
 4977 02ca 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 4977      656E7365 
 4977      5F315F63 
 4977      616C6962 
 4977      72617465 
 4978              	.LASF170:
 4979 02e4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4979      43313120 
 4979      352E342E 
 4979      31203230 
 4979      31363036 
 4980 0317 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4980      20726576 
 4980      6973696F 
 4980      6E203233 
 4980      37373135 
 4981 034a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4981      66756E63 
 4981      74696F6E 
 4981      2D736563 
 4981      74696F6E 
 4982              	.LASF130:
 4983 0372 6E657752 		.ascii	"newRegisterValue\000"
 4983      65676973 
 4983      74657256 
 4983      616C7565 
 4983      00
 4984              	.LASF67:
 4985 0383 6D6F6443 		.ascii	"modCsdClk\000"
 4985      7364436C 
 4985      6B00
 4986              	.LASF168:
 4987 038d 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4987      656E7365 
 4987      5F315F49 
 4987      53525F53 
 4987      74617274 
 4988              	.LASF163:
 4989 03a4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4989      74657243 
 4989      72697469 
 4989      63616C53 
 4989      65637469 
 4990              	.LASF148:
 4991 03bb 74617267 		.ascii	"target\000"
 4991      657400
 4992              	.LASF77:
 4993 03c2 64725074 		.ascii	"drPtr\000"
 4993      7200
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 141


 4994              	.LASF43:
 4995 03c8 73696750 		.ascii	"sigPFC\000"
 4995      464300
 4996              	.LASF171:
 4997 03cf 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
 4997      72617465 
 4997      645F536F 
 4997      75726365 
 4997      5C50536F 
 4998 0400 00       		.ascii	"\000"
 4999              	.LASF30:
 5000 0401 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 5000      656E7365 
 5000      5F315F53 
 5000      454E5345 
 5000      5F4D4554 
 5001              	.LASF105:
 5002 0420 7261774C 		.ascii	"rawLevel\000"
 5002      6576656C 
 5002      00
 5003              	.LASF38:
 5004 0429 6C6F7742 		.ascii	"lowBslnRst\000"
 5004      736C6E52 
 5004      737400
 5005              	.LASF153:
 5006 0434 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5006      656E7365 
 5006      5F315F77 
 5006      69646765 
 5006      74496E64 
 5007              	.LASF169:
 5008 044b 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 5008      656E7365 
 5008      5F315F53 
 5008      73537769 
 5008      74636853 
 5009              	.LASF165:
 5010 046a 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 5010      656E7365 
 5010      5F315F53 
 5010      73536574 
 5010      4D6F6443 
 5011              	.LASF91:
 5012 048d 746F7461 		.ascii	"totalNumSns\000"
 5012      6C4E756D 
 5012      536E7300 
 5013              	.LASF110:
 5014 0499 6D696E52 		.ascii	"minRawLevel\000"
 5014      61774C65 
 5014      76656C00 
 5015              	.LASF26:
 5016 04a5 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5016      5453454E 
 5016      53455F43 
 5016      53445F4E 
 5016      4F495345 
 5017              	.LASF173:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 142


 5018 04ca 43617053 		.ascii	"CapSense_1_SsCSDCmodPrecharge\000"
 5018      656E7365 
 5018      5F315F53 
 5018      73435344 
 5018      436D6F64 
 5019              	.LASF34:
 5020 04e8 6E6F6973 		.ascii	"noiseTh\000"
 5020      65546800 
 5021              	.LASF14:
 5022 04f0 63686172 		.ascii	"char\000"
 5022      00
 5023              	.LASF164:
 5024 04f5 43794578 		.ascii	"CyExitCriticalSection\000"
 5024      69744372 
 5024      69746963 
 5024      616C5365 
 5024      6374696F 
 5025              	.LASF166:
 5026 050b 43794465 		.ascii	"CyDelayCycles\000"
 5026      6C617943 
 5026      79636C65 
 5026      7300
 5027              	.LASF81:
 5028 0519 6873696F 		.ascii	"hsiomShift\000"
 5028      6D536869 
 5028      667400
 5029              	.LASF10:
 5030 0524 75696E74 		.ascii	"uint16\000"
 5030      313600
 5031              	.LASF32:
 5032 052b 7265736F 		.ascii	"resolution\000"
 5032      6C757469 
 5032      6F6E00
 5033              	.LASF74:
 5034 0536 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 5034      656E7365 
 5034      5F315F52 
 5034      414D5F53 
 5034      54525543 
 5035              	.LASF62:
 5036 054c 73746174 		.ascii	"status\000"
 5036      757300
 5037              	.LASF158:
 5038 0553 43617053 		.ascii	"CapSense_1_configCsd\000"
 5038      656E7365 
 5038      5F315F63 
 5038      6F6E6669 
 5038      67437364 
 5039              	.LASF54:
 5040 0568 69646163 		.ascii	"idacComp\000"
 5040      436F6D70 
 5040      00
 5041              	.LASF150:
 5042 0571 43617053 		.ascii	"CapSense_1_eleCsdDisconnectFlag\000"
 5042      656E7365 
 5042      5F315F65 
 5042      6C654373 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 143


 5042      64446973 
 5043              	.LASF76:
 5044 0591 70635074 		.ascii	"pcPtr\000"
 5044      7200
 5045              	.LASF172:
 5046 0597 443A5C47 		.ascii	"D:\\GIT\\Microcontroller System Design Projects\\HW"
 5046      49545C4D 
 5046      6963726F 
 5046      636F6E74 
 5046      726F6C6C 
 5047 05c7 362D204D 		.ascii	"6- MotorControll\\MotorControll.cydsn\000"
 5047      6F746F72 
 5047      436F6E74 
 5047      726F6C6C 
 5047      5C4D6F74 
 5048              	.LASF6:
 5049 05ec 6C6F6E67 		.ascii	"long long int\000"
 5049      206C6F6E 
 5049      6720696E 
 5049      7400
 5050              	.LASF17:
 5051 05fa 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 5051      656E7365 
 5051      5F315F54 
 5051      48524553 
 5051      484F4C44 
 5052              	.LASF125:
 5053 0614 43617053 		.ascii	"CapSense_1_SsCSDClockRestart\000"
 5053      656E7365 
 5053      5F315F53 
 5053      73435344 
 5053      436C6F63 
 5054              	.LASF37:
 5055 0631 6F6E4465 		.ascii	"onDebounce\000"
 5055      626F756E 
 5055      636500
 5056              	.LASF119:
 5057 063c 43617053 		.ascii	"CapSense_1_SsCSDConfigClock\000"
 5057      656E7365 
 5057      5F315F53 
 5057      73435344 
 5057      436F6E66 
 5058              	.LASF108:
 5059 0658 63616C69 		.ascii	"calibrateStatus\000"
 5059      62726174 
 5059      65537461 
 5059      74757300 
 5060              	.LASF68:
 5061 0668 77646774 		.ascii	"wdgtList\000"
 5061      4C697374 
 5061      00
 5062              	.LASF85:
 5063 0671 70747232 		.ascii	"ptr2SnsFlash\000"
 5063      536E7346 
 5063      6C617368 
 5063      00
 5064              	.LASF73:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 144


 5065 067e 736E7254 		.ascii	"snrTestRawCount\000"
 5065      65737452 
 5065      6177436F 
 5065      756E7400 
 5066              	.LASF103:
 5067 068e 43617053 		.ascii	"CapSense_1_SsCSDRestoreIdacMode\000"
 5067      656E7365 
 5067      5F315F53 
 5067      73435344 
 5067      52657374 
 5068              	.LASF35:
 5069 06ae 6E4E6F69 		.ascii	"nNoiseTh\000"
 5069      73655468 
 5069      00
 5070              	.LASF66:
 5071 06b7 63736430 		.ascii	"csd0Config\000"
 5071      436F6E66 
 5071      696700
 5072              	.LASF101:
 5073 06c2 6C6F6E67 		.ascii	"long double\000"
 5073      20646F75 
 5073      626C6500 
 5074              	.LASF45:
 5075 06ce 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5075      656E7365 
 5075      5F315F52 
 5075      414D5F57 
 5075      445F4241 
 5076              	.LASF75:
 5077 06ec 6873696F 		.ascii	"hsiomPtr\000"
 5077      6D507472 
 5077      00
 5078              	.LASF11:
 5079 06f5 75696E74 		.ascii	"uint32\000"
 5079      333200
 5080              	.LASF36:
 5081 06fc 68797374 		.ascii	"hysteresis\000"
 5081      65726573 
 5081      697300
 5082              	.LASF88:
 5083 0707 70747232 		.ascii	"ptr2FltrHistory\000"
 5083      466C7472 
 5083      48697374 
 5083      6F727900 
 5084              	.LASF27:
 5085 0717 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5085      656E7365 
 5085      5F315F55 
 5085      4E444546 
 5085      494E4544 
 5086              	.LASF56:
 5087 072e 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 5087      656E7365 
 5087      5F315F52 
 5087      414D5F53 
 5087      4E535F4C 
 5088              	.LASF80:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 145


 5089 074d 6D61736B 		.ascii	"mask\000"
 5089      00
 5090              	.LASF111:
 5091 0752 6D617852 		.ascii	"maxRawLevel\000"
 5091      61774C65 
 5091      76656C00 
 5092              	.LASF151:
 5093 075e 43617053 		.ascii	"CapSense_1_dsRam\000"
 5093      656E7365 
 5093      5F315F64 
 5093      7352616D 
 5093      00
 5094              	.LASF31:
 5095 076f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5095      656E7365 
 5095      5F315F53 
 5095      454E5345 
 5095      5F4D4554 
 5096              	.LASF16:
 5097 078d 72656733 		.ascii	"reg32\000"
 5097      3200
 5098              	.LASF72:
 5099 0793 736E7254 		.ascii	"snrTestScanCounter\000"
 5099      65737453 
 5099      63616E43 
 5099      6F756E74 
 5099      657200
 5100              	.LASF57:
 5101 07a6 636F6E66 		.ascii	"configId\000"
 5101      69674964 
 5101      00
 5102              	.LASF87:
 5103 07af 70747232 		.ascii	"ptr2SnsRam\000"
 5103      536E7352 
 5103      616D00
 5104              	.LASF127:
 5105 07ba 43617053 		.ascii	"CapSense_1_CSDScanExt\000"
 5105      656E7365 
 5105      5F315F43 
 5105      53445363 
 5105      616E4578 
 5106              	.LASF100:
 5107 07d0 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5107      656E7365 
 5107      5F315F46 
 5107      4C415348 
 5107      5F535452 
 5108              	.LASF65:
 5109 07e8 736E7353 		.ascii	"snsStatus\000"
 5109      74617475 
 5109      7300
 5110              	.LASF41:
 5111 07f2 736E7343 		.ascii	"snsClkSource\000"
 5111      6C6B536F 
 5111      75726365 
 5111      00
 5112              	.LASF106:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 146


 5113 07ff 72617744 		.ascii	"rawData\000"
 5113      61746100 
 5114              	.LASF44:
 5115 0807 73697A65 		.ascii	"sizetype\000"
 5115      74797065 
 5115      00
 5116              	.LASF94:
 5117 0810 78526573 		.ascii	"xResolution\000"
 5117      6F6C7574 
 5117      696F6E00 
 5118              	.LASF137:
 5119 081c 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5119      656E7365 
 5119      5F315F43 
 5119      53444469 
 5119      73636F6E 
 5120              	.LASF2:
 5121 0838 73686F72 		.ascii	"short int\000"
 5121      7420696E 
 5121      7400
 5122              	.LASF4:
 5123 0842 6C6F6E67 		.ascii	"long int\000"
 5123      20696E74 
 5123      00
 5124              	.LASF126:
 5125 084b 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 5125      656E7365 
 5125      5F315F53 
 5125      73435344 
 5125      53746172 
 5126              	.LASF63:
 5127 0867 77646774 		.ascii	"wdgtEnable\000"
 5127      456E6162 
 5127      6C6500
 5128              	.LASF152:
 5129 0872 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5129      656E7365 
 5129      5F315F64 
 5129      73466C61 
 5129      736800
 5130              	.LASF52:
 5131 0885 64696666 		.ascii	"diff\000"
 5131      00
 5132              	.LASF60:
 5133 088a 74756E65 		.ascii	"tunerCmd\000"
 5133      72436D64 
 5133      00
 5134              	.LASF144:
 5135 0893 70747249 		.ascii	"ptrIdac\000"
 5135      64616300 
 5136              	.LASF78:
 5137 089b 70735074 		.ascii	"psPtr\000"
 5137      7200
 5138              	.LASF29:
 5139 08a1 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5139      656E7365 
 5139      5F315F53 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 147


 5139      454E5345 
 5139      5F4D4554 
 5140              	.LASF174:
 5141 08bf 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5141      656E7365 
 5141      5F315F43 
 5141      53444361 
 5141      6C696272 
 5142              	.LASF93:
 5143 08dd 6E756D43 		.ascii	"numCols\000"
 5143      6F6C7300 
 5144              	.LASF161:
 5145 08e5 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 5145      656E7365 
 5145      5F315F53 
 5145      73536574 
 5145      536E7343 
 5146              	.LASF160:
 5147 0905 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5147      656E7365 
 5147      5F315F63 
 5147      616C6962 
 5147      72617465 
 5148              	.LASF141:
 5149 0923 43617053 		.ascii	"CapSense_1_SsCSDDisconnectSnsExt\000"
 5149      656E7365 
 5149      5F315F53 
 5149      73435344 
 5149      44697363 
 5150              	.LASF42:
 5151 0944 66696E67 		.ascii	"fingerCap\000"
 5151      65724361 
 5151      7000
 5152              	.LASF64:
 5153 094e 77646774 		.ascii	"wdgtStatus\000"
 5153      53746174 
 5153      757300
 5154              	.LASF139:
 5155 0959 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5155      656E7365 
 5155      5F315F43 
 5155      53445365 
 5155      74757057 
 5156              	.LASF154:
 5157 0973 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5157      656E7365 
 5157      5F315F73 
 5157      656E736F 
 5157      72496E64 
 5158              	.LASF28:
 5159 098a 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5159      656E7365 
 5159      5F315F53 
 5159      454E5345 
 5159      5F4D4554 
 5160              	.LASF82:
 5161 09a8 64725368 		.ascii	"drShift\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 148


 5161      69667400 
 5162              	.LASF5:
 5163 09b0 6C6F6E67 		.ascii	"long unsigned int\000"
 5163      20756E73 
 5163      69676E65 
 5163      6420696E 
 5163      7400
 5164              	.LASF122:
 5165 09c2 746D7052 		.ascii	"tmpRegValue\000"
 5165      65675661 
 5165      6C756500 
 5166              	.LASF39:
 5167 09ce 69646163 		.ascii	"idacMod\000"
 5167      4D6F6400 
 5168              	.LASF89:
 5169 09d6 70747232 		.ascii	"ptr2DebounceArr\000"
 5169      4465626F 
 5169      756E6365 
 5169      41727200 
 5170              	.LASF95:
 5171 09e6 7843656E 		.ascii	"xCentroidMultiplier\000"
 5171      74726F69 
 5171      644D756C 
 5171      7469706C 
 5171      69657200 
 5172              	.LASF33:
 5173 09fa 66696E67 		.ascii	"fingerTh\000"
 5173      65725468 
 5173      00
 5174              	.LASF51:
 5175 0a03 62736C6E 		.ascii	"bslnExt\000"
 5175      45787400 
 5176              	.LASF15:
 5177 0a0b 63797374 		.ascii	"cystatus\000"
 5177      61747573 
 5177      00
 5178              	.LASF47:
 5179 0a14 43617053 		.ascii	"CapSense_1_RAM_WD_SLIDER_STRUCT\000"
 5179      656E7365 
 5179      5F315F52 
 5179      414D5F57 
 5179      445F534C 
 5180              	.LASF1:
 5181 0a34 756E7369 		.ascii	"unsigned char\000"
 5181      676E6564 
 5181      20636861 
 5181      7200
 5182              	.LASF90:
 5183 0a42 73746174 		.ascii	"staticConfig\000"
 5183      6963436F 
 5183      6E666967 
 5183      00
 5184              	.LASF142:
 5185 0a4f 43617053 		.ascii	"CapSense_1_SsCSDCalibrateCheck\000"
 5185      656E7365 
 5185      5F315F53 
 5185      73435344 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 149


 5185      43616C69 
 5186              	.LASF133:
 5187 0a6e 43617053 		.ascii	"CapSense_1_CSDScan\000"
 5187      656E7365 
 5187      5F315F43 
 5187      53445363 
 5187      616E00
 5188              	.LASF86:
 5189 0a81 70747232 		.ascii	"ptr2WdgtRam\000"
 5189      57646774 
 5189      52616D00 
 5190              	.LASF48:
 5191 0a8d 6C696E65 		.ascii	"linearslider0\000"
 5191      6172736C 
 5191      69646572 
 5191      3000
 5192              	.LASF79:
 5193 0a9b 6873696F 		.ascii	"hsiomMask\000"
 5193      6D4D6173 
 5193      6B00
 5194              	.LASF167:
 5195 0aa5 4379496E 		.ascii	"CyIntEnable\000"
 5195      74456E61 
 5195      626C6500 
 5196              	.LASF109:
 5197 0ab1 72617743 		.ascii	"rawCountsError\000"
 5197      6F756E74 
 5197      73457272 
 5197      6F7200
 5198              	.LASF40:
 5199 0ac0 736E7343 		.ascii	"snsClk\000"
 5199      6C6B00
 5200              	.LASF121:
 5201 0ac7 43617053 		.ascii	"CapSense_1_SsCSDCalculateScanDuration\000"
 5201      656E7365 
 5201      5F315F53 
 5201      73435344 
 5201      43616C63 
 5202              	.LASF145:
 5203 0aed 69444143 		.ascii	"iDAC8Max\000"
 5203      384D6178 
 5203      00
 5204              	.LASF0:
 5205 0af6 7369676E 		.ascii	"signed char\000"
 5205      65642063 
 5205      68617200 
 5206              	.LASF50:
 5207 0b02 62736C6E 		.ascii	"bsln\000"
 5207      00
 5208              	.LASF3:
 5209 0b07 73686F72 		.ascii	"short unsigned int\000"
 5209      7420756E 
 5209      7369676E 
 5209      65642069 
 5209      6E7400
 5210              	.LASF84:
 5211 0b1a 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 150


 5211      656E7365 
 5211      5F315F46 
 5211      4C415348 
 5211      5F494F5F 
 5212              	.LASF107:
 5213 0b35 6E657752 		.ascii	"newRegValue\000"
 5213      65675661 
 5213      6C756500 
 5214              	.LASF162:
 5215 0b41 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5215      656E7365 
 5215      5F315F53 
 5215      73436C65 
 5215      61724353 
 5216              	.LASF9:
 5217 0b5e 75696E74 		.ascii	"uint8\000"
 5217      3800
 5218              	.LASF13:
 5219 0b64 646F7562 		.ascii	"double\000"
 5219      6C6500
 5220              	.LASF53:
 5221 0b6b 6E656742 		.ascii	"negBslnRstCnt\000"
 5221      736C6E52 
 5221      7374436E 
 5221      7400
 5222              	.LASF55:
 5223 0b79 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5223      656E7365 
 5223      5F315F52 
 5223      414D5F53 
 5223      4E535F53 
 5224              	.LASF19:
 5225 0b93 70617261 		.ascii	"param0\000"
 5225      6D3000
 5226              	.LASF20:
 5227 0b9a 70617261 		.ascii	"param1\000"
 5227      6D3100
 5228              	.LASF21:
 5229 0ba1 70617261 		.ascii	"param2\000"
 5229      6D3200
 5230              	.LASF22:
 5231 0ba8 70617261 		.ascii	"param3\000"
 5231      6D3300
 5232              	.LASF23:
 5233 0baf 70617261 		.ascii	"param4\000"
 5233      6D3400
 5234              	.LASF24:
 5235 0bb6 70617261 		.ascii	"param5\000"
 5235      6D3500
 5236              	.LASF25:
 5237 0bbd 70617261 		.ascii	"param6\000"
 5237      6D3600
 5238              	.LASF118:
 5239 0bc4 70747249 		.ascii	"ptrIdacMod\000"
 5239      6461634D 
 5239      6F6400
 5240              	.LASF114:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccQOMH8Q.s 			page 151


 5241 0bcf 736E7343 		.ascii	"snsClkDivider\000"
 5241      6C6B4469 
 5241      76696465 
 5241      7200
 5242              	.LASF58:
 5243 0bdd 64657669 		.ascii	"deviceId\000"
 5243      63654964 
 5243      00
 5244              	.LASF135:
 5245 0be6 77696467 		.ascii	"widgetId\000"
 5245      65744964 
 5245      00
 5246              	.LASF143:
 5247 0bef 43617053 		.ascii	"CapSense_1_SsCSDCalibrateOneSensor\000"
 5247      656E7365 
 5247      5F315F53 
 5247      73435344 
 5247      43616C69 
 5248              	.LASF46:
 5249 0c12 706F7369 		.ascii	"position\000"
 5249      74696F6E 
 5249      00
 5250              	.LASF112:
 5251 0c1b 43617053 		.ascii	"CapSense_1_SsCSDSetSingleIdacMode\000"
 5251      656E7365 
 5251      5F315F53 
 5251      73435344 
 5251      53657453 
 5252              	.LASF99:
 5253 0c3d 77646774 		.ascii	"wdgtArray\000"
 5253      41727261 
 5253      7900
 5254              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
