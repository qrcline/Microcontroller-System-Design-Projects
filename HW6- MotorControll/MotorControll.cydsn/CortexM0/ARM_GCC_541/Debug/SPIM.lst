ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SPIM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_Enable, %function
  25              	SPIM_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * Description:
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *  None.
  10:Generated_Source\PSoC4/SPIM.c **** *
  11:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM.c **** 
  27:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 2


  31:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM.c **** 
  34:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM.c **** 
  36:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC4/SPIM.c **** 
  39:Generated_Source\PSoC4/SPIM.c **** 
  40:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM.c **** *
  44:Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM.c **** *
  47:Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM.c **** *  None.
  49:Generated_Source\PSoC4/SPIM.c **** *
  50:Generated_Source\PSoC4/SPIM.c **** * Return:
  51:Generated_Source\PSoC4/SPIM.c **** *  None.
  52:Generated_Source\PSoC4/SPIM.c **** *
  53:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM.c **** *
  59:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM.c **** *  No.
  61:Generated_Source\PSoC4/SPIM.c **** *
  62:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC4/SPIM.c **** {
  65:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  67:Generated_Source\PSoC4/SPIM.c **** 
  68:Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM.c **** 
  75:Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM.c **** 
  82:Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  84:Generated_Source\PSoC4/SPIM.c **** 
  85:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 3


  88:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM.c **** 
  91:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM.c **** 
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC4/SPIM.c **** 
 100:Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC4/SPIM.c **** }
 104:Generated_Source\PSoC4/SPIM.c **** 
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM.c **** *
 110:Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM.c **** *
 113:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM.c **** *  None.
 115:Generated_Source\PSoC4/SPIM.c **** *
 116:Generated_Source\PSoC4/SPIM.c **** * Return:
 117:Generated_Source\PSoC4/SPIM.c **** *  None.
 118:Generated_Source\PSoC4/SPIM.c **** *
 119:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC4/SPIM.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 122:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM.c **** 
 124:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0B4A     		ldr	r2, .L2
  41 0008 1178     		ldrb	r1, [r2]
  42 000a 2023     		movs	r3, #32
  43 000c 0B43     		orrs	r3, r1
  44 000e DBB2     		uxtb	r3, r3
  45 0010 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 4


  46              		.loc 1 126 0
  47 0012 0949     		ldr	r1, .L2+4
  48 0014 0A78     		ldrb	r2, [r1]
  49 0016 1023     		movs	r3, #16
  50 0018 1A43     		orrs	r2, r3
  51 001a D2B2     		uxtb	r2, r2
  52 001c 0A70     		strb	r2, [r1]
 127:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
  53              		.loc 1 127 0
  54 001e 074A     		ldr	r2, .L2+8
  55 0020 1178     		ldrb	r1, [r2]
  56 0022 0B43     		orrs	r3, r1
  57 0024 DBB2     		uxtb	r3, r3
  58 0026 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 128 0
  60 0028 FFF7FEFF 		bl	CyExitCriticalSection
  61              	.LVL1:
 129:Generated_Source\PSoC4/SPIM.c **** 
 130:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
  62              		.loc 1 131 0
  63 002c FFF7FEFF 		bl	SPIM_IntClock_Start
  64              	.LVL2:
 132:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM.c **** 
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 135:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 136:Generated_Source\PSoC4/SPIM.c **** }
  65              		.loc 1 136 0
  66              		@ sp needed
  67 0030 10BD     		pop	{r4, pc}
  68              	.L3:
  69 0032 C046     		.align	2
  70              	.L2:
  71 0034 93000F40 		.word	1074725011
  72 0038 90000F40 		.word	1074725008
  73 003c 91000F40 		.word	1074725009
  74              		.cfi_endproc
  75              	.LFE1:
  76              		.size	SPIM_Enable, .-SPIM_Enable
  77              		.section	.text.SPIM_Stop,"ax",%progbits
  78              		.align	2
  79              		.global	SPIM_Stop
  80              		.code	16
  81              		.thumb_func
  82              		.type	SPIM_Stop, %function
  83              	SPIM_Stop:
  84              	.LFB3:
 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** 
 139:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM.c **** *
 143:Generated_Source\PSoC4/SPIM.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 5


 145:Generated_Source\PSoC4/SPIM.c **** *
 146:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM.c **** *  None.
 148:Generated_Source\PSoC4/SPIM.c **** *
 149:Generated_Source\PSoC4/SPIM.c **** * Return:
 150:Generated_Source\PSoC4/SPIM.c **** *  None.
 151:Generated_Source\PSoC4/SPIM.c **** *
 152:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM.c **** *
 156:Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM.c **** *
 159:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM.c **** *  No.
 161:Generated_Source\PSoC4/SPIM.c **** *
 162:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC4/SPIM.c **** {
 165:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 166:Generated_Source\PSoC4/SPIM.c ****     {
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 168:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 169:Generated_Source\PSoC4/SPIM.c ****     }
 170:Generated_Source\PSoC4/SPIM.c **** 
 171:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 172:Generated_Source\PSoC4/SPIM.c **** }
 173:Generated_Source\PSoC4/SPIM.c **** 
 174:Generated_Source\PSoC4/SPIM.c **** 
 175:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM.c **** *
 179:Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM.c **** *
 182:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM.c **** *  None.
 184:Generated_Source\PSoC4/SPIM.c **** *
 185:Generated_Source\PSoC4/SPIM.c **** * Return:
 186:Generated_Source\PSoC4/SPIM.c **** *  None.
 187:Generated_Source\PSoC4/SPIM.c **** *
 188:Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM.c **** *
 191:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC4/SPIM.c **** {
  85              		.loc 1 193 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89 0000 10B5     		push	{r4, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 6


 194:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM.c **** 
 196:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  93              		.loc 1 196 0
  94 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  95              	.LVL3:
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
  96              		.loc 1 197 0
  97 0006 074A     		ldr	r2, .L5
  98 0008 1378     		ldrb	r3, [r2]
  99 000a 1021     		movs	r1, #16
 100 000c 8B43     		bics	r3, r1
 101 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 102              		.loc 1 198 0
 103 0010 054A     		ldr	r2, .L5+4
 104 0012 1378     		ldrb	r3, [r2]
 105 0014 8B43     		bics	r3, r1
 106 0016 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 107              		.loc 1 199 0
 108 0018 FFF7FEFF 		bl	CyExitCriticalSection
 109              	.LVL4:
 200:Generated_Source\PSoC4/SPIM.c **** 
 201:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 110              		.loc 1 202 0
 111 001c FFF7FEFF 		bl	SPIM_IntClock_Stop
 112              	.LVL5:
 203:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM.c **** 
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 206:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 207:Generated_Source\PSoC4/SPIM.c **** }
 113              		.loc 1 207 0
 114              		@ sp needed
 115 0020 10BD     		pop	{r4, pc}
 116              	.L6:
 117 0022 C046     		.align	2
 118              	.L5:
 119 0024 90000F40 		.word	1074725008
 120 0028 91000F40 		.word	1074725009
 121              		.cfi_endproc
 122              	.LFE3:
 123              		.size	SPIM_Stop, .-SPIM_Stop
 124              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 125              		.align	2
 126              		.global	SPIM_EnableTxInt
 127              		.code	16
 128              		.thumb_func
 129              		.type	SPIM_EnableTxInt, %function
 130              	SPIM_EnableTxInt:
 131              	.LFB4:
 208:Generated_Source\PSoC4/SPIM.c **** 
 209:Generated_Source\PSoC4/SPIM.c **** 
 210:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 7


 212:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM.c **** *
 214:Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM.c **** *
 217:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM.c **** *  None.
 219:Generated_Source\PSoC4/SPIM.c **** *
 220:Generated_Source\PSoC4/SPIM.c **** * Return:
 221:Generated_Source\PSoC4/SPIM.c **** *  None.
 222:Generated_Source\PSoC4/SPIM.c **** *
 223:Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM.c **** {
 132              		.loc 1 228 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 229:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM.c **** }
 137              		.loc 1 232 0
 138              		@ sp needed
 139 0000 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE4:
 142              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 143 0002 C046     		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 144              		.align	2
 145              		.global	SPIM_EnableRxInt
 146              		.code	16
 147              		.thumb_func
 148              		.type	SPIM_EnableRxInt, %function
 149              	SPIM_EnableRxInt:
 150              	.LFB5:
 233:Generated_Source\PSoC4/SPIM.c **** 
 234:Generated_Source\PSoC4/SPIM.c **** 
 235:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM.c **** *
 239:Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM.c **** *
 242:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM.c **** *  None.
 244:Generated_Source\PSoC4/SPIM.c **** *
 245:Generated_Source\PSoC4/SPIM.c **** * Return:
 246:Generated_Source\PSoC4/SPIM.c **** *  None.
 247:Generated_Source\PSoC4/SPIM.c **** *
 248:Generated_Source\PSoC4/SPIM.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 8


 250:Generated_Source\PSoC4/SPIM.c **** *
 251:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM.c **** {
 151              		.loc 1 253 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 254:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM.c **** }
 156              		.loc 1 257 0
 157              		@ sp needed
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE5:
 161              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 162 0002 C046     		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 163              		.align	2
 164              		.global	SPIM_DisableTxInt
 165              		.code	16
 166              		.thumb_func
 167              		.type	SPIM_DisableTxInt, %function
 168              	SPIM_DisableTxInt:
 169              	.LFB6:
 258:Generated_Source\PSoC4/SPIM.c **** 
 259:Generated_Source\PSoC4/SPIM.c **** 
 260:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM.c **** *
 264:Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM.c **** *
 267:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM.c **** *  None.
 269:Generated_Source\PSoC4/SPIM.c **** *
 270:Generated_Source\PSoC4/SPIM.c **** * Return:
 271:Generated_Source\PSoC4/SPIM.c **** *  None.
 272:Generated_Source\PSoC4/SPIM.c **** *
 273:Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM.c **** *
 276:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM.c **** {
 170              		.loc 1 278 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 279:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM.c **** }
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 9


 175              		.loc 1 282 0
 176              		@ sp needed
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE6:
 180              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 181 0002 C046     		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 182              		.align	2
 183              		.global	SPIM_DisableRxInt
 184              		.code	16
 185              		.thumb_func
 186              		.type	SPIM_DisableRxInt, %function
 187              	SPIM_DisableRxInt:
 188              	.LFB7:
 283:Generated_Source\PSoC4/SPIM.c **** 
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM.c **** *
 289:Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM.c **** *
 292:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM.c **** *  None.
 294:Generated_Source\PSoC4/SPIM.c **** *
 295:Generated_Source\PSoC4/SPIM.c **** * Return:
 296:Generated_Source\PSoC4/SPIM.c **** *  None.
 297:Generated_Source\PSoC4/SPIM.c **** *
 298:Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM.c **** *
 301:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM.c **** {
 189              		.loc 1 303 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 304:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM.c **** }
 194              		.loc 1 307 0
 195              		@ sp needed
 196 0000 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE7:
 199              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 200 0002 C046     		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 201              		.align	2
 202              		.global	SPIM_SetTxInterruptMode
 203              		.code	16
 204              		.thumb_func
 205              		.type	SPIM_SetTxInterruptMode, %function
 206              	SPIM_SetTxInterruptMode:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 10


 207              	.LFB8:
 308:Generated_Source\PSoC4/SPIM.c **** 
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM.c **** *
 314:Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM.c **** *
 317:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM.c **** *
 321:Generated_Source\PSoC4/SPIM.c **** * Return:
 322:Generated_Source\PSoC4/SPIM.c **** *  None.
 323:Generated_Source\PSoC4/SPIM.c **** *
 324:Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM.c **** *
 327:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM.c **** {
 208              		.loc 1 329 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL6:
 330:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 214              		.loc 1 330 0
 215 0000 014B     		ldr	r3, .L12
 216 0002 1870     		strb	r0, [r3]
 331:Generated_Source\PSoC4/SPIM.c **** }
 217              		.loc 1 331 0
 218              		@ sp needed
 219 0004 7047     		bx	lr
 220              	.L13:
 221 0006 C046     		.align	2
 222              	.L12:
 223 0008 80000F40 		.word	1074724992
 224              		.cfi_endproc
 225              	.LFE8:
 226              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 227              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 228              		.align	2
 229              		.global	SPIM_SetRxInterruptMode
 230              		.code	16
 231              		.thumb_func
 232              		.type	SPIM_SetRxInterruptMode, %function
 233              	SPIM_SetRxInterruptMode:
 234              	.LFB9:
 332:Generated_Source\PSoC4/SPIM.c **** 
 333:Generated_Source\PSoC4/SPIM.c **** 
 334:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 11


 337:Generated_Source\PSoC4/SPIM.c **** *
 338:Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM.c **** *
 341:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM.c **** *
 345:Generated_Source\PSoC4/SPIM.c **** * Return:
 346:Generated_Source\PSoC4/SPIM.c **** *  None.
 347:Generated_Source\PSoC4/SPIM.c **** *
 348:Generated_Source\PSoC4/SPIM.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM.c **** *
 351:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM.c **** {
 235              		.loc 1 353 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL7:
 354:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 241              		.loc 1 354 0
 242 0000 014B     		ldr	r3, .L15
 243 0002 1870     		strb	r0, [r3]
 355:Generated_Source\PSoC4/SPIM.c **** }
 244              		.loc 1 355 0
 245              		@ sp needed
 246 0004 7047     		bx	lr
 247              	.L16:
 248 0006 C046     		.align	2
 249              	.L15:
 250 0008 81000F40 		.word	1074724993
 251              		.cfi_endproc
 252              	.LFE9:
 253              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 254              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 255              		.align	2
 256              		.global	SPIM_ReadTxStatus
 257              		.code	16
 258              		.thumb_func
 259              		.type	SPIM_ReadTxStatus, %function
 260              	SPIM_ReadTxStatus:
 261              	.LFB10:
 356:Generated_Source\PSoC4/SPIM.c **** 
 357:Generated_Source\PSoC4/SPIM.c **** 
 358:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM.c **** *
 362:Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM.c **** *
 365:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM.c **** *  None.
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 12


 367:Generated_Source\PSoC4/SPIM.c **** *
 368:Generated_Source\PSoC4/SPIM.c **** * Return:
 369:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM.c **** *
 371:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM.c **** *
 375:Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM.c **** *
 379:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM.c **** *
 382:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM.c **** *  No.
 384:Generated_Source\PSoC4/SPIM.c **** *
 385:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM.c **** {
 262              		.loc 1 387 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 388:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM.c **** 
 390:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM.c **** 
 394:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM.c **** 
 397:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c ****     #else
 400:Generated_Source\PSoC4/SPIM.c **** 
 401:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 267              		.loc 1 401 0
 268 0000 014B     		ldr	r3, .L18
 269 0002 1878     		ldrb	r0, [r3]
 270 0004 C0B2     		uxtb	r0, r0
 271              	.LVL8:
 402:Generated_Source\PSoC4/SPIM.c **** 
 403:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 406:Generated_Source\PSoC4/SPIM.c **** }
 272              		.loc 1 406 0
 273              		@ sp needed
 274 0006 7047     		bx	lr
 275              	.L19:
 276              		.align	2
 277              	.L18:
 278 0008 60000F40 		.word	1074724960
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 13


 279              		.cfi_endproc
 280              	.LFE10:
 281              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 282              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 283              		.align	2
 284              		.global	SPIM_ReadRxStatus
 285              		.code	16
 286              		.thumb_func
 287              		.type	SPIM_ReadRxStatus, %function
 288              	SPIM_ReadRxStatus:
 289              	.LFB11:
 407:Generated_Source\PSoC4/SPIM.c **** 
 408:Generated_Source\PSoC4/SPIM.c **** 
 409:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** *
 413:Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM.c **** *
 416:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM.c **** *  None.
 418:Generated_Source\PSoC4/SPIM.c **** *
 419:Generated_Source\PSoC4/SPIM.c **** * Return:
 420:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM.c **** *
 422:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM.c **** *
 426:Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM.c **** *
 430:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM.c **** *
 433:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM.c **** *  No.
 435:Generated_Source\PSoC4/SPIM.c **** *
 436:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM.c **** {
 290              		.loc 1 438 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 439:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM.c **** 
 441:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM.c **** 
 445:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 14


 448:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM.c **** 
 450:Generated_Source\PSoC4/SPIM.c ****     #else
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 295              		.loc 1 452 0
 296 0000 014B     		ldr	r3, .L21
 297 0002 1878     		ldrb	r0, [r3]
 298 0004 C0B2     		uxtb	r0, r0
 299              	.LVL9:
 453:Generated_Source\PSoC4/SPIM.c **** 
 454:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM.c **** 
 456:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 457:Generated_Source\PSoC4/SPIM.c **** }
 300              		.loc 1 457 0
 301              		@ sp needed
 302 0006 7047     		bx	lr
 303              	.L22:
 304              		.align	2
 305              	.L21:
 306 0008 61000F40 		.word	1074724961
 307              		.cfi_endproc
 308              	.LFE11:
 309              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 310              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 311              		.align	2
 312              		.global	SPIM_WriteTxData
 313              		.code	16
 314              		.thumb_func
 315              		.type	SPIM_WriteTxData, %function
 316              	SPIM_WriteTxData:
 317              	.LFB12:
 458:Generated_Source\PSoC4/SPIM.c **** 
 459:Generated_Source\PSoC4/SPIM.c **** 
 460:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM.c **** *
 464:Generated_Source\PSoC4/SPIM.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM.c **** *
 467:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM.c **** *
 470:Generated_Source\PSoC4/SPIM.c **** * Return:
 471:Generated_Source\PSoC4/SPIM.c **** *  None.
 472:Generated_Source\PSoC4/SPIM.c **** *
 473:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 15


 482:Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM.c **** *
 485:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM.c **** *
 490:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM.c **** *  No.
 492:Generated_Source\PSoC4/SPIM.c **** *
 493:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM.c **** {
 318              		.loc 1 495 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323              	.LVL10:
 324              	.L24:
 496:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM.c **** 
 501:Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM.c ****         do
 503:Generated_Source\PSoC4/SPIM.c ****         {
 504:Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM.c ****             {
 507:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM.c ****             }
 509:Generated_Source\PSoC4/SPIM.c ****             else
 510:Generated_Source\PSoC4/SPIM.c ****             {
 511:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM.c ****             }
 513:Generated_Source\PSoC4/SPIM.c **** 
 514:Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM.c **** 
 516:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM.c **** 
 519:Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM.c **** 
 522:Generated_Source\PSoC4/SPIM.c **** 
 523:Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM.c ****         {
 526:Generated_Source\PSoC4/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/SPIM.c ****         }
 529:Generated_Source\PSoC4/SPIM.c ****         else
 530:Generated_Source\PSoC4/SPIM.c ****         {
 531:Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 16


 532:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM.c ****             {
 535:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM.c ****             }
 537:Generated_Source\PSoC4/SPIM.c **** 
 538:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC4/SPIM.c ****             {
 540:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM.c ****                 {
 543:Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM.c ****                 }
 545:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM.c ****             }
 547:Generated_Source\PSoC4/SPIM.c **** 
 548:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM.c **** 
 550:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM.c ****         }
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM.c **** 
 555:Generated_Source\PSoC4/SPIM.c ****     #else
 556:Generated_Source\PSoC4/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 325              		.loc 1 557 0 discriminator 1
 326 0000 034B     		ldr	r3, .L25
 327 0002 1B78     		ldrb	r3, [r3]
 328 0004 5B07     		lsls	r3, r3, #29
 329 0006 FBD5     		bpl	.L24
 558:Generated_Source\PSoC4/SPIM.c ****         {
 559:Generated_Source\PSoC4/SPIM.c ****         }
 560:Generated_Source\PSoC4/SPIM.c **** 
 561:Generated_Source\PSoC4/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 330              		.loc 1 562 0
 331 0008 024B     		ldr	r3, .L25+4
 332 000a 1870     		strb	r0, [r3]
 563:Generated_Source\PSoC4/SPIM.c **** 
 564:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM.c **** }
 333              		.loc 1 565 0
 334              		@ sp needed
 335 000c 7047     		bx	lr
 336              	.L26:
 337 000e C046     		.align	2
 338              	.L25:
 339 0010 60000F40 		.word	1074724960
 340 0014 43000F40 		.word	1074724931
 341              		.cfi_endproc
 342              	.LFE12:
 343              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 344              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 345              		.align	2
 346              		.global	SPIM_ReadRxData
 347              		.code	16
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 17


 348              		.thumb_func
 349              		.type	SPIM_ReadRxData, %function
 350              	SPIM_ReadRxData:
 351              	.LFB13:
 566:Generated_Source\PSoC4/SPIM.c **** 
 567:Generated_Source\PSoC4/SPIM.c **** 
 568:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM.c **** *
 572:Generated_Source\PSoC4/SPIM.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM.c **** *
 575:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM.c **** *  None.
 577:Generated_Source\PSoC4/SPIM.c **** *
 578:Generated_Source\PSoC4/SPIM.c **** * Return:
 579:Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM.c **** *
 581:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM.c **** *
 590:Generated_Source\PSoC4/SPIM.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM.c **** *
 593:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM.c **** *
 598:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM.c **** *  No.
 600:Generated_Source\PSoC4/SPIM.c **** *
 601:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM.c **** {
 352              		.loc 1 603 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 604:Generated_Source\PSoC4/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM.c **** 
 606:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM.c **** 
 608:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM.c **** 
 611:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM.c ****         {
 613:Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 18


 614:Generated_Source\PSoC4/SPIM.c ****             {
 615:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM.c ****                 {
 618:Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM.c ****                 }
 620:Generated_Source\PSoC4/SPIM.c ****             }
 621:Generated_Source\PSoC4/SPIM.c ****             else
 622:Generated_Source\PSoC4/SPIM.c ****             {
 623:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM.c ****             }
 625:Generated_Source\PSoC4/SPIM.c ****         }
 626:Generated_Source\PSoC4/SPIM.c **** 
 627:Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:Generated_Source\PSoC4/SPIM.c **** 
 629:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM.c **** 
 631:Generated_Source\PSoC4/SPIM.c ****     #else
 632:Generated_Source\PSoC4/SPIM.c **** 
 633:Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 357              		.loc 1 633 0
 358 0000 014B     		ldr	r3, .L28
 359 0002 1878     		ldrb	r0, [r3]
 360 0004 C0B2     		uxtb	r0, r0
 361              	.LVL11:
 634:Generated_Source\PSoC4/SPIM.c **** 
 635:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM.c **** 
 637:Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 638:Generated_Source\PSoC4/SPIM.c **** }
 362              		.loc 1 638 0
 363              		@ sp needed
 364 0006 7047     		bx	lr
 365              	.L29:
 366              		.align	2
 367              	.L28:
 368 0008 53000F40 		.word	1074724947
 369              		.cfi_endproc
 370              	.LFE13:
 371              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 372              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 373              		.align	2
 374              		.global	SPIM_GetRxBufferSize
 375              		.code	16
 376              		.thumb_func
 377              		.type	SPIM_GetRxBufferSize, %function
 378              	SPIM_GetRxBufferSize:
 379              	.LFB14:
 639:Generated_Source\PSoC4/SPIM.c **** 
 640:Generated_Source\PSoC4/SPIM.c **** 
 641:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM.c **** *
 645:Generated_Source\PSoC4/SPIM.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 19


 648:Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM.c **** *
 650:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM.c **** *  None.
 652:Generated_Source\PSoC4/SPIM.c **** *
 653:Generated_Source\PSoC4/SPIM.c **** * Return:
 654:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM.c **** *
 656:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM.c **** *
 662:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM.c **** *
 665:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM.c **** {
 380              		.loc 1 667 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 668:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM.c **** 
 670:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM.c ****         {
 677:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM.c ****         }
 679:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM.c ****         {
 681:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM.c ****         }
 683:Generated_Source\PSoC4/SPIM.c ****         else
 684:Generated_Source\PSoC4/SPIM.c ****         {
 685:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM.c ****         }
 687:Generated_Source\PSoC4/SPIM.c **** 
 688:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM.c **** 
 690:Generated_Source\PSoC4/SPIM.c ****     #else
 691:Generated_Source\PSoC4/SPIM.c **** 
 692:Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 385              		.loc 1 693 0
 386 0000 034B     		ldr	r3, .L33
 387 0002 1B78     		ldrb	r3, [r3]
 388 0004 9B06     		lsls	r3, r3, #26
 389 0006 01D5     		bpl	.L32
 390 0008 0120     		movs	r0, #1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 20


 391 000a 00E0     		b	.L31
 392              	.L32:
 393 000c 0020     		movs	r0, #0
 394              	.L31:
 395              	.LVL12:
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM.c **** 
 697:Generated_Source\PSoC4/SPIM.c ****     return(size);
 698:Generated_Source\PSoC4/SPIM.c **** }
 396              		.loc 1 698 0 discriminator 4
 397              		@ sp needed
 398 000e 7047     		bx	lr
 399              	.L34:
 400              		.align	2
 401              	.L33:
 402 0010 61000F40 		.word	1074724961
 403              		.cfi_endproc
 404              	.LFE14:
 405              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 406              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 407              		.align	2
 408              		.global	SPIM_GetTxBufferSize
 409              		.code	16
 410              		.thumb_func
 411              		.type	SPIM_GetTxBufferSize, %function
 412              	SPIM_GetTxBufferSize:
 413              	.LFB15:
 699:Generated_Source\PSoC4/SPIM.c **** 
 700:Generated_Source\PSoC4/SPIM.c **** 
 701:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM.c **** *
 705:Generated_Source\PSoC4/SPIM.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM.c **** *
 711:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM.c **** *  None.
 713:Generated_Source\PSoC4/SPIM.c **** *
 714:Generated_Source\PSoC4/SPIM.c **** * Return:
 715:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM.c **** *
 717:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM.c **** *
 723:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM.c **** *
 726:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 21


 728:Generated_Source\PSoC4/SPIM.c **** {
 414              		.loc 1 728 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 729:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM.c **** 
 735:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM.c ****         {
 737:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM.c ****         }
 739:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM.c ****         {
 741:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC4/SPIM.c ****         }
 743:Generated_Source\PSoC4/SPIM.c ****         else
 744:Generated_Source\PSoC4/SPIM.c ****         {
 745:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM.c ****         }
 747:Generated_Source\PSoC4/SPIM.c **** 
 748:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM.c **** 
 750:Generated_Source\PSoC4/SPIM.c ****     #else
 751:Generated_Source\PSoC4/SPIM.c **** 
 752:Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 419              		.loc 1 752 0
 420 0000 064B     		ldr	r3, .L39
 421 0002 1B78     		ldrb	r3, [r3]
 422 0004 DBB2     		uxtb	r3, r3
 423              	.LVL13:
 753:Generated_Source\PSoC4/SPIM.c **** 
 754:Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 424              		.loc 1 754 0
 425 0006 9A07     		lsls	r2, r3, #30
 426 0008 03D4     		bmi	.L37
 755:Generated_Source\PSoC4/SPIM.c ****         {
 756:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 757:Generated_Source\PSoC4/SPIM.c ****         }
 758:Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 427              		.loc 1 758 0
 428 000a 5B07     		lsls	r3, r3, #29
 429 000c 03D5     		bpl	.L38
 430              	.LVL14:
 759:Generated_Source\PSoC4/SPIM.c ****         {
 760:Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 431              		.loc 1 760 0
 432 000e 0120     		movs	r0, #1
 433 0010 02E0     		b	.L36
 434              	.LVL15:
 435              	.L37:
 756:Generated_Source\PSoC4/SPIM.c ****         }
 436              		.loc 1 756 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 22


 437 0012 0020     		movs	r0, #0
 438 0014 00E0     		b	.L36
 439              	.LVL16:
 440              	.L38:
 761:Generated_Source\PSoC4/SPIM.c ****         }
 762:Generated_Source\PSoC4/SPIM.c ****         else
 763:Generated_Source\PSoC4/SPIM.c ****         {
 764:Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 441              		.loc 1 764 0
 442 0016 0420     		movs	r0, #4
 443              	.L36:
 444              	.LVL17:
 765:Generated_Source\PSoC4/SPIM.c ****         }
 766:Generated_Source\PSoC4/SPIM.c **** 
 767:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM.c **** 
 769:Generated_Source\PSoC4/SPIM.c ****     return(size);
 770:Generated_Source\PSoC4/SPIM.c **** }
 445              		.loc 1 770 0
 446              		@ sp needed
 447 0018 7047     		bx	lr
 448              	.L40:
 449 001a C046     		.align	2
 450              	.L39:
 451 001c 60000F40 		.word	1074724960
 452              		.cfi_endproc
 453              	.LFE15:
 454              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 455              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 456              		.align	2
 457              		.global	SPIM_ClearRxBuffer
 458              		.code	16
 459              		.thumb_func
 460              		.type	SPIM_ClearRxBuffer, %function
 461              	SPIM_ClearRxBuffer:
 462              	.LFB16:
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c **** 
 773:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM.c **** *
 777:Generated_Source\PSoC4/SPIM.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM.c **** *
 780:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM.c **** *  None.
 782:Generated_Source\PSoC4/SPIM.c **** *
 783:Generated_Source\PSoC4/SPIM.c **** * Return:
 784:Generated_Source\PSoC4/SPIM.c **** *  None.
 785:Generated_Source\PSoC4/SPIM.c **** *
 786:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 23


 792:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM.c **** *
 794:Generated_Source\PSoC4/SPIM.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM.c **** *
 799:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM.c **** *
 802:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM.c **** *  No.
 804:Generated_Source\PSoC4/SPIM.c **** *
 805:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM.c **** {
 463              		.loc 1 807 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 808:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 468              		.loc 1 809 0
 469 0000 01E0     		b	.L42
 470              	.L43:
 810:Generated_Source\PSoC4/SPIM.c ****     {
 811:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 471              		.loc 1 811 0
 472 0002 034B     		ldr	r3, .L44
 473 0004 1B78     		ldrb	r3, [r3]
 474              	.L42:
 809:Generated_Source\PSoC4/SPIM.c ****     {
 475              		.loc 1 809 0
 476 0006 034B     		ldr	r3, .L44+4
 477 0008 1B78     		ldrb	r3, [r3]
 478 000a 9B06     		lsls	r3, r3, #26
 479 000c F9D4     		bmi	.L43
 812:Generated_Source\PSoC4/SPIM.c ****     }
 813:Generated_Source\PSoC4/SPIM.c **** 
 814:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM.c **** 
 818:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM.c **** 
 822:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM.c **** }
 480              		.loc 1 824 0
 481              		@ sp needed
 482 000e 7047     		bx	lr
 483              	.L45:
 484              		.align	2
 485              	.L44:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 24


 486 0010 53000F40 		.word	1074724947
 487 0014 61000F40 		.word	1074724961
 488              		.cfi_endproc
 489              	.LFE16:
 490              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 491              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 492              		.align	2
 493              		.global	SPIM_ClearTxBuffer
 494              		.code	16
 495              		.thumb_func
 496              		.type	SPIM_ClearTxBuffer, %function
 497              	SPIM_ClearTxBuffer:
 498              	.LFB17:
 825:Generated_Source\PSoC4/SPIM.c **** 
 826:Generated_Source\PSoC4/SPIM.c **** 
 827:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM.c **** *
 831:Generated_Source\PSoC4/SPIM.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM.c **** *
 834:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM.c **** *  None.
 836:Generated_Source\PSoC4/SPIM.c **** *
 837:Generated_Source\PSoC4/SPIM.c **** * Return:
 838:Generated_Source\PSoC4/SPIM.c **** *  None.
 839:Generated_Source\PSoC4/SPIM.c **** *
 840:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM.c **** *
 848:Generated_Source\PSoC4/SPIM.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM.c **** *
 853:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM.c **** *
 857:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM.c **** *  No.
 859:Generated_Source\PSoC4/SPIM.c **** *
 860:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM.c **** {
 499              		.loc 1 862 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 10B5     		push	{r4, lr}
 504              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 25


 505              		.cfi_offset 4, -8
 506              		.cfi_offset 14, -4
 863:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM.c **** 
 865:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 507              		.loc 1 865 0
 508 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 509              	.LVL18:
 866:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 510              		.loc 1 867 0
 511 0006 064A     		ldr	r2, .L47
 512 0008 1178     		ldrb	r1, [r2]
 513 000a 0123     		movs	r3, #1
 514 000c 0B43     		orrs	r3, r1
 515 000e DBB2     		uxtb	r3, r3
 516 0010 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 517              		.loc 1 868 0
 518 0012 1378     		ldrb	r3, [r2]
 519 0014 0121     		movs	r1, #1
 520 0016 8B43     		bics	r3, r1
 521 0018 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/SPIM.c **** 
 870:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 522              		.loc 1 875 0
 523 001a FFF7FEFF 		bl	CyExitCriticalSection
 524              	.LVL19:
 876:Generated_Source\PSoC4/SPIM.c **** 
 877:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM.c **** 
 881:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM.c **** 
 885:Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM.c **** 
 888:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 889:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM.c **** }
 525              		.loc 1 890 0
 526              		@ sp needed
 527 001e 10BD     		pop	{r4, pc}
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0020 93000F40 		.word	1074725011
 532              		.cfi_endproc
 533              	.LFE17:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 26


 534              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 535              		.section	.text.SPIM_PutArray,"ax",%progbits
 536              		.align	2
 537              		.global	SPIM_PutArray
 538              		.code	16
 539              		.thumb_func
 540              		.type	SPIM_PutArray, %function
 541              	SPIM_PutArray:
 542              	.LFB18:
 891:Generated_Source\PSoC4/SPIM.c **** 
 892:Generated_Source\PSoC4/SPIM.c **** 
 893:Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM.c ****     *
 898:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM.c ****     *
 902:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM.c ****     *
 905:Generated_Source\PSoC4/SPIM.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM.c ****     *
 908:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM.c ****     {
 911:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM.c ****     }
 913:Generated_Source\PSoC4/SPIM.c **** 
 914:Generated_Source\PSoC4/SPIM.c **** 
 915:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM.c ****     *
 919:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM.c ****     *
 923:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM.c ****     *
 926:Generated_Source\PSoC4/SPIM.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM.c ****     *
 929:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM.c ****     {
 932:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM.c ****     }
 934:Generated_Source\PSoC4/SPIM.c **** 
 935:Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM.c **** 
 937:Generated_Source\PSoC4/SPIM.c **** 
 938:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 27


 939:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM.c **** *
 942:Generated_Source\PSoC4/SPIM.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM.c **** *
 946:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM.c **** *
 950:Generated_Source\PSoC4/SPIM.c **** * Return:
 951:Generated_Source\PSoC4/SPIM.c **** *  None.
 952:Generated_Source\PSoC4/SPIM.c **** *
 953:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM.c **** *
 958:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM.c **** *  No.
 960:Generated_Source\PSoC4/SPIM.c **** *
 961:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM.c **** {
 543              		.loc 1 964 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              	.LVL20:
 548 0000 70B5     		push	{r4, r5, r6, lr}
 549              		.cfi_def_cfa_offset 16
 550              		.cfi_offset 4, -16
 551              		.cfi_offset 5, -12
 552              		.cfi_offset 6, -8
 553              		.cfi_offset 14, -4
 554 0002 0600     		movs	r6, r0
 555 0004 0C00     		movs	r4, r1
 556              	.LVL21:
 965:Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM.c **** 
 967:Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 557              		.loc 1 967 0
 558 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC4/SPIM.c **** 
 969:Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 559              		.loc 1 969 0
 560 0008 06E0     		b	.L50
 561              	.LVL22:
 562              	.L51:
 970:Generated_Source\PSoC4/SPIM.c ****     {
 971:Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 563              		.loc 1 971 0
 564 000a 705D     		ldrb	r0, [r6, r5]
 565 000c FFF7FEFF 		bl	SPIM_WriteTxData
 566              	.LVL23:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 28


 972:Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 567              		.loc 1 972 0
 568 0010 0135     		adds	r5, r5, #1
 569              	.LVL24:
 570 0012 EDB2     		uxtb	r5, r5
 571              	.LVL25:
 973:Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 572              		.loc 1 973 0
 573 0014 013C     		subs	r4, r4, #1
 574              	.LVL26:
 575 0016 E4B2     		uxtb	r4, r4
 576              	.LVL27:
 577              	.L50:
 969:Generated_Source\PSoC4/SPIM.c ****     {
 578              		.loc 1 969 0
 579 0018 002C     		cmp	r4, #0
 580 001a F6D1     		bne	.L51
 974:Generated_Source\PSoC4/SPIM.c ****     }
 975:Generated_Source\PSoC4/SPIM.c **** }
 581              		.loc 1 975 0
 582              		@ sp needed
 583              	.LVL28:
 584              	.LVL29:
 585              	.LVL30:
 586 001c 70BD     		pop	{r4, r5, r6, pc}
 587              		.cfi_endproc
 588              	.LFE18:
 589              		.size	SPIM_PutArray, .-SPIM_PutArray
 590 001e C046     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 591              		.align	2
 592              		.global	SPIM_ClearFIFO
 593              		.code	16
 594              		.thumb_func
 595              		.type	SPIM_ClearFIFO, %function
 596              	SPIM_ClearFIFO:
 597              	.LFB19:
 976:Generated_Source\PSoC4/SPIM.c **** 
 977:Generated_Source\PSoC4/SPIM.c **** 
 978:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM.c **** *
 982:Generated_Source\PSoC4/SPIM.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM.c **** *
 985:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM.c **** *  None.
 987:Generated_Source\PSoC4/SPIM.c **** *
 988:Generated_Source\PSoC4/SPIM.c **** * Return:
 989:Generated_Source\PSoC4/SPIM.c **** *  None.
 990:Generated_Source\PSoC4/SPIM.c **** *
 991:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM.c **** *
 994:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM.c **** {
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 29


 598              		.loc 1 996 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602 0000 10B5     		push	{r4, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 997:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM.c **** 
 999:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 606              		.loc 1 1000 0
 607 0002 01E0     		b	.L53
 608              	.L54:
1001:Generated_Source\PSoC4/SPIM.c ****     {
1002:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 609              		.loc 1 1002 0
 610 0004 0A4B     		ldr	r3, .L55
 611 0006 1B78     		ldrb	r3, [r3]
 612              	.L53:
1000:Generated_Source\PSoC4/SPIM.c ****     {
 613              		.loc 1 1000 0
 614 0008 0A4B     		ldr	r3, .L55+4
 615 000a 1B78     		ldrb	r3, [r3]
 616 000c 9B06     		lsls	r3, r3, #26
 617 000e F9D4     		bmi	.L54
1003:Generated_Source\PSoC4/SPIM.c ****     }
1004:Generated_Source\PSoC4/SPIM.c **** 
1005:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 618              		.loc 1 1005 0
 619 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 620              	.LVL31:
1006:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 621              		.loc 1 1007 0
 622 0014 084A     		ldr	r2, .L55+8
 623 0016 1178     		ldrb	r1, [r2]
 624 0018 0123     		movs	r3, #1
 625 001a 0B43     		orrs	r3, r1
 626 001c DBB2     		uxtb	r3, r3
 627 001e 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 628              		.loc 1 1008 0
 629 0020 1378     		ldrb	r3, [r2]
 630 0022 0121     		movs	r1, #1
 631 0024 8B43     		bics	r3, r1
 632 0026 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM.c **** 
1010:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 633              		.loc 1 1015 0
 634 0028 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 30


 635              	.LVL32:
1016:Generated_Source\PSoC4/SPIM.c **** }
 636              		.loc 1 1016 0
 637              		@ sp needed
 638 002c 10BD     		pop	{r4, pc}
 639              	.L56:
 640 002e C046     		.align	2
 641              	.L55:
 642 0030 53000F40 		.word	1074724947
 643 0034 61000F40 		.word	1074724961
 644 0038 93000F40 		.word	1074725011
 645              		.cfi_endproc
 646              	.LFE19:
 647              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 648              		.section	.text.SPIM_Init,"ax",%progbits
 649              		.align	2
 650              		.global	SPIM_Init
 651              		.code	16
 652              		.thumb_func
 653              		.type	SPIM_Init, %function
 654              	SPIM_Init:
 655              	.LFB0:
  64:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
 656              		.loc 1 64 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660 0000 10B5     		push	{r4, lr}
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 4, -8
 663              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/SPIM.c **** 
 664              		.loc 1 66 0
 665 0002 0F22     		movs	r2, #15
 666 0004 064B     		ldr	r3, .L58
 667 0006 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC4/SPIM.c **** 
 668              		.loc 1 83 0
 669 0008 FFF7FEFF 		bl	SPIM_ClearFIFO
 670              	.LVL33:
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 671              		.loc 1 97 0
 672 000c FFF7FEFF 		bl	SPIM_ReadTxStatus
 673              	.LVL34:
  98:Generated_Source\PSoC4/SPIM.c **** 
 674              		.loc 1 98 0
 675 0010 FFF7FEFF 		bl	SPIM_ReadRxStatus
 676              	.LVL35:
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 677              		.loc 1 101 0
 678 0014 0023     		movs	r3, #0
 679 0016 034A     		ldr	r2, .L58+4
 680 0018 1370     		strb	r3, [r2]
 102:Generated_Source\PSoC4/SPIM.c **** }
 681              		.loc 1 102 0
 682 001a 034A     		ldr	r2, .L58+8
 683 001c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 31


 103:Generated_Source\PSoC4/SPIM.c **** 
 684              		.loc 1 103 0
 685              		@ sp needed
 686 001e 10BD     		pop	{r4, pc}
 687              	.L59:
 688              		.align	2
 689              	.L58:
 690 0020 83000F40 		.word	1074724995
 691 0024 80000F40 		.word	1074724992
 692 0028 81000F40 		.word	1074724993
 693              		.cfi_endproc
 694              	.LFE0:
 695              		.size	SPIM_Init, .-SPIM_Init
 696              		.section	.text.SPIM_Start,"ax",%progbits
 697              		.align	2
 698              		.global	SPIM_Start
 699              		.code	16
 700              		.thumb_func
 701              		.type	SPIM_Start, %function
 702              	SPIM_Start:
 703              	.LFB2:
 164:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 704              		.loc 1 164 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 165:Generated_Source\PSoC4/SPIM.c ****     {
 712              		.loc 1 165 0
 713 0002 064B     		ldr	r3, .L62
 714 0004 1B78     		ldrb	r3, [r3]
 715 0006 002B     		cmp	r3, #0
 716 0008 04D1     		bne	.L61
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 717              		.loc 1 167 0
 718 000a FFF7FEFF 		bl	SPIM_Init
 719              	.LVL36:
 168:Generated_Source\PSoC4/SPIM.c ****     }
 720              		.loc 1 168 0
 721 000e 0122     		movs	r2, #1
 722 0010 024B     		ldr	r3, .L62
 723 0012 1A70     		strb	r2, [r3]
 724              	.L61:
 171:Generated_Source\PSoC4/SPIM.c **** }
 725              		.loc 1 171 0
 726 0014 FFF7FEFF 		bl	SPIM_Enable
 727              	.LVL37:
 172:Generated_Source\PSoC4/SPIM.c **** 
 728              		.loc 1 172 0
 729              		@ sp needed
 730 0018 10BD     		pop	{r4, pc}
 731              	.L63:
 732 001a C046     		.align	2
 733              	.L62:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 32


 734 001c 00000000 		.word	.LANCHOR0
 735              		.cfi_endproc
 736              	.LFE2:
 737              		.size	SPIM_Start, .-SPIM_Start
 738              		.section	.text.SPIM_EnableInt,"ax",%progbits
 739              		.align	2
 740              		.global	SPIM_EnableInt
 741              		.code	16
 742              		.thumb_func
 743              		.type	SPIM_EnableInt, %function
 744              	SPIM_EnableInt:
 745              	.LFB20:
1017:Generated_Source\PSoC4/SPIM.c **** 
1018:Generated_Source\PSoC4/SPIM.c **** 
1019:Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM.c **** */
1022:Generated_Source\PSoC4/SPIM.c **** 
1023:Generated_Source\PSoC4/SPIM.c **** 
1024:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM.c **** *
1028:Generated_Source\PSoC4/SPIM.c **** * Summary:
1029:Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM.c **** *
1031:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM.c **** *  None.
1033:Generated_Source\PSoC4/SPIM.c **** *
1034:Generated_Source\PSoC4/SPIM.c **** * Return:
1035:Generated_Source\PSoC4/SPIM.c **** *  None.
1036:Generated_Source\PSoC4/SPIM.c **** *
1037:Generated_Source\PSoC4/SPIM.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM.c **** *
1040:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM.c **** {
 746              		.loc 1 1042 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
1043:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
1044:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
1045:Generated_Source\PSoC4/SPIM.c **** }
 751              		.loc 1 1045 0
 752              		@ sp needed
 753 0000 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE20:
 756              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 757 0002 C046     		.section	.text.SPIM_DisableInt,"ax",%progbits
 758              		.align	2
 759              		.global	SPIM_DisableInt
 760              		.code	16
 761              		.thumb_func
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 33


 762              		.type	SPIM_DisableInt, %function
 763              	SPIM_DisableInt:
 764              	.LFB21:
1046:Generated_Source\PSoC4/SPIM.c **** 
1047:Generated_Source\PSoC4/SPIM.c **** 
1048:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM.c **** *
1052:Generated_Source\PSoC4/SPIM.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM.c **** *
1055:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM.c **** *  None.
1057:Generated_Source\PSoC4/SPIM.c **** *
1058:Generated_Source\PSoC4/SPIM.c **** * Return:
1059:Generated_Source\PSoC4/SPIM.c **** *  None.
1060:Generated_Source\PSoC4/SPIM.c **** *
1061:Generated_Source\PSoC4/SPIM.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM.c **** *
1064:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM.c **** {
 765              		.loc 1 1066 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
1067:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
1068:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
1069:Generated_Source\PSoC4/SPIM.c **** }
 770              		.loc 1 1069 0
 771              		@ sp needed
 772 0000 7047     		bx	lr
 773              		.cfi_endproc
 774              	.LFE21:
 775              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 776 0002 C046     		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 777              		.align	2
 778              		.global	SPIM_SetInterruptMode
 779              		.code	16
 780              		.thumb_func
 781              		.type	SPIM_SetInterruptMode, %function
 782              	SPIM_SetInterruptMode:
 783              	.LFB22:
1070:Generated_Source\PSoC4/SPIM.c **** 
1071:Generated_Source\PSoC4/SPIM.c **** 
1072:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM.c **** *
1076:Generated_Source\PSoC4/SPIM.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM.c **** *
1079:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 34


1081:Generated_Source\PSoC4/SPIM.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM.c **** *
1083:Generated_Source\PSoC4/SPIM.c **** * Return:
1084:Generated_Source\PSoC4/SPIM.c **** *  None.
1085:Generated_Source\PSoC4/SPIM.c **** *
1086:Generated_Source\PSoC4/SPIM.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM.c **** *
1089:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM.c **** {
 784              		.loc 1 1091 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789              	.LVL38:
1092:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 790              		.loc 1 1092 0
 791 0000 1023     		movs	r3, #16
 792 0002 0200     		movs	r2, r0
 793 0004 9A43     		bics	r2, r3
 794 0006 024B     		ldr	r3, .L67
 795 0008 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 796              		.loc 1 1093 0
 797 000a 024B     		ldr	r3, .L67+4
 798 000c 1870     		strb	r0, [r3]
1094:Generated_Source\PSoC4/SPIM.c **** }
 799              		.loc 1 1094 0
 800              		@ sp needed
 801 000e 7047     		bx	lr
 802              	.L68:
 803              		.align	2
 804              	.L67:
 805 0010 80000F40 		.word	1074724992
 806 0014 81000F40 		.word	1074724993
 807              		.cfi_endproc
 808              	.LFE22:
 809              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 810              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 811              		.align	2
 812              		.global	SPIM_ReadStatus
 813              		.code	16
 814              		.thumb_func
 815              		.type	SPIM_ReadStatus, %function
 816              	SPIM_ReadStatus:
 817              	.LFB23:
1095:Generated_Source\PSoC4/SPIM.c **** 
1096:Generated_Source\PSoC4/SPIM.c **** 
1097:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM.c **** *
1101:Generated_Source\PSoC4/SPIM.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 35


1104:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM.c **** *  None.
1106:Generated_Source\PSoC4/SPIM.c **** *
1107:Generated_Source\PSoC4/SPIM.c **** * Return:
1108:Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM.c **** *
1110:Generated_Source\PSoC4/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM.c **** *
1114:Generated_Source\PSoC4/SPIM.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM.c **** *
1118:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM.c **** *
1121:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM.c **** *  No.
1123:Generated_Source\PSoC4/SPIM.c **** *
1124:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM.c **** {
 818              		.loc 1 1126 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
1127:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM.c **** 
1129:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM.c **** 
1131:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
1132:Generated_Source\PSoC4/SPIM.c **** 
1133:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM.c **** 
1137:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM.c **** 
1140:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC4/SPIM.c **** 
1142:Generated_Source\PSoC4/SPIM.c ****     #else
1143:Generated_Source\PSoC4/SPIM.c **** 
1144:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 823              		.loc 1 1144 0
 824 0000 034B     		ldr	r3, .L70
 825 0002 1B78     		ldrb	r3, [r3]
 826              	.LVL39:
1145:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 827              		.loc 1 1145 0
 828 0004 034A     		ldr	r2, .L70+4
 829 0006 1078     		ldrb	r0, [r2]
 830 0008 1843     		orrs	r0, r3
 831              	.LVL40:
1146:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 36


 832              		.loc 1 1146 0
 833 000a 1023     		movs	r3, #16
 834 000c 9843     		bics	r0, r3
 835              	.LVL41:
1147:Generated_Source\PSoC4/SPIM.c **** 
1148:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM.c **** 
1150:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
1151:Generated_Source\PSoC4/SPIM.c **** }
 836              		.loc 1 1151 0
 837              		@ sp needed
 838 000e 7047     		bx	lr
 839              	.L71:
 840              		.align	2
 841              	.L70:
 842 0010 61000F40 		.word	1074724961
 843 0014 60000F40 		.word	1074724960
 844              		.cfi_endproc
 845              	.LFE23:
 846              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 847              		.comm	SPIM_swStatusRx,1,1
 848              		.comm	SPIM_swStatusTx,1,1
 849              		.global	SPIM_initVar
 850              		.bss
 851              		.set	.LANCHOR0,. + 0
 852              		.type	SPIM_initVar, %object
 853              		.size	SPIM_initVar, 1
 854              	SPIM_initVar:
 855 0000 00       		.space	1
 856              		.text
 857              	.Letext0:
 858              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 859              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 860              		.file 4 "Generated_Source\\PSoC4\\SPIM_IntClock.h"
 861              		.section	.debug_info,"",%progbits
 862              	.Ldebug_info0:
 863 0000 B7040000 		.4byte	0x4b7
 864 0004 0400     		.2byte	0x4
 865 0006 00000000 		.4byte	.Ldebug_abbrev0
 866 000a 04       		.byte	0x4
 867 000b 01       		.uleb128 0x1
 868 000c 9F020000 		.4byte	.LASF56
 869 0010 0C       		.byte	0xc
 870 0011 14010000 		.4byte	.LASF57
 871 0015 3A000000 		.4byte	.LASF58
 872 0019 00000000 		.4byte	.Ldebug_ranges0+0
 873 001d 00000000 		.4byte	0
 874 0021 00000000 		.4byte	.Ldebug_line0
 875 0025 02       		.uleb128 0x2
 876 0026 01       		.byte	0x1
 877 0027 06       		.byte	0x6
 878 0028 E4030000 		.4byte	.LASF0
 879 002c 02       		.uleb128 0x2
 880 002d 01       		.byte	0x1
 881 002e 08       		.byte	0x8
 882 002f C6010000 		.4byte	.LASF1
 883 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 37


 884 0034 02       		.byte	0x2
 885 0035 05       		.byte	0x5
 886 0036 70030000 		.4byte	.LASF2
 887 003a 02       		.uleb128 0x2
 888 003b 02       		.byte	0x2
 889 003c 07       		.byte	0x7
 890 003d 96000000 		.4byte	.LASF3
 891 0041 02       		.uleb128 0x2
 892 0042 04       		.byte	0x4
 893 0043 05       		.byte	0x5
 894 0044 C5030000 		.4byte	.LASF4
 895 0048 02       		.uleb128 0x2
 896 0049 04       		.byte	0x4
 897 004a 07       		.byte	0x7
 898 004b 7F010000 		.4byte	.LASF5
 899 004f 02       		.uleb128 0x2
 900 0050 08       		.byte	0x8
 901 0051 05       		.byte	0x5
 902 0052 36030000 		.4byte	.LASF6
 903 0056 02       		.uleb128 0x2
 904 0057 08       		.byte	0x8
 905 0058 07       		.byte	0x7
 906 0059 38010000 		.4byte	.LASF7
 907 005d 03       		.uleb128 0x3
 908 005e 04       		.byte	0x4
 909 005f 05       		.byte	0x5
 910 0060 696E7400 		.ascii	"int\000"
 911 0064 02       		.uleb128 0x2
 912 0065 04       		.byte	0x4
 913 0066 07       		.byte	0x7
 914 0067 57020000 		.4byte	.LASF8
 915 006b 04       		.uleb128 0x4
 916 006c 91010000 		.4byte	.LASF12
 917 0070 02       		.byte	0x2
 918 0071 E401     		.2byte	0x1e4
 919 0073 2C000000 		.4byte	0x2c
 920 0077 02       		.uleb128 0x2
 921 0078 04       		.byte	0x4
 922 0079 04       		.byte	0x4
 923 007a 32010000 		.4byte	.LASF9
 924 007e 02       		.uleb128 0x2
 925 007f 08       		.byte	0x8
 926 0080 04       		.byte	0x4
 927 0081 E6010000 		.4byte	.LASF10
 928 0085 02       		.uleb128 0x2
 929 0086 01       		.byte	0x1
 930 0087 08       		.byte	0x8
 931 0088 A9000000 		.4byte	.LASF11
 932 008c 04       		.uleb128 0x4
 933 008d 69010000 		.4byte	.LASF13
 934 0091 02       		.byte	0x2
 935 0092 8E02     		.2byte	0x28e
 936 0094 98000000 		.4byte	0x98
 937 0098 05       		.uleb128 0x5
 938 0099 6B000000 		.4byte	0x6b
 939 009d 02       		.uleb128 0x2
 940 009e 08       		.byte	0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 38


 941 009f 04       		.byte	0x4
 942 00a0 D8030000 		.4byte	.LASF14
 943 00a4 02       		.uleb128 0x2
 944 00a5 04       		.byte	0x4
 945 00a6 07       		.byte	0x7
 946 00a7 2D030000 		.4byte	.LASF15
 947 00ab 06       		.uleb128 0x6
 948 00ac 11000000 		.4byte	.LASF16
 949 00b0 01       		.byte	0x1
 950 00b1 78       		.byte	0x78
 951 00b2 00000000 		.4byte	.LFB1
 952 00b6 40000000 		.4byte	.LFE1-.LFB1
 953 00ba 01       		.uleb128 0x1
 954 00bb 9C       		.byte	0x9c
 955 00bc EB000000 		.4byte	0xeb
 956 00c0 07       		.uleb128 0x7
 957 00c1 A5010000 		.4byte	.LASF18
 958 00c5 01       		.byte	0x1
 959 00c6 7A       		.byte	0x7a
 960 00c7 6B000000 		.4byte	0x6b
 961 00cb 00000000 		.4byte	.LLST0
 962 00cf 08       		.uleb128 0x8
 963 00d0 06000000 		.4byte	.LVL0
 964 00d4 8E040000 		.4byte	0x48e
 965 00d8 08       		.uleb128 0x8
 966 00d9 2C000000 		.4byte	.LVL1
 967 00dd 99040000 		.4byte	0x499
 968 00e1 08       		.uleb128 0x8
 969 00e2 30000000 		.4byte	.LVL2
 970 00e6 A4040000 		.4byte	0x4a4
 971 00ea 00       		.byte	0
 972 00eb 06       		.uleb128 0x6
 973 00ec 1D000000 		.4byte	.LASF17
 974 00f0 01       		.byte	0x1
 975 00f1 C0       		.byte	0xc0
 976 00f2 00000000 		.4byte	.LFB3
 977 00f6 2C000000 		.4byte	.LFE3-.LFB3
 978 00fa 01       		.uleb128 0x1
 979 00fb 9C       		.byte	0x9c
 980 00fc 2B010000 		.4byte	0x12b
 981 0100 07       		.uleb128 0x7
 982 0101 A5010000 		.4byte	.LASF18
 983 0105 01       		.byte	0x1
 984 0106 C2       		.byte	0xc2
 985 0107 6B000000 		.4byte	0x6b
 986 010b 13000000 		.4byte	.LLST1
 987 010f 08       		.uleb128 0x8
 988 0110 06000000 		.4byte	.LVL3
 989 0114 8E040000 		.4byte	0x48e
 990 0118 08       		.uleb128 0x8
 991 0119 1C000000 		.4byte	.LVL4
 992 011d 99040000 		.4byte	0x499
 993 0121 08       		.uleb128 0x8
 994 0122 20000000 		.4byte	.LVL5
 995 0126 AF040000 		.4byte	0x4af
 996 012a 00       		.byte	0
 997 012b 09       		.uleb128 0x9
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 39


 998 012c 6E010000 		.4byte	.LASF19
 999 0130 01       		.byte	0x1
 1000 0131 E3       		.byte	0xe3
 1001 0132 00000000 		.4byte	.LFB4
 1002 0136 02000000 		.4byte	.LFE4-.LFB4
 1003 013a 01       		.uleb128 0x1
 1004 013b 9C       		.byte	0x9c
 1005 013c 09       		.uleb128 0x9
 1006 013d B4030000 		.4byte	.LASF20
 1007 0141 01       		.byte	0x1
 1008 0142 FC       		.byte	0xfc
 1009 0143 00000000 		.4byte	.LFB5
 1010 0147 02000000 		.4byte	.LFE5-.LFB5
 1011 014b 01       		.uleb128 0x1
 1012 014c 9C       		.byte	0x9c
 1013 014d 0A       		.uleb128 0xa
 1014 014e D4010000 		.4byte	.LASF21
 1015 0152 01       		.byte	0x1
 1016 0153 1501     		.2byte	0x115
 1017 0155 00000000 		.4byte	.LFB6
 1018 0159 02000000 		.4byte	.LFE6-.LFB6
 1019 015d 01       		.uleb128 0x1
 1020 015e 9C       		.byte	0x9c
 1021 015f 0A       		.uleb128 0xa
 1022 0160 0D040000 		.4byte	.LASF22
 1023 0164 01       		.byte	0x1
 1024 0165 2E01     		.2byte	0x12e
 1025 0167 00000000 		.4byte	.LFB7
 1026 016b 02000000 		.4byte	.LFE7-.LFB7
 1027 016f 01       		.uleb128 0x1
 1028 0170 9C       		.byte	0x9c
 1029 0171 0B       		.uleb128 0xb
 1030 0172 28020000 		.4byte	.LASF23
 1031 0176 01       		.byte	0x1
 1032 0177 4801     		.2byte	0x148
 1033 0179 00000000 		.4byte	.LFB8
 1034 017d 0C000000 		.4byte	.LFE8-.LFB8
 1035 0181 01       		.uleb128 0x1
 1036 0182 9C       		.byte	0x9c
 1037 0183 96010000 		.4byte	0x196
 1038 0187 0C       		.uleb128 0xc
 1039 0188 FC010000 		.4byte	.LASF25
 1040 018c 01       		.byte	0x1
 1041 018d 4801     		.2byte	0x148
 1042 018f 6B000000 		.4byte	0x6b
 1043 0193 01       		.uleb128 0x1
 1044 0194 50       		.byte	0x50
 1045 0195 00       		.byte	0
 1046 0196 0B       		.uleb128 0xb
 1047 0197 D8000000 		.4byte	.LASF24
 1048 019b 01       		.byte	0x1
 1049 019c 6001     		.2byte	0x160
 1050 019e 00000000 		.4byte	.LFB9
 1051 01a2 0C000000 		.4byte	.LFE9-.LFB9
 1052 01a6 01       		.uleb128 0x1
 1053 01a7 9C       		.byte	0x9c
 1054 01a8 BB010000 		.4byte	0x1bb
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 40


 1055 01ac 0C       		.uleb128 0xc
 1056 01ad FC010000 		.4byte	.LASF25
 1057 01b1 01       		.byte	0x1
 1058 01b2 6001     		.2byte	0x160
 1059 01b4 6B000000 		.4byte	0x6b
 1060 01b8 01       		.uleb128 0x1
 1061 01b9 50       		.byte	0x50
 1062 01ba 00       		.byte	0
 1063 01bb 0D       		.uleb128 0xd
 1064 01bc FB030000 		.4byte	.LASF27
 1065 01c0 01       		.byte	0x1
 1066 01c1 8201     		.2byte	0x182
 1067 01c3 6B000000 		.4byte	0x6b
 1068 01c7 00000000 		.4byte	.LFB10
 1069 01cb 0C000000 		.4byte	.LFE10-.LFB10
 1070 01cf 01       		.uleb128 0x1
 1071 01d0 9C       		.byte	0x9c
 1072 01d1 E4010000 		.4byte	0x1e4
 1073 01d5 0E       		.uleb128 0xe
 1074 01d6 CE030000 		.4byte	.LASF26
 1075 01da 01       		.byte	0x1
 1076 01db 8401     		.2byte	0x184
 1077 01dd 6B000000 		.4byte	0x6b
 1078 01e1 01       		.uleb128 0x1
 1079 01e2 50       		.byte	0x50
 1080 01e3 00       		.byte	0
 1081 01e4 0D       		.uleb128 0xd
 1082 01e5 84020000 		.4byte	.LASF28
 1083 01e9 01       		.byte	0x1
 1084 01ea B501     		.2byte	0x1b5
 1085 01ec 6B000000 		.4byte	0x6b
 1086 01f0 00000000 		.4byte	.LFB11
 1087 01f4 0C000000 		.4byte	.LFE11-.LFB11
 1088 01f8 01       		.uleb128 0x1
 1089 01f9 9C       		.byte	0x9c
 1090 01fa 0D020000 		.4byte	0x20d
 1091 01fe 0E       		.uleb128 0xe
 1092 01ff CE030000 		.4byte	.LASF26
 1093 0203 01       		.byte	0x1
 1094 0204 B701     		.2byte	0x1b7
 1095 0206 6B000000 		.4byte	0x6b
 1096 020a 01       		.uleb128 0x1
 1097 020b 50       		.byte	0x50
 1098 020c 00       		.byte	0
 1099 020d 0B       		.uleb128 0xb
 1100 020e 00000000 		.4byte	.LASF29
 1101 0212 01       		.byte	0x1
 1102 0213 EE01     		.2byte	0x1ee
 1103 0215 00000000 		.4byte	.LFB12
 1104 0219 18000000 		.4byte	.LFE12-.LFB12
 1105 021d 01       		.uleb128 0x1
 1106 021e 9C       		.byte	0x9c
 1107 021f 32020000 		.4byte	0x232
 1108 0223 0C       		.uleb128 0xc
 1109 0224 8F000000 		.4byte	.LASF30
 1110 0228 01       		.byte	0x1
 1111 0229 EE01     		.2byte	0x1ee
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 41


 1112 022b 6B000000 		.4byte	0x6b
 1113 022f 01       		.uleb128 0x1
 1114 0230 50       		.byte	0x50
 1115 0231 00       		.byte	0
 1116 0232 0D       		.uleb128 0xd
 1117 0233 B6010000 		.4byte	.LASF31
 1118 0237 01       		.byte	0x1
 1119 0238 5A02     		.2byte	0x25a
 1120 023a 6B000000 		.4byte	0x6b
 1121 023e 00000000 		.4byte	.LFB13
 1122 0242 0C000000 		.4byte	.LFE13-.LFB13
 1123 0246 01       		.uleb128 0x1
 1124 0247 9C       		.byte	0x9c
 1125 0248 5B020000 		.4byte	0x25b
 1126 024c 0E       		.uleb128 0xe
 1127 024d FD000000 		.4byte	.LASF32
 1128 0251 01       		.byte	0x1
 1129 0252 5C02     		.2byte	0x25c
 1130 0254 6B000000 		.4byte	0x6b
 1131 0258 01       		.uleb128 0x1
 1132 0259 50       		.byte	0x50
 1133 025a 00       		.byte	0
 1134 025b 0D       		.uleb128 0xd
 1135 025c 13020000 		.4byte	.LASF33
 1136 0260 01       		.byte	0x1
 1137 0261 9A02     		.2byte	0x29a
 1138 0263 6B000000 		.4byte	0x6b
 1139 0267 00000000 		.4byte	.LFB14
 1140 026b 14000000 		.4byte	.LFE14-.LFB14
 1141 026f 01       		.uleb128 0x1
 1142 0270 9C       		.byte	0x9c
 1143 0271 84020000 		.4byte	0x284
 1144 0275 0E       		.uleb128 0xe
 1145 0276 4F010000 		.4byte	.LASF34
 1146 027a 01       		.byte	0x1
 1147 027b 9C02     		.2byte	0x29c
 1148 027d 6B000000 		.4byte	0x6b
 1149 0281 01       		.uleb128 0x1
 1150 0282 50       		.byte	0x50
 1151 0283 00       		.byte	0
 1152 0284 0D       		.uleb128 0xd
 1153 0285 54010000 		.4byte	.LASF35
 1154 0289 01       		.byte	0x1
 1155 028a D702     		.2byte	0x2d7
 1156 028c 6B000000 		.4byte	0x6b
 1157 0290 00000000 		.4byte	.LFB15
 1158 0294 20000000 		.4byte	.LFE15-.LFB15
 1159 0298 01       		.uleb128 0x1
 1160 0299 9C       		.byte	0x9c
 1161 029a AF020000 		.4byte	0x2af
 1162 029e 0F       		.uleb128 0xf
 1163 029f 4F010000 		.4byte	.LASF34
 1164 02a3 01       		.byte	0x1
 1165 02a4 D902     		.2byte	0x2d9
 1166 02a6 6B000000 		.4byte	0x6b
 1167 02aa 26000000 		.4byte	.LLST2
 1168 02ae 00       		.byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 42


 1169 02af 0A       		.uleb128 0xa
 1170 02b0 5D030000 		.4byte	.LASF36
 1171 02b4 01       		.byte	0x1
 1172 02b5 2603     		.2byte	0x326
 1173 02b7 00000000 		.4byte	.LFB16
 1174 02bb 18000000 		.4byte	.LFE16-.LFB16
 1175 02bf 01       		.uleb128 0x1
 1176 02c0 9C       		.byte	0x9c
 1177 02c1 0B       		.uleb128 0xb
 1178 02c2 7A030000 		.4byte	.LASF37
 1179 02c6 01       		.byte	0x1
 1180 02c7 5D03     		.2byte	0x35d
 1181 02c9 00000000 		.4byte	.LFB17
 1182 02cd 24000000 		.4byte	.LFE17-.LFB17
 1183 02d1 01       		.uleb128 0x1
 1184 02d2 9C       		.byte	0x9c
 1185 02d3 FA020000 		.4byte	0x2fa
 1186 02d7 0F       		.uleb128 0xf
 1187 02d8 A5010000 		.4byte	.LASF18
 1188 02dc 01       		.byte	0x1
 1189 02dd 5F03     		.2byte	0x35f
 1190 02df 6B000000 		.4byte	0x6b
 1191 02e3 4F000000 		.4byte	.LLST3
 1192 02e7 08       		.uleb128 0x8
 1193 02e8 06000000 		.4byte	.LVL18
 1194 02ec 8E040000 		.4byte	0x48e
 1195 02f0 08       		.uleb128 0x8
 1196 02f1 1E000000 		.4byte	.LVL19
 1197 02f5 99040000 		.4byte	0x499
 1198 02f9 00       		.byte	0
 1199 02fa 0B       		.uleb128 0xb
 1200 02fb 97010000 		.4byte	.LASF38
 1201 02ff 01       		.byte	0x1
 1202 0300 C203     		.2byte	0x3c2
 1203 0302 00000000 		.4byte	.LFB18
 1204 0306 1E000000 		.4byte	.LFE18-.LFB18
 1205 030a 01       		.uleb128 0x1
 1206 030b 9C       		.byte	0x9c
 1207 030c 4A030000 		.4byte	0x34a
 1208 0310 10       		.uleb128 0x10
 1209 0311 8D030000 		.4byte	.LASF39
 1210 0315 01       		.byte	0x1
 1211 0316 C203     		.2byte	0x3c2
 1212 0318 4A030000 		.4byte	0x34a
 1213 031c 62000000 		.4byte	.LLST4
 1214 0320 10       		.uleb128 0x10
 1215 0321 7A020000 		.4byte	.LASF40
 1216 0325 01       		.byte	0x1
 1217 0326 C203     		.2byte	0x3c2
 1218 0328 6B000000 		.4byte	0x6b
 1219 032c 8E000000 		.4byte	.LLST5
 1220 0330 0F       		.uleb128 0xf
 1221 0331 96020000 		.4byte	.LASF41
 1222 0335 01       		.byte	0x1
 1223 0336 C503     		.2byte	0x3c5
 1224 0338 6B000000 		.4byte	0x6b
 1225 033c B7000000 		.4byte	.LLST6
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 43


 1226 0340 08       		.uleb128 0x8
 1227 0341 10000000 		.4byte	.LVL23
 1228 0345 0D020000 		.4byte	0x20d
 1229 0349 00       		.byte	0
 1230 034a 11       		.uleb128 0x11
 1231 034b 04       		.byte	0x4
 1232 034c 50030000 		.4byte	0x350
 1233 0350 12       		.uleb128 0x12
 1234 0351 6B000000 		.4byte	0x6b
 1235 0355 0B       		.uleb128 0xb
 1236 0356 4E030000 		.4byte	.LASF42
 1237 035a 01       		.byte	0x1
 1238 035b E303     		.2byte	0x3e3
 1239 035d 00000000 		.4byte	.LFB19
 1240 0361 3C000000 		.4byte	.LFE19-.LFB19
 1241 0365 01       		.uleb128 0x1
 1242 0366 9C       		.byte	0x9c
 1243 0367 8E030000 		.4byte	0x38e
 1244 036b 0F       		.uleb128 0xf
 1245 036c A5010000 		.4byte	.LASF18
 1246 0370 01       		.byte	0x1
 1247 0371 E503     		.2byte	0x3e5
 1248 0373 6B000000 		.4byte	0x6b
 1249 0377 E1000000 		.4byte	.LLST7
 1250 037b 08       		.uleb128 0x8
 1251 037c 14000000 		.4byte	.LVL31
 1252 0380 8E040000 		.4byte	0x48e
 1253 0384 08       		.uleb128 0x8
 1254 0385 2C000000 		.4byte	.LVL32
 1255 0389 99040000 		.4byte	0x499
 1256 038d 00       		.byte	0
 1257 038e 06       		.uleb128 0x6
 1258 038f 44030000 		.4byte	.LASF43
 1259 0393 01       		.byte	0x1
 1260 0394 3F       		.byte	0x3f
 1261 0395 00000000 		.4byte	.LFB0
 1262 0399 2C000000 		.4byte	.LFE0-.LFB0
 1263 039d 01       		.uleb128 0x1
 1264 039e 9C       		.byte	0x9c
 1265 039f BF030000 		.4byte	0x3bf
 1266 03a3 08       		.uleb128 0x8
 1267 03a4 0C000000 		.4byte	.LVL33
 1268 03a8 55030000 		.4byte	0x355
 1269 03ac 08       		.uleb128 0x8
 1270 03ad 10000000 		.4byte	.LVL34
 1271 03b1 BB010000 		.4byte	0x1bb
 1272 03b5 08       		.uleb128 0x8
 1273 03b6 14000000 		.4byte	.LVL35
 1274 03ba E4010000 		.4byte	0x1e4
 1275 03be 00       		.byte	0
 1276 03bf 06       		.uleb128 0x6
 1277 03c0 F0030000 		.4byte	.LASF44
 1278 03c4 01       		.byte	0x1
 1279 03c5 A3       		.byte	0xa3
 1280 03c6 00000000 		.4byte	.LFB2
 1281 03ca 20000000 		.4byte	.LFE2-.LFB2
 1282 03ce 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 44


 1283 03cf 9C       		.byte	0x9c
 1284 03d0 E7030000 		.4byte	0x3e7
 1285 03d4 08       		.uleb128 0x8
 1286 03d5 0E000000 		.4byte	.LVL36
 1287 03d9 8E030000 		.4byte	0x38e
 1288 03dd 08       		.uleb128 0x8
 1289 03de 18000000 		.4byte	.LVL37
 1290 03e2 AB000000 		.4byte	0xab
 1291 03e6 00       		.byte	0
 1292 03e7 0A       		.uleb128 0xa
 1293 03e8 ED010000 		.4byte	.LASF45
 1294 03ec 01       		.byte	0x1
 1295 03ed 1104     		.2byte	0x411
 1296 03ef 00000000 		.4byte	.LFB20
 1297 03f3 02000000 		.4byte	.LFE20-.LFB20
 1298 03f7 01       		.uleb128 0x1
 1299 03f8 9C       		.byte	0x9c
 1300 03f9 0A       		.uleb128 0xa
 1301 03fa 04010000 		.4byte	.LASF46
 1302 03fe 01       		.byte	0x1
 1303 03ff 2904     		.2byte	0x429
 1304 0401 00000000 		.4byte	.LFB21
 1305 0405 02000000 		.4byte	.LFE21-.LFB21
 1306 0409 01       		.uleb128 0x1
 1307 040a 9C       		.byte	0x9c
 1308 040b 0B       		.uleb128 0xb
 1309 040c C2000000 		.4byte	.LASF47
 1310 0410 01       		.byte	0x1
 1311 0411 4204     		.2byte	0x442
 1312 0413 00000000 		.4byte	.LFB22
 1313 0417 18000000 		.4byte	.LFE22-.LFB22
 1314 041b 01       		.uleb128 0x1
 1315 041c 9C       		.byte	0x9c
 1316 041d 30040000 		.4byte	0x430
 1317 0421 0C       		.uleb128 0xc
 1318 0422 FC010000 		.4byte	.LASF25
 1319 0426 01       		.byte	0x1
 1320 0427 4204     		.2byte	0x442
 1321 0429 6B000000 		.4byte	0x6b
 1322 042d 01       		.uleb128 0x1
 1323 042e 50       		.byte	0x50
 1324 042f 00       		.byte	0
 1325 0430 0D       		.uleb128 0xd
 1326 0431 94030000 		.4byte	.LASF48
 1327 0435 01       		.byte	0x1
 1328 0436 6504     		.2byte	0x465
 1329 0438 6B000000 		.4byte	0x6b
 1330 043c 00000000 		.4byte	.LFB23
 1331 0440 18000000 		.4byte	.LFE23-.LFB23
 1332 0444 01       		.uleb128 0x1
 1333 0445 9C       		.byte	0x9c
 1334 0446 5B040000 		.4byte	0x45b
 1335 044a 0F       		.uleb128 0xf
 1336 044b CE030000 		.4byte	.LASF26
 1337 044f 01       		.byte	0x1
 1338 0450 6704     		.2byte	0x467
 1339 0452 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 45


 1340 0456 F4000000 		.4byte	.LLST8
 1341 045a 00       		.byte	0
 1342 045b 13       		.uleb128 0x13
 1343 045c F0000000 		.4byte	.LASF49
 1344 0460 01       		.byte	0x1
 1345 0461 22       		.byte	0x22
 1346 0462 6B000000 		.4byte	0x6b
 1347 0466 05       		.uleb128 0x5
 1348 0467 03       		.byte	0x3
 1349 0468 00000000 		.4byte	SPIM_initVar
 1350 046c 13       		.uleb128 0x13
 1351 046d A4030000 		.4byte	.LASF50
 1352 0471 01       		.byte	0x1
 1353 0472 24       		.byte	0x24
 1354 0473 98000000 		.4byte	0x98
 1355 0477 05       		.uleb128 0x5
 1356 0478 03       		.byte	0x3
 1357 0479 00000000 		.4byte	SPIM_swStatusTx
 1358 047d 13       		.uleb128 0x13
 1359 047e 03020000 		.4byte	.LASF51
 1360 0482 01       		.byte	0x1
 1361 0483 25       		.byte	0x25
 1362 0484 98000000 		.4byte	0x98
 1363 0488 05       		.uleb128 0x5
 1364 0489 03       		.byte	0x3
 1365 048a 00000000 		.4byte	SPIM_swStatusRx
 1366 048e 14       		.uleb128 0x14
 1367 048f 40020000 		.4byte	.LASF52
 1368 0493 40020000 		.4byte	.LASF52
 1369 0497 03       		.byte	0x3
 1370 0498 E5       		.byte	0xe5
 1371 0499 14       		.uleb128 0x14
 1372 049a 64020000 		.4byte	.LASF53
 1373 049e 64020000 		.4byte	.LASF53
 1374 04a2 03       		.byte	0x3
 1375 04a3 E6       		.byte	0xe6
 1376 04a4 14       		.uleb128 0x14
 1377 04a5 AE000000 		.4byte	.LASF54
 1378 04a9 AE000000 		.4byte	.LASF54
 1379 04ad 04       		.byte	0x4
 1380 04ae 23       		.byte	0x23
 1381 04af 14       		.uleb128 0x14
 1382 04b0 27000000 		.4byte	.LASF55
 1383 04b4 27000000 		.4byte	.LASF55
 1384 04b8 04       		.byte	0x4
 1385 04b9 27       		.byte	0x27
 1386 04ba 00       		.byte	0
 1387              		.section	.debug_abbrev,"",%progbits
 1388              	.Ldebug_abbrev0:
 1389 0000 01       		.uleb128 0x1
 1390 0001 11       		.uleb128 0x11
 1391 0002 01       		.byte	0x1
 1392 0003 25       		.uleb128 0x25
 1393 0004 0E       		.uleb128 0xe
 1394 0005 13       		.uleb128 0x13
 1395 0006 0B       		.uleb128 0xb
 1396 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 46


 1397 0008 0E       		.uleb128 0xe
 1398 0009 1B       		.uleb128 0x1b
 1399 000a 0E       		.uleb128 0xe
 1400 000b 55       		.uleb128 0x55
 1401 000c 17       		.uleb128 0x17
 1402 000d 11       		.uleb128 0x11
 1403 000e 01       		.uleb128 0x1
 1404 000f 10       		.uleb128 0x10
 1405 0010 17       		.uleb128 0x17
 1406 0011 00       		.byte	0
 1407 0012 00       		.byte	0
 1408 0013 02       		.uleb128 0x2
 1409 0014 24       		.uleb128 0x24
 1410 0015 00       		.byte	0
 1411 0016 0B       		.uleb128 0xb
 1412 0017 0B       		.uleb128 0xb
 1413 0018 3E       		.uleb128 0x3e
 1414 0019 0B       		.uleb128 0xb
 1415 001a 03       		.uleb128 0x3
 1416 001b 0E       		.uleb128 0xe
 1417 001c 00       		.byte	0
 1418 001d 00       		.byte	0
 1419 001e 03       		.uleb128 0x3
 1420 001f 24       		.uleb128 0x24
 1421 0020 00       		.byte	0
 1422 0021 0B       		.uleb128 0xb
 1423 0022 0B       		.uleb128 0xb
 1424 0023 3E       		.uleb128 0x3e
 1425 0024 0B       		.uleb128 0xb
 1426 0025 03       		.uleb128 0x3
 1427 0026 08       		.uleb128 0x8
 1428 0027 00       		.byte	0
 1429 0028 00       		.byte	0
 1430 0029 04       		.uleb128 0x4
 1431 002a 16       		.uleb128 0x16
 1432 002b 00       		.byte	0
 1433 002c 03       		.uleb128 0x3
 1434 002d 0E       		.uleb128 0xe
 1435 002e 3A       		.uleb128 0x3a
 1436 002f 0B       		.uleb128 0xb
 1437 0030 3B       		.uleb128 0x3b
 1438 0031 05       		.uleb128 0x5
 1439 0032 49       		.uleb128 0x49
 1440 0033 13       		.uleb128 0x13
 1441 0034 00       		.byte	0
 1442 0035 00       		.byte	0
 1443 0036 05       		.uleb128 0x5
 1444 0037 35       		.uleb128 0x35
 1445 0038 00       		.byte	0
 1446 0039 49       		.uleb128 0x49
 1447 003a 13       		.uleb128 0x13
 1448 003b 00       		.byte	0
 1449 003c 00       		.byte	0
 1450 003d 06       		.uleb128 0x6
 1451 003e 2E       		.uleb128 0x2e
 1452 003f 01       		.byte	0x1
 1453 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 47


 1454 0041 19       		.uleb128 0x19
 1455 0042 03       		.uleb128 0x3
 1456 0043 0E       		.uleb128 0xe
 1457 0044 3A       		.uleb128 0x3a
 1458 0045 0B       		.uleb128 0xb
 1459 0046 3B       		.uleb128 0x3b
 1460 0047 0B       		.uleb128 0xb
 1461 0048 27       		.uleb128 0x27
 1462 0049 19       		.uleb128 0x19
 1463 004a 11       		.uleb128 0x11
 1464 004b 01       		.uleb128 0x1
 1465 004c 12       		.uleb128 0x12
 1466 004d 06       		.uleb128 0x6
 1467 004e 40       		.uleb128 0x40
 1468 004f 18       		.uleb128 0x18
 1469 0050 9742     		.uleb128 0x2117
 1470 0052 19       		.uleb128 0x19
 1471 0053 01       		.uleb128 0x1
 1472 0054 13       		.uleb128 0x13
 1473 0055 00       		.byte	0
 1474 0056 00       		.byte	0
 1475 0057 07       		.uleb128 0x7
 1476 0058 34       		.uleb128 0x34
 1477 0059 00       		.byte	0
 1478 005a 03       		.uleb128 0x3
 1479 005b 0E       		.uleb128 0xe
 1480 005c 3A       		.uleb128 0x3a
 1481 005d 0B       		.uleb128 0xb
 1482 005e 3B       		.uleb128 0x3b
 1483 005f 0B       		.uleb128 0xb
 1484 0060 49       		.uleb128 0x49
 1485 0061 13       		.uleb128 0x13
 1486 0062 02       		.uleb128 0x2
 1487 0063 17       		.uleb128 0x17
 1488 0064 00       		.byte	0
 1489 0065 00       		.byte	0
 1490 0066 08       		.uleb128 0x8
 1491 0067 898201   		.uleb128 0x4109
 1492 006a 00       		.byte	0
 1493 006b 11       		.uleb128 0x11
 1494 006c 01       		.uleb128 0x1
 1495 006d 31       		.uleb128 0x31
 1496 006e 13       		.uleb128 0x13
 1497 006f 00       		.byte	0
 1498 0070 00       		.byte	0
 1499 0071 09       		.uleb128 0x9
 1500 0072 2E       		.uleb128 0x2e
 1501 0073 00       		.byte	0
 1502 0074 3F       		.uleb128 0x3f
 1503 0075 19       		.uleb128 0x19
 1504 0076 03       		.uleb128 0x3
 1505 0077 0E       		.uleb128 0xe
 1506 0078 3A       		.uleb128 0x3a
 1507 0079 0B       		.uleb128 0xb
 1508 007a 3B       		.uleb128 0x3b
 1509 007b 0B       		.uleb128 0xb
 1510 007c 27       		.uleb128 0x27
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 48


 1511 007d 19       		.uleb128 0x19
 1512 007e 11       		.uleb128 0x11
 1513 007f 01       		.uleb128 0x1
 1514 0080 12       		.uleb128 0x12
 1515 0081 06       		.uleb128 0x6
 1516 0082 40       		.uleb128 0x40
 1517 0083 18       		.uleb128 0x18
 1518 0084 9742     		.uleb128 0x2117
 1519 0086 19       		.uleb128 0x19
 1520 0087 00       		.byte	0
 1521 0088 00       		.byte	0
 1522 0089 0A       		.uleb128 0xa
 1523 008a 2E       		.uleb128 0x2e
 1524 008b 00       		.byte	0
 1525 008c 3F       		.uleb128 0x3f
 1526 008d 19       		.uleb128 0x19
 1527 008e 03       		.uleb128 0x3
 1528 008f 0E       		.uleb128 0xe
 1529 0090 3A       		.uleb128 0x3a
 1530 0091 0B       		.uleb128 0xb
 1531 0092 3B       		.uleb128 0x3b
 1532 0093 05       		.uleb128 0x5
 1533 0094 27       		.uleb128 0x27
 1534 0095 19       		.uleb128 0x19
 1535 0096 11       		.uleb128 0x11
 1536 0097 01       		.uleb128 0x1
 1537 0098 12       		.uleb128 0x12
 1538 0099 06       		.uleb128 0x6
 1539 009a 40       		.uleb128 0x40
 1540 009b 18       		.uleb128 0x18
 1541 009c 9742     		.uleb128 0x2117
 1542 009e 19       		.uleb128 0x19
 1543 009f 00       		.byte	0
 1544 00a0 00       		.byte	0
 1545 00a1 0B       		.uleb128 0xb
 1546 00a2 2E       		.uleb128 0x2e
 1547 00a3 01       		.byte	0x1
 1548 00a4 3F       		.uleb128 0x3f
 1549 00a5 19       		.uleb128 0x19
 1550 00a6 03       		.uleb128 0x3
 1551 00a7 0E       		.uleb128 0xe
 1552 00a8 3A       		.uleb128 0x3a
 1553 00a9 0B       		.uleb128 0xb
 1554 00aa 3B       		.uleb128 0x3b
 1555 00ab 05       		.uleb128 0x5
 1556 00ac 27       		.uleb128 0x27
 1557 00ad 19       		.uleb128 0x19
 1558 00ae 11       		.uleb128 0x11
 1559 00af 01       		.uleb128 0x1
 1560 00b0 12       		.uleb128 0x12
 1561 00b1 06       		.uleb128 0x6
 1562 00b2 40       		.uleb128 0x40
 1563 00b3 18       		.uleb128 0x18
 1564 00b4 9742     		.uleb128 0x2117
 1565 00b6 19       		.uleb128 0x19
 1566 00b7 01       		.uleb128 0x1
 1567 00b8 13       		.uleb128 0x13
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 49


 1568 00b9 00       		.byte	0
 1569 00ba 00       		.byte	0
 1570 00bb 0C       		.uleb128 0xc
 1571 00bc 05       		.uleb128 0x5
 1572 00bd 00       		.byte	0
 1573 00be 03       		.uleb128 0x3
 1574 00bf 0E       		.uleb128 0xe
 1575 00c0 3A       		.uleb128 0x3a
 1576 00c1 0B       		.uleb128 0xb
 1577 00c2 3B       		.uleb128 0x3b
 1578 00c3 05       		.uleb128 0x5
 1579 00c4 49       		.uleb128 0x49
 1580 00c5 13       		.uleb128 0x13
 1581 00c6 02       		.uleb128 0x2
 1582 00c7 18       		.uleb128 0x18
 1583 00c8 00       		.byte	0
 1584 00c9 00       		.byte	0
 1585 00ca 0D       		.uleb128 0xd
 1586 00cb 2E       		.uleb128 0x2e
 1587 00cc 01       		.byte	0x1
 1588 00cd 3F       		.uleb128 0x3f
 1589 00ce 19       		.uleb128 0x19
 1590 00cf 03       		.uleb128 0x3
 1591 00d0 0E       		.uleb128 0xe
 1592 00d1 3A       		.uleb128 0x3a
 1593 00d2 0B       		.uleb128 0xb
 1594 00d3 3B       		.uleb128 0x3b
 1595 00d4 05       		.uleb128 0x5
 1596 00d5 27       		.uleb128 0x27
 1597 00d6 19       		.uleb128 0x19
 1598 00d7 49       		.uleb128 0x49
 1599 00d8 13       		.uleb128 0x13
 1600 00d9 11       		.uleb128 0x11
 1601 00da 01       		.uleb128 0x1
 1602 00db 12       		.uleb128 0x12
 1603 00dc 06       		.uleb128 0x6
 1604 00dd 40       		.uleb128 0x40
 1605 00de 18       		.uleb128 0x18
 1606 00df 9742     		.uleb128 0x2117
 1607 00e1 19       		.uleb128 0x19
 1608 00e2 01       		.uleb128 0x1
 1609 00e3 13       		.uleb128 0x13
 1610 00e4 00       		.byte	0
 1611 00e5 00       		.byte	0
 1612 00e6 0E       		.uleb128 0xe
 1613 00e7 34       		.uleb128 0x34
 1614 00e8 00       		.byte	0
 1615 00e9 03       		.uleb128 0x3
 1616 00ea 0E       		.uleb128 0xe
 1617 00eb 3A       		.uleb128 0x3a
 1618 00ec 0B       		.uleb128 0xb
 1619 00ed 3B       		.uleb128 0x3b
 1620 00ee 05       		.uleb128 0x5
 1621 00ef 49       		.uleb128 0x49
 1622 00f0 13       		.uleb128 0x13
 1623 00f1 02       		.uleb128 0x2
 1624 00f2 18       		.uleb128 0x18
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 50


 1625 00f3 00       		.byte	0
 1626 00f4 00       		.byte	0
 1627 00f5 0F       		.uleb128 0xf
 1628 00f6 34       		.uleb128 0x34
 1629 00f7 00       		.byte	0
 1630 00f8 03       		.uleb128 0x3
 1631 00f9 0E       		.uleb128 0xe
 1632 00fa 3A       		.uleb128 0x3a
 1633 00fb 0B       		.uleb128 0xb
 1634 00fc 3B       		.uleb128 0x3b
 1635 00fd 05       		.uleb128 0x5
 1636 00fe 49       		.uleb128 0x49
 1637 00ff 13       		.uleb128 0x13
 1638 0100 02       		.uleb128 0x2
 1639 0101 17       		.uleb128 0x17
 1640 0102 00       		.byte	0
 1641 0103 00       		.byte	0
 1642 0104 10       		.uleb128 0x10
 1643 0105 05       		.uleb128 0x5
 1644 0106 00       		.byte	0
 1645 0107 03       		.uleb128 0x3
 1646 0108 0E       		.uleb128 0xe
 1647 0109 3A       		.uleb128 0x3a
 1648 010a 0B       		.uleb128 0xb
 1649 010b 3B       		.uleb128 0x3b
 1650 010c 05       		.uleb128 0x5
 1651 010d 49       		.uleb128 0x49
 1652 010e 13       		.uleb128 0x13
 1653 010f 02       		.uleb128 0x2
 1654 0110 17       		.uleb128 0x17
 1655 0111 00       		.byte	0
 1656 0112 00       		.byte	0
 1657 0113 11       		.uleb128 0x11
 1658 0114 0F       		.uleb128 0xf
 1659 0115 00       		.byte	0
 1660 0116 0B       		.uleb128 0xb
 1661 0117 0B       		.uleb128 0xb
 1662 0118 49       		.uleb128 0x49
 1663 0119 13       		.uleb128 0x13
 1664 011a 00       		.byte	0
 1665 011b 00       		.byte	0
 1666 011c 12       		.uleb128 0x12
 1667 011d 26       		.uleb128 0x26
 1668 011e 00       		.byte	0
 1669 011f 49       		.uleb128 0x49
 1670 0120 13       		.uleb128 0x13
 1671 0121 00       		.byte	0
 1672 0122 00       		.byte	0
 1673 0123 13       		.uleb128 0x13
 1674 0124 34       		.uleb128 0x34
 1675 0125 00       		.byte	0
 1676 0126 03       		.uleb128 0x3
 1677 0127 0E       		.uleb128 0xe
 1678 0128 3A       		.uleb128 0x3a
 1679 0129 0B       		.uleb128 0xb
 1680 012a 3B       		.uleb128 0x3b
 1681 012b 0B       		.uleb128 0xb
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 51


 1682 012c 49       		.uleb128 0x49
 1683 012d 13       		.uleb128 0x13
 1684 012e 3F       		.uleb128 0x3f
 1685 012f 19       		.uleb128 0x19
 1686 0130 02       		.uleb128 0x2
 1687 0131 18       		.uleb128 0x18
 1688 0132 00       		.byte	0
 1689 0133 00       		.byte	0
 1690 0134 14       		.uleb128 0x14
 1691 0135 2E       		.uleb128 0x2e
 1692 0136 00       		.byte	0
 1693 0137 3F       		.uleb128 0x3f
 1694 0138 19       		.uleb128 0x19
 1695 0139 3C       		.uleb128 0x3c
 1696 013a 19       		.uleb128 0x19
 1697 013b 6E       		.uleb128 0x6e
 1698 013c 0E       		.uleb128 0xe
 1699 013d 03       		.uleb128 0x3
 1700 013e 0E       		.uleb128 0xe
 1701 013f 3A       		.uleb128 0x3a
 1702 0140 0B       		.uleb128 0xb
 1703 0141 3B       		.uleb128 0x3b
 1704 0142 0B       		.uleb128 0xb
 1705 0143 00       		.byte	0
 1706 0144 00       		.byte	0
 1707 0145 00       		.byte	0
 1708              		.section	.debug_loc,"",%progbits
 1709              	.Ldebug_loc0:
 1710              	.LLST0:
 1711 0000 06000000 		.4byte	.LVL0
 1712 0004 2B000000 		.4byte	.LVL1-1
 1713 0008 0100     		.2byte	0x1
 1714 000a 50       		.byte	0x50
 1715 000b 00000000 		.4byte	0
 1716 000f 00000000 		.4byte	0
 1717              	.LLST1:
 1718 0013 06000000 		.4byte	.LVL3
 1719 0017 1B000000 		.4byte	.LVL4-1
 1720 001b 0100     		.2byte	0x1
 1721 001d 50       		.byte	0x50
 1722 001e 00000000 		.4byte	0
 1723 0022 00000000 		.4byte	0
 1724              	.LLST2:
 1725 0026 06000000 		.4byte	.LVL13
 1726 002a 0E000000 		.4byte	.LVL14
 1727 002e 0100     		.2byte	0x1
 1728 0030 53       		.byte	0x53
 1729 0031 12000000 		.4byte	.LVL15
 1730 0035 16000000 		.4byte	.LVL16
 1731 0039 0100     		.2byte	0x1
 1732 003b 53       		.byte	0x53
 1733 003c 18000000 		.4byte	.LVL17
 1734 0040 20000000 		.4byte	.LFE15
 1735 0044 0100     		.2byte	0x1
 1736 0046 50       		.byte	0x50
 1737 0047 00000000 		.4byte	0
 1738 004b 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 52


 1739              	.LLST3:
 1740 004f 06000000 		.4byte	.LVL18
 1741 0053 1D000000 		.4byte	.LVL19-1
 1742 0057 0100     		.2byte	0x1
 1743 0059 50       		.byte	0x50
 1744 005a 00000000 		.4byte	0
 1745 005e 00000000 		.4byte	0
 1746              	.LLST4:
 1747 0062 00000000 		.4byte	.LVL20
 1748 0066 0A000000 		.4byte	.LVL22
 1749 006a 0100     		.2byte	0x1
 1750 006c 50       		.byte	0x50
 1751 006d 0A000000 		.4byte	.LVL22
 1752 0071 1C000000 		.4byte	.LVL30
 1753 0075 0100     		.2byte	0x1
 1754 0077 56       		.byte	0x56
 1755 0078 1C000000 		.4byte	.LVL30
 1756 007c 1E000000 		.4byte	.LFE18
 1757 0080 0400     		.2byte	0x4
 1758 0082 F3       		.byte	0xf3
 1759 0083 01       		.uleb128 0x1
 1760 0084 50       		.byte	0x50
 1761 0085 9F       		.byte	0x9f
 1762 0086 00000000 		.4byte	0
 1763 008a 00000000 		.4byte	0
 1764              	.LLST5:
 1765 008e 00000000 		.4byte	.LVL20
 1766 0092 0A000000 		.4byte	.LVL22
 1767 0096 0100     		.2byte	0x1
 1768 0098 51       		.byte	0x51
 1769 0099 0A000000 		.4byte	.LVL22
 1770 009d 16000000 		.4byte	.LVL26
 1771 00a1 0100     		.2byte	0x1
 1772 00a3 54       		.byte	0x54
 1773 00a4 18000000 		.4byte	.LVL27
 1774 00a8 1C000000 		.4byte	.LVL28
 1775 00ac 0100     		.2byte	0x1
 1776 00ae 54       		.byte	0x54
 1777 00af 00000000 		.4byte	0
 1778 00b3 00000000 		.4byte	0
 1779              	.LLST6:
 1780 00b7 06000000 		.4byte	.LVL21
 1781 00bb 0A000000 		.4byte	.LVL22
 1782 00bf 0200     		.2byte	0x2
 1783 00c1 30       		.byte	0x30
 1784 00c2 9F       		.byte	0x9f
 1785 00c3 0A000000 		.4byte	.LVL22
 1786 00c7 12000000 		.4byte	.LVL24
 1787 00cb 0100     		.2byte	0x1
 1788 00cd 55       		.byte	0x55
 1789 00ce 14000000 		.4byte	.LVL25
 1790 00d2 1C000000 		.4byte	.LVL29
 1791 00d6 0100     		.2byte	0x1
 1792 00d8 55       		.byte	0x55
 1793 00d9 00000000 		.4byte	0
 1794 00dd 00000000 		.4byte	0
 1795              	.LLST7:
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 53


 1796 00e1 14000000 		.4byte	.LVL31
 1797 00e5 2B000000 		.4byte	.LVL32-1
 1798 00e9 0100     		.2byte	0x1
 1799 00eb 50       		.byte	0x50
 1800 00ec 00000000 		.4byte	0
 1801 00f0 00000000 		.4byte	0
 1802              	.LLST8:
 1803 00f4 04000000 		.4byte	.LVL39
 1804 00f8 0A000000 		.4byte	.LVL40
 1805 00fc 0100     		.2byte	0x1
 1806 00fe 53       		.byte	0x53
 1807 00ff 0A000000 		.4byte	.LVL40
 1808 0103 18000000 		.4byte	.LFE23
 1809 0107 0100     		.2byte	0x1
 1810 0109 50       		.byte	0x50
 1811 010a 00000000 		.4byte	0
 1812 010e 00000000 		.4byte	0
 1813              		.section	.debug_aranges,"",%progbits
 1814 0000 D4000000 		.4byte	0xd4
 1815 0004 0200     		.2byte	0x2
 1816 0006 00000000 		.4byte	.Ldebug_info0
 1817 000a 04       		.byte	0x4
 1818 000b 00       		.byte	0
 1819 000c 0000     		.2byte	0
 1820 000e 0000     		.2byte	0
 1821 0010 00000000 		.4byte	.LFB1
 1822 0014 40000000 		.4byte	.LFE1-.LFB1
 1823 0018 00000000 		.4byte	.LFB3
 1824 001c 2C000000 		.4byte	.LFE3-.LFB3
 1825 0020 00000000 		.4byte	.LFB4
 1826 0024 02000000 		.4byte	.LFE4-.LFB4
 1827 0028 00000000 		.4byte	.LFB5
 1828 002c 02000000 		.4byte	.LFE5-.LFB5
 1829 0030 00000000 		.4byte	.LFB6
 1830 0034 02000000 		.4byte	.LFE6-.LFB6
 1831 0038 00000000 		.4byte	.LFB7
 1832 003c 02000000 		.4byte	.LFE7-.LFB7
 1833 0040 00000000 		.4byte	.LFB8
 1834 0044 0C000000 		.4byte	.LFE8-.LFB8
 1835 0048 00000000 		.4byte	.LFB9
 1836 004c 0C000000 		.4byte	.LFE9-.LFB9
 1837 0050 00000000 		.4byte	.LFB10
 1838 0054 0C000000 		.4byte	.LFE10-.LFB10
 1839 0058 00000000 		.4byte	.LFB11
 1840 005c 0C000000 		.4byte	.LFE11-.LFB11
 1841 0060 00000000 		.4byte	.LFB12
 1842 0064 18000000 		.4byte	.LFE12-.LFB12
 1843 0068 00000000 		.4byte	.LFB13
 1844 006c 0C000000 		.4byte	.LFE13-.LFB13
 1845 0070 00000000 		.4byte	.LFB14
 1846 0074 14000000 		.4byte	.LFE14-.LFB14
 1847 0078 00000000 		.4byte	.LFB15
 1848 007c 20000000 		.4byte	.LFE15-.LFB15
 1849 0080 00000000 		.4byte	.LFB16
 1850 0084 18000000 		.4byte	.LFE16-.LFB16
 1851 0088 00000000 		.4byte	.LFB17
 1852 008c 24000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 54


 1853 0090 00000000 		.4byte	.LFB18
 1854 0094 1E000000 		.4byte	.LFE18-.LFB18
 1855 0098 00000000 		.4byte	.LFB19
 1856 009c 3C000000 		.4byte	.LFE19-.LFB19
 1857 00a0 00000000 		.4byte	.LFB0
 1858 00a4 2C000000 		.4byte	.LFE0-.LFB0
 1859 00a8 00000000 		.4byte	.LFB2
 1860 00ac 20000000 		.4byte	.LFE2-.LFB2
 1861 00b0 00000000 		.4byte	.LFB20
 1862 00b4 02000000 		.4byte	.LFE20-.LFB20
 1863 00b8 00000000 		.4byte	.LFB21
 1864 00bc 02000000 		.4byte	.LFE21-.LFB21
 1865 00c0 00000000 		.4byte	.LFB22
 1866 00c4 18000000 		.4byte	.LFE22-.LFB22
 1867 00c8 00000000 		.4byte	.LFB23
 1868 00cc 18000000 		.4byte	.LFE23-.LFB23
 1869 00d0 00000000 		.4byte	0
 1870 00d4 00000000 		.4byte	0
 1871              		.section	.debug_ranges,"",%progbits
 1872              	.Ldebug_ranges0:
 1873 0000 00000000 		.4byte	.LFB1
 1874 0004 40000000 		.4byte	.LFE1
 1875 0008 00000000 		.4byte	.LFB3
 1876 000c 2C000000 		.4byte	.LFE3
 1877 0010 00000000 		.4byte	.LFB4
 1878 0014 02000000 		.4byte	.LFE4
 1879 0018 00000000 		.4byte	.LFB5
 1880 001c 02000000 		.4byte	.LFE5
 1881 0020 00000000 		.4byte	.LFB6
 1882 0024 02000000 		.4byte	.LFE6
 1883 0028 00000000 		.4byte	.LFB7
 1884 002c 02000000 		.4byte	.LFE7
 1885 0030 00000000 		.4byte	.LFB8
 1886 0034 0C000000 		.4byte	.LFE8
 1887 0038 00000000 		.4byte	.LFB9
 1888 003c 0C000000 		.4byte	.LFE9
 1889 0040 00000000 		.4byte	.LFB10
 1890 0044 0C000000 		.4byte	.LFE10
 1891 0048 00000000 		.4byte	.LFB11
 1892 004c 0C000000 		.4byte	.LFE11
 1893 0050 00000000 		.4byte	.LFB12
 1894 0054 18000000 		.4byte	.LFE12
 1895 0058 00000000 		.4byte	.LFB13
 1896 005c 0C000000 		.4byte	.LFE13
 1897 0060 00000000 		.4byte	.LFB14
 1898 0064 14000000 		.4byte	.LFE14
 1899 0068 00000000 		.4byte	.LFB15
 1900 006c 20000000 		.4byte	.LFE15
 1901 0070 00000000 		.4byte	.LFB16
 1902 0074 18000000 		.4byte	.LFE16
 1903 0078 00000000 		.4byte	.LFB17
 1904 007c 24000000 		.4byte	.LFE17
 1905 0080 00000000 		.4byte	.LFB18
 1906 0084 1E000000 		.4byte	.LFE18
 1907 0088 00000000 		.4byte	.LFB19
 1908 008c 3C000000 		.4byte	.LFE19
 1909 0090 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 55


 1910 0094 2C000000 		.4byte	.LFE0
 1911 0098 00000000 		.4byte	.LFB2
 1912 009c 20000000 		.4byte	.LFE2
 1913 00a0 00000000 		.4byte	.LFB20
 1914 00a4 02000000 		.4byte	.LFE20
 1915 00a8 00000000 		.4byte	.LFB21
 1916 00ac 02000000 		.4byte	.LFE21
 1917 00b0 00000000 		.4byte	.LFB22
 1918 00b4 18000000 		.4byte	.LFE22
 1919 00b8 00000000 		.4byte	.LFB23
 1920 00bc 18000000 		.4byte	.LFE23
 1921 00c0 00000000 		.4byte	0
 1922 00c4 00000000 		.4byte	0
 1923              		.section	.debug_line,"",%progbits
 1924              	.Ldebug_line0:
 1925 0000 56020000 		.section	.debug_str,"MS",%progbits,1
 1925      02005F00 
 1925      00000201 
 1925      FB0E0D00 
 1925      01010101 
 1926              	.LASF29:
 1927 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 1927      5F577269 
 1927      74655478 
 1927      44617461 
 1927      00
 1928              	.LASF16:
 1929 0011 5350494D 		.ascii	"SPIM_Enable\000"
 1929      5F456E61 
 1929      626C6500 
 1930              	.LASF17:
 1931 001d 5350494D 		.ascii	"SPIM_Stop\000"
 1931      5F53746F 
 1931      7000
 1932              	.LASF55:
 1933 0027 5350494D 		.ascii	"SPIM_IntClock_Stop\000"
 1933      5F496E74 
 1933      436C6F63 
 1933      6B5F5374 
 1933      6F7000
 1934              	.LASF58:
 1935 003a 443A5C47 		.ascii	"D:\\GIT\\Microcontroller System Design Projects\\HW"
 1935      49545C4D 
 1935      6963726F 
 1935      636F6E74 
 1935      726F6C6C 
 1936 006a 362D204D 		.ascii	"6- MotorControll\\MotorControll.cydsn\000"
 1936      6F746F72 
 1936      436F6E74 
 1936      726F6C6C 
 1936      5C4D6F74 
 1937              	.LASF30:
 1938 008f 74784461 		.ascii	"txData\000"
 1938      746100
 1939              	.LASF3:
 1940 0096 73686F72 		.ascii	"short unsigned int\000"
 1940      7420756E 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 56


 1940      7369676E 
 1940      65642069 
 1940      6E7400
 1941              	.LASF11:
 1942 00a9 63686172 		.ascii	"char\000"
 1942      00
 1943              	.LASF54:
 1944 00ae 5350494D 		.ascii	"SPIM_IntClock_Start\000"
 1944      5F496E74 
 1944      436C6F63 
 1944      6B5F5374 
 1944      61727400 
 1945              	.LASF47:
 1946 00c2 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 1946      5F536574 
 1946      496E7465 
 1946      72727570 
 1946      744D6F64 
 1947              	.LASF24:
 1948 00d8 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 1948      5F536574 
 1948      5278496E 
 1948      74657272 
 1948      7570744D 
 1949              	.LASF49:
 1950 00f0 5350494D 		.ascii	"SPIM_initVar\000"
 1950      5F696E69 
 1950      74566172 
 1950      00
 1951              	.LASF32:
 1952 00fd 72784461 		.ascii	"rxData\000"
 1952      746100
 1953              	.LASF46:
 1954 0104 5350494D 		.ascii	"SPIM_DisableInt\000"
 1954      5F446973 
 1954      61626C65 
 1954      496E7400 
 1955              	.LASF57:
 1956 0114 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 1956      72617465 
 1956      645F536F 
 1956      75726365 
 1956      5C50536F 
 1957              	.LASF9:
 1958 0132 666C6F61 		.ascii	"float\000"
 1958      7400
 1959              	.LASF7:
 1960 0138 6C6F6E67 		.ascii	"long long unsigned int\000"
 1960      206C6F6E 
 1960      6720756E 
 1960      7369676E 
 1960      65642069 
 1961              	.LASF34:
 1962 014f 73697A65 		.ascii	"size\000"
 1962      00
 1963              	.LASF35:
 1964 0154 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 57


 1964      5F476574 
 1964      54784275 
 1964      66666572 
 1964      53697A65 
 1965              	.LASF13:
 1966 0169 72656738 		.ascii	"reg8\000"
 1966      00
 1967              	.LASF19:
 1968 016e 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 1968      5F456E61 
 1968      626C6554 
 1968      78496E74 
 1968      00
 1969              	.LASF5:
 1970 017f 6C6F6E67 		.ascii	"long unsigned int\000"
 1970      20756E73 
 1970      69676E65 
 1970      6420696E 
 1970      7400
 1971              	.LASF12:
 1972 0191 75696E74 		.ascii	"uint8\000"
 1972      3800
 1973              	.LASF38:
 1974 0197 5350494D 		.ascii	"SPIM_PutArray\000"
 1974      5F507574 
 1974      41727261 
 1974      7900
 1975              	.LASF18:
 1976 01a5 656E6162 		.ascii	"enableInterrupts\000"
 1976      6C65496E 
 1976      74657272 
 1976      75707473 
 1976      00
 1977              	.LASF31:
 1978 01b6 5350494D 		.ascii	"SPIM_ReadRxData\000"
 1978      5F526561 
 1978      64527844 
 1978      61746100 
 1979              	.LASF1:
 1980 01c6 756E7369 		.ascii	"unsigned char\000"
 1980      676E6564 
 1980      20636861 
 1980      7200
 1981              	.LASF21:
 1982 01d4 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 1982      5F446973 
 1982      61626C65 
 1982      5478496E 
 1982      7400
 1983              	.LASF10:
 1984 01e6 646F7562 		.ascii	"double\000"
 1984      6C6500
 1985              	.LASF45:
 1986 01ed 5350494D 		.ascii	"SPIM_EnableInt\000"
 1986      5F456E61 
 1986      626C6549 
 1986      6E7400
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 58


 1987              	.LASF25:
 1988 01fc 696E7453 		.ascii	"intSrc\000"
 1988      726300
 1989              	.LASF51:
 1990 0203 5350494D 		.ascii	"SPIM_swStatusRx\000"
 1990      5F737753 
 1990      74617475 
 1990      73527800 
 1991              	.LASF33:
 1992 0213 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 1992      5F476574 
 1992      52784275 
 1992      66666572 
 1992      53697A65 
 1993              	.LASF23:
 1994 0228 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 1994      5F536574 
 1994      5478496E 
 1994      74657272 
 1994      7570744D 
 1995              	.LASF52:
 1996 0240 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1996      74657243 
 1996      72697469 
 1996      63616C53 
 1996      65637469 
 1997              	.LASF8:
 1998 0257 756E7369 		.ascii	"unsigned int\000"
 1998      676E6564 
 1998      20696E74 
 1998      00
 1999              	.LASF53:
 2000 0264 43794578 		.ascii	"CyExitCriticalSection\000"
 2000      69744372 
 2000      69746963 
 2000      616C5365 
 2000      6374696F 
 2001              	.LASF40:
 2002 027a 62797465 		.ascii	"byteCount\000"
 2002      436F756E 
 2002      7400
 2003              	.LASF28:
 2004 0284 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2004      5F526561 
 2004      64527853 
 2004      74617475 
 2004      7300
 2005              	.LASF41:
 2006 0296 62756649 		.ascii	"bufIndex\000"
 2006      6E646578 
 2006      00
 2007              	.LASF56:
 2008 029f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2008      43313120 
 2008      352E342E 
 2008      31203230 
 2008      31363036 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 59


 2009 02d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2009      20726576 
 2009      6973696F 
 2009      6E203233 
 2009      37373135 
 2010 0305 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2010      66756E63 
 2010      74696F6E 
 2010      2D736563 
 2010      74696F6E 
 2011              	.LASF15:
 2012 032d 73697A65 		.ascii	"sizetype\000"
 2012      74797065 
 2012      00
 2013              	.LASF6:
 2014 0336 6C6F6E67 		.ascii	"long long int\000"
 2014      206C6F6E 
 2014      6720696E 
 2014      7400
 2015              	.LASF43:
 2016 0344 5350494D 		.ascii	"SPIM_Init\000"
 2016      5F496E69 
 2016      7400
 2017              	.LASF42:
 2018 034e 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2018      5F436C65 
 2018      61724649 
 2018      464F00
 2019              	.LASF36:
 2020 035d 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2020      5F436C65 
 2020      61725278 
 2020      42756666 
 2020      657200
 2021              	.LASF2:
 2022 0370 73686F72 		.ascii	"short int\000"
 2022      7420696E 
 2022      7400
 2023              	.LASF37:
 2024 037a 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2024      5F436C65 
 2024      61725478 
 2024      42756666 
 2024      657200
 2025              	.LASF39:
 2026 038d 62756666 		.ascii	"buffer\000"
 2026      657200
 2027              	.LASF48:
 2028 0394 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2028      5F526561 
 2028      64537461 
 2028      74757300 
 2029              	.LASF50:
 2030 03a4 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2030      5F737753 
 2030      74617475 
 2030      73547800 
ARM GAS  C:\Users\quint\AppData\Local\Temp\cc3vQtp8.s 			page 60


 2031              	.LASF20:
 2032 03b4 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2032      5F456E61 
 2032      626C6552 
 2032      78496E74 
 2032      00
 2033              	.LASF4:
 2034 03c5 6C6F6E67 		.ascii	"long int\000"
 2034      20696E74 
 2034      00
 2035              	.LASF26:
 2036 03ce 746D7053 		.ascii	"tmpStatus\000"
 2036      74617475 
 2036      7300
 2037              	.LASF14:
 2038 03d8 6C6F6E67 		.ascii	"long double\000"
 2038      20646F75 
 2038      626C6500 
 2039              	.LASF0:
 2040 03e4 7369676E 		.ascii	"signed char\000"
 2040      65642063 
 2040      68617200 
 2041              	.LASF44:
 2042 03f0 5350494D 		.ascii	"SPIM_Start\000"
 2042      5F537461 
 2042      727400
 2043              	.LASF27:
 2044 03fb 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2044      5F526561 
 2044      64547853 
 2044      74617475 
 2044      7300
 2045              	.LASF22:
 2046 040d 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2046      5F446973 
 2046      61626C65 
 2046      5278496E 
 2046      7400
 2047              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
