ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADCInput.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.section	.text.ADCInput_Init,"ax",%progbits
  21              		.align	2
  22              		.global	ADCInput_Init
  23              		.code	16
  24              		.thumb_func
  25              		.type	ADCInput_Init, %function
  26              	ADCInput_Init:
  27              	.LFB1:
  28              		.file 1 "Generated_Source\\PSoC4\\ADCInput.c"
   1:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADCInput.c **** * File Name: ADCInput.c
   3:Generated_Source\PSoC4/ADCInput.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADCInput.c **** *
   5:Generated_Source\PSoC4/ADCInput.c **** * Description:
   6:Generated_Source\PSoC4/ADCInput.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADCInput.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADCInput.c **** *
   9:Generated_Source\PSoC4/ADCInput.c **** * Note:
  10:Generated_Source\PSoC4/ADCInput.c **** *
  11:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADCInput.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADCInput.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADCInput.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADCInput.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADCInput.c **** 
  18:Generated_Source\PSoC4/ADCInput.c **** #include "ADCInput.h"
  19:Generated_Source\PSoC4/ADCInput.c **** 
  20:Generated_Source\PSoC4/ADCInput.c **** 
  21:Generated_Source\PSoC4/ADCInput.c **** /***************************************
  22:Generated_Source\PSoC4/ADCInput.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADCInput.c **** ***************************************/
  24:Generated_Source\PSoC4/ADCInput.c **** uint8 ADCInput_initVar = 0u;
  25:Generated_Source\PSoC4/ADCInput.c **** volatile int16 ADCInput_offset[ADCInput_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADCInput.c **** volatile int32 ADCInput_countsPer10Volt[ADCInput_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADCInput.c **** 
  28:Generated_Source\PSoC4/ADCInput.c **** 
  29:Generated_Source\PSoC4/ADCInput.c **** /***************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 2


  30:Generated_Source\PSoC4/ADCInput.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADCInput.c **** ***************************************/
  32:Generated_Source\PSoC4/ADCInput.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADCInput.c **** static const uint32 CYCODE ADCInput_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:Generated_Source\PSoC4/ADCInput.c **** 
  35:Generated_Source\PSoC4/ADCInput.c **** 
  36:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_Start
  38:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADCInput.c **** *
  40:Generated_Source\PSoC4/ADCInput.c **** * Summary:
  41:Generated_Source\PSoC4/ADCInput.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADCInput.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADCInput.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADCInput.c **** *
  45:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
  46:Generated_Source\PSoC4/ADCInput.c **** *  None.
  47:Generated_Source\PSoC4/ADCInput.c **** *
  48:Generated_Source\PSoC4/ADCInput.c **** * Return:
  49:Generated_Source\PSoC4/ADCInput.c **** *  None.
  50:Generated_Source\PSoC4/ADCInput.c **** *
  51:Generated_Source\PSoC4/ADCInput.c **** * Global variables:
  52:Generated_Source\PSoC4/ADCInput.c **** *  The ADCInput_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADCInput.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADCInput.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADCInput.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_Start() routine.
  57:Generated_Source\PSoC4/ADCInput.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADCInput.c **** *  to zero before call of ADCInput_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_Init() and ADCInput_Enable() as done in the
  60:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_Start() routine.
  61:Generated_Source\PSoC4/ADCInput.c **** *
  62:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_Start(void)
  64:Generated_Source\PSoC4/ADCInput.c **** {
  65:Generated_Source\PSoC4/ADCInput.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADCInput.c ****     if(ADCInput_initVar == 0u)
  67:Generated_Source\PSoC4/ADCInput.c ****     {
  68:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_Init();
  69:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_initVar = 1u;
  70:Generated_Source\PSoC4/ADCInput.c ****     }
  71:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_Enable();
  72:Generated_Source\PSoC4/ADCInput.c **** }
  73:Generated_Source\PSoC4/ADCInput.c **** 
  74:Generated_Source\PSoC4/ADCInput.c **** 
  75:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_Init
  77:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADCInput.c **** *
  79:Generated_Source\PSoC4/ADCInput.c **** * Summary:
  80:Generated_Source\PSoC4/ADCInput.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADCInput.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_Start().
  83:Generated_Source\PSoC4/ADCInput.c **** *
  84:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
  85:Generated_Source\PSoC4/ADCInput.c **** *  None.
  86:Generated_Source\PSoC4/ADCInput.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 3


  87:Generated_Source\PSoC4/ADCInput.c **** * Return:
  88:Generated_Source\PSoC4/ADCInput.c **** *  None.
  89:Generated_Source\PSoC4/ADCInput.c **** *
  90:Generated_Source\PSoC4/ADCInput.c **** * Global variables:
  91:Generated_Source\PSoC4/ADCInput.c **** *  The ADCInput_offset variable is initialized.
  92:Generated_Source\PSoC4/ADCInput.c **** *
  93:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_Init(void)
  95:Generated_Source\PSoC4/ADCInput.c **** {
  29              		.loc 1 95 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADCInput.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADCInput.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADCInput.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADCInput.c **** 
 100:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADCInput.c ****         static const uint8 CYCODE ADCInput_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADCInput.c ****         {
 103:Generated_Source\PSoC4/ADCInput.c ****             (uint8)(ADCInput_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADCInput.c ****             (uint8)ADCInput_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADCInput.c ****             ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADCInput.c ****              (uint8)ADCInput_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 4


 136:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADCInput.c ****                 ,(uint8)(ADCInput_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADCInput.c ****                  (uint8)ADCInput_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADCInput.c ****             #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADCInput.c ****         };
 168:Generated_Source\PSoC4/ADCInput.c ****     #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADCInput.c **** 
 170:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADCInput.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADCInput.c ****         CyIntSetPriority(ADCInput_INTC_NUMBER, ADCInput_INTC_PRIOR_NUMBER);
  37              		.loc 1 172 0
  38 0002 0321     		movs	r1, #3
  39 0004 0E20     		movs	r0, #14
  40 0006 FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL0:
 173:Generated_Source\PSoC4/ADCInput.c ****         (void)CyIntSetVector(ADCInput_INTC_NUMBER, &ADCInput_ISR);
  42              		.loc 1 173 0
  43 000a 4249     		ldr	r1, .L12
  44 000c 0E20     		movs	r0, #14
  45 000e FFF7FEFF 		bl	CyIntSetVector
  46              	.LVL1:
 174:Generated_Source\PSoC4/ADCInput.c ****     #endif   /* End ADCInput_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADCInput.c **** 
 176:Generated_Source\PSoC4/ADCInput.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CHAN_EN_REG = ADCInput_DEFAULT_EN_CHANNELS;
  47              		.loc 1 177 0
  48 0012 0322     		movs	r2, #3
  49 0014 404B     		ldr	r3, .L12+4
  50 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CTRL_REG |= ADCInput_DEFAULT_CTRL_REG_CFG | 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 5


 179:Generated_Source\PSoC4/ADCInput.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADCInput.c ****         (((ADCInput_PUMP_CTRL_REG & ADCInput_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 180 0
  52 0018 404B     		ldr	r3, .L12+8
  53 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CTRL_REG |= ADCInput_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 178 0
  55 001c 002B     		cmp	r3, #0
  56 001e 01DA     		bge	.L10
  57 0020 3F49     		ldr	r1, .L12+12
  58 0022 00E0     		b	.L2
  59              	.L10:
  60 0024 3F49     		ldr	r1, .L12+16
  61              	.L2:
 178:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CTRL_REG |= ADCInput_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 178 0 is_stmt 0 discriminator 4
  63 0026 404A     		ldr	r2, .L12+20
  64 0028 1368     		ldr	r3, [r2]
  65 002a 0B43     		orrs	r3, r1
  66 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_SAMPLE_CTRL_REG = ADCInput_DEFAULT_SAMPLE_CTRL_REG_CFG;
  67              		.loc 1 182 0 is_stmt 1 discriminator 4
  68 002e 3F4A     		ldr	r2, .L12+24
  69 0030 3F4B     		ldr	r3, .L12+28
  70 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_THRES_REG = ADCInput_DEFAULT_RANGE_THRES_REG_CFG;
  71              		.loc 1 183 0 discriminator 4
  72 0034 3F4A     		ldr	r2, .L12+32
  73 0036 404B     		ldr	r3, .L12+36
  74 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_COND_REG  = ADCInput_COMPARE_MODE;
  75              		.loc 1 184 0 discriminator 4
  76 003a 0023     		movs	r3, #0
  77 003c 3F4A     		ldr	r2, .L12+40
  78 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_SAMPLE_TIME01_REG = ADCInput_DEFAULT_SAMPLE_TIME01_REG_CFG;
  79              		.loc 1 185 0 discriminator 4
  80 0040 3F4A     		ldr	r2, .L12+44
  81 0042 4049     		ldr	r1, .L12+48
  82 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_SAMPLE_TIME23_REG = ADCInput_DEFAULT_SAMPLE_TIME23_REG_CFG;
  83              		.loc 1 186 0 discriminator 4
  84 0046 4049     		ldr	r1, .L12+52
  85 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADCInput.c ****     
 188:Generated_Source\PSoC4/ADCInput.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_MUX_SWITCH0_REG |= ADCInput_DEFAULT_MUX_SWITCH0;
  86              		.loc 1 190 0 discriminator 4
  87 004a 404A     		ldr	r2, .L12+56
  88 004c 1168     		ldr	r1, [r2]
  89 004e 8020     		movs	r0, #128
  90 0050 4002     		lsls	r0, r0, #9
  91 0052 0143     		orrs	r1, r0
  92 0054 1160     		str	r1, [r2]
 191:Generated_Source\PSoC4/ADCInput.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 6


 192:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADCInput.c ****             ADCInput_MUX_SWITCH_HW_CTRL_REG |= ADCInput_DEFAULT_MUX_SWITCH0;
  93              		.loc 1 193 0 discriminator 4
  94 0056 3E49     		ldr	r1, .L12+60
  95 0058 0A68     		ldr	r2, [r1]
  96 005a 0243     		orrs	r2, r0
  97 005c 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADCInput.c ****     #endif /*ADCInput_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADCInput.c **** 
 197:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_SATURATE_INTR_MASK_REG = 0u;
  98              		.loc 1 197 0 discriminator 4
  99 005e 3D4A     		ldr	r2, .L12+64
 100 0060 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_INTR_MASK_REG = 0u;
 101              		.loc 1 198 0 discriminator 4
 102 0062 3D4A     		ldr	r2, .L12+68
 103 0064 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_INTR_MASK_REG = ADCInput_SAR_INTR_MASK;
 104              		.loc 1 199 0 discriminator 4
 105 0066 0133     		adds	r3, r3, #1
 106 0068 3C4A     		ldr	r2, .L12+72
 107 006a 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADCInput.c **** 
 201:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_CY_SAR_IP_VER == ADCInput_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_ANA_TRIM_REG = ADCInput_TRIM_COEF;
 108              		.loc 1 202 0 discriminator 4
 109 006c 0221     		movs	r1, #2
 110 006e 3C4A     		ldr	r2, .L12+76
 111 0070 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADCInput.c ****     #endif /* (ADCInput_CY_SAR_IP_VER == ADCInput_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADCInput.c **** 
 205:Generated_Source\PSoC4/ADCInput.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADCInput.c ****     tmpRegVal = ADCInput_SAR_DFT_CTRL_REG;
 112              		.loc 1 206 0 discriminator 4
 113 0072 3C49     		ldr	r1, .L12+80
 114 0074 0868     		ldr	r0, [r1]
 115              	.LVL2:
 207:Generated_Source\PSoC4/ADCInput.c ****     tmpRegVal &= (uint32)~ADCInput_DCEN;
 116              		.loc 1 207 0 discriminator 4
 117 0076 3C4A     		ldr	r2, .L12+84
 118 0078 0240     		ands	r2, r0
 119              	.LVL3:
 208:Generated_Source\PSoC4/ADCInput.c ****     
 209:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_CY_SAR_IP_VER == ADCInput_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_NOMINAL_CLOCK_FREQ > (ADCInput_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal |= ADCInput_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADCInput.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal |= ADCInput_DLY_INC;
 120              		.loc 1 213 0 discriminator 4
 121 007a 1343     		orrs	r3, r2
 122              	.LVL4:
 214:Generated_Source\PSoC4/ADCInput.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADCInput.c ****     #else
 216:Generated_Source\PSoC4/ADCInput.c ****         #if ((ADCInput_DEFAULT_VREF_SEL == ADCInput__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADCInput.c ****              (ADCInput_DEFAULT_VREF_SEL == ADCInput__INTERNALVREF))
 218:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal |= ADCInput_DLY_INC;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 7


 219:Generated_Source\PSoC4/ADCInput.c ****         #else
 220:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal |= ADCInput_DCEN;
 221:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal &= (uint32)~ADCInput_DLY_INC;
 222:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ((ADCInput_DEFAULT_VREF_SEL == ADCInput__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADCInput.c ****                    (ADCInput_DEFAULT_VREF_SEL == ADCInput__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADCInput.c ****     #endif /* (ADCInput_CY_SAR_IP_VER == ADCInput_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADCInput.c ****     
 226:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_DFT_CTRL_REG = tmpRegVal;
 123              		.loc 1 226 0 discriminator 4
 124 007c 0B60     		str	r3, [r1]
 125              	.LVL5:
 227:Generated_Source\PSoC4/ADCInput.c **** 
 228:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_MAX_RESOLUTION != ADCInput_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_WOUNDING_REG = ADCInput_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADCInput.c ****     #endif /* ADCInput_MAX_RESOLUTION != ADCInput_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADCInput.c **** 
 232:Generated_Source\PSoC4/ADCInput.c ****     for(chNum = 0u; chNum < ADCInput_TOTAL_CHANNELS_NUM; chNum++)
 126              		.loc 1 232 0 discriminator 4
 127 007e 0024     		movs	r4, #0
 128 0080 45E0     		b	.L3
 129              	.LVL6:
 130              	.L9:
 233:Generated_Source\PSoC4/ADCInput.c ****     {
 234:Generated_Source\PSoC4/ADCInput.c ****         tmpRegVal = (ADCInput_channelsConfig[chNum] & ADCInput_CHANNEL_CONFIG_MASK);
 131              		.loc 1 234 0
 132 0082 3A49     		ldr	r1, .L12+88
 133 0084 A200     		lsls	r2, r4, #2
 134 0086 5058     		ldr	r0, [r2, r1]
 135 0088 DC23     		movs	r3, #220
 136 008a 9B01     		lsls	r3, r3, #6
 137 008c 0340     		ands	r3, r0
 138              	.LVL7:
 235:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal |= ADCInput_InputsPlacement[chNum];
 139              		.loc 1 236 0
 140 008e 0919     		adds	r1, r1, r4
 141 0090 097A     		ldrb	r1, [r1, #8]
 142 0092 0B43     		orrs	r3, r1
 143              	.LVL8:
 237:Generated_Source\PSoC4/ADCInput.c ****         #endif /* End ADCInput_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADCInput.c ****         
 239:Generated_Source\PSoC4/ADCInput.c ****         
 240:Generated_Source\PSoC4/ADCInput.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADCInput.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADCInput.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADCInput.c ****         */
 244:Generated_Source\PSoC4/ADCInput.c ****         #if((ADCInput_MAX_RESOLUTION != ADCInput_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADCInput.c ****             (ADCInput_ALT_WOUNDING == ADCInput_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADCInput.c ****             tmpRegVal &= (uint32)(~ADCInput_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_MAX_RESOLUTION != ADCInput_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADCInput.c **** 
 249:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADCInput.c ****         if(chNum < ADCInput_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADCInput.c ****         {
 253:Generated_Source\PSoC4/ADCInput.c ****             CY_SET_REG32((reg32 *)(ADCInput_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal)
 144              		.loc 1 253 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 8


 145 0094 3649     		ldr	r1, .L12+92
 146 0096 8C46     		mov	ip, r1
 147 0098 6244     		add	r2, r2, ip
 148 009a 1360     		str	r3, [r2]
 254:Generated_Source\PSoC4/ADCInput.c **** 
 255:Generated_Source\PSoC4/ADCInput.c ****             if((ADCInput_channelsConfig[chNum] & ADCInput_IS_SATURATE_EN_MASK) != 0u)
 149              		.loc 1 255 0
 150 009c C307     		lsls	r3, r0, #31
 151 009e 07D5     		bpl	.L4
 152              	.LVL9:
 256:Generated_Source\PSoC4/ADCInput.c ****             {
 257:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 153              		.loc 1 257 0
 154 00a0 2C49     		ldr	r1, .L12+64
 155 00a2 0A68     		ldr	r2, [r1]
 156              	.LVL10:
 157 00a4 0123     		movs	r3, #1
 158 00a6 A340     		lsls	r3, r3, r4
 159 00a8 1B04     		lsls	r3, r3, #16
 160 00aa 1B0C     		lsrs	r3, r3, #16
 161 00ac 1343     		orrs	r3, r2
 162 00ae 0B60     		str	r3, [r1]
 163              	.LVL11:
 164              	.L4:
 258:Generated_Source\PSoC4/ADCInput.c ****             }
 259:Generated_Source\PSoC4/ADCInput.c **** 
 260:Generated_Source\PSoC4/ADCInput.c ****             if((ADCInput_channelsConfig[chNum] & ADCInput_IS_RANGE_CTRL_EN_MASK) != 0u)
 165              		.loc 1 260 0
 166 00b0 A300     		lsls	r3, r4, #2
 167 00b2 2E4A     		ldr	r2, .L12+88
 168              	.LVL12:
 169 00b4 9B58     		ldr	r3, [r3, r2]
 170 00b6 9B07     		lsls	r3, r3, #30
 171 00b8 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADCInput.c ****             {
 262:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 172              		.loc 1 262 0
 173 00ba 2749     		ldr	r1, .L12+68
 174 00bc 0A68     		ldr	r2, [r1]
 175              	.LVL13:
 176 00be 0123     		movs	r3, #1
 177 00c0 A340     		lsls	r3, r3, r4
 178 00c2 1B04     		lsls	r3, r3, #16
 179 00c4 1B0C     		lsrs	r3, r3, #16
 180 00c6 1343     		orrs	r3, r2
 181 00c8 0B60     		str	r3, [r1]
 182              	.L5:
 263:Generated_Source\PSoC4/ADCInput.c ****             }
 264:Generated_Source\PSoC4/ADCInput.c ****         }
 265:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADCInput.c ****             else
 267:Generated_Source\PSoC4/ADCInput.c ****             {
 268:Generated_Source\PSoC4/ADCInput.c ****                 CY_SET_REG32(ADCInput_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADCInput_INJ_TAILGATING)
 269:Generated_Source\PSoC4/ADCInput.c **** 
 270:Generated_Source\PSoC4/ADCInput.c ****                 if((ADCInput_channelsConfig[chNum] & ADCInput_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADCInput.c ****                 {
 272:Generated_Source\PSoC4/ADCInput.c ****                     ADCInput_SAR_INTR_MASK_REG |= ADCInput_INJ_SATURATE_MASK;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 9


 273:Generated_Source\PSoC4/ADCInput.c ****                 }
 274:Generated_Source\PSoC4/ADCInput.c **** 
 275:Generated_Source\PSoC4/ADCInput.c ****                 if((ADCInput_channelsConfig[chNum] & ADCInput_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADCInput.c ****                 {
 277:Generated_Source\PSoC4/ADCInput.c ****                     ADCInput_SAR_INTR_MASK_REG |= ADCInput_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADCInput.c ****                 }
 279:Generated_Source\PSoC4/ADCInput.c ****             }
 280:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADCInput.c **** 
 282:Generated_Source\PSoC4/ADCInput.c ****         if((ADCInput_channelsConfig[chNum] & ADCInput_ALT_RESOLUTION_ON) != 0u)
 183              		.loc 1 282 0
 184 00ca A300     		lsls	r3, r4, #2
 185 00cc 274A     		ldr	r2, .L12+88
 186              	.LVL14:
 187 00ce 9B58     		ldr	r3, [r3, r2]
 188 00d0 9A05     		lsls	r2, r3, #22
 189 00d2 02D5     		bpl	.L11
 190              	.LVL15:
 283:Generated_Source\PSoC4/ADCInput.c ****         {
 284:Generated_Source\PSoC4/ADCInput.c ****                counts = (int32)ADCInput_DEFAULT_MAX_WRK_ALT;
 191              		.loc 1 284 0
 192 00d4 8020     		movs	r0, #128
 193              	.LVL16:
 194 00d6 4000     		lsls	r0, r0, #1
 195 00d8 01E0     		b	.L6
 196              	.LVL17:
 197              	.L11:
 285:Generated_Source\PSoC4/ADCInput.c ****         }
 286:Generated_Source\PSoC4/ADCInput.c ****         else
 287:Generated_Source\PSoC4/ADCInput.c ****         {
 288:Generated_Source\PSoC4/ADCInput.c ****                counts = (int32)ADCInput_SAR_WRK_MAX_12BIT;
 198              		.loc 1 288 0
 199 00da 8020     		movs	r0, #128
 200              	.LVL18:
 201 00dc 4001     		lsls	r0, r0, #5
 202              	.L6:
 203              	.LVL19:
 289:Generated_Source\PSoC4/ADCInput.c ****         }
 290:Generated_Source\PSoC4/ADCInput.c **** 
 291:Generated_Source\PSoC4/ADCInput.c ****         if((ADCInput_channelsConfig[chNum] & ADCInput_DIFFERENTIAL_EN) == 0u)
 204              		.loc 1 291 0
 205 00de DB05     		lsls	r3, r3, #23
 206 00e0 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADCInput.c ****         {
 293:Generated_Source\PSoC4/ADCInput.c ****             #if((ADCInput_DEFAULT_SE_RESULT_FORMAT_SEL == ADCInput__FSIGNED) && \
 294:Generated_Source\PSoC4/ADCInput.c ****                 (ADCInput_DEFAULT_NEG_INPUT_SEL == ADCInput__VREF))
 295:Generated_Source\PSoC4/ADCInput.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADCInput.c ****             #else
 298:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_offset[chNum] = 0;
 207              		.loc 1 298 0
 208 00e2 6300     		lsls	r3, r4, #1
 209 00e4 0021     		movs	r1, #0
 210 00e6 234A     		ldr	r2, .L12+96
 211 00e8 9952     		strh	r1, [r3, r2]
 212 00ea 03E0     		b	.L8
 213              	.L7:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 10


 299:Generated_Source\PSoC4/ADCInput.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADCInput__FSIGNED */
 300:Generated_Source\PSoC4/ADCInput.c ****         }
 301:Generated_Source\PSoC4/ADCInput.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADCInput.c ****         {
 303:Generated_Source\PSoC4/ADCInput.c ****             #if(ADCInput_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADCInput__FUNSIGNED)
 304:Generated_Source\PSoC4/ADCInput.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADCInput.c ****             #else
 307:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_offset[chNum] = 0;
 214              		.loc 1 307 0
 215 00ec 6300     		lsls	r3, r4, #1
 216 00ee 0021     		movs	r1, #0
 217 00f0 204A     		ldr	r2, .L12+96
 218 00f2 9952     		strh	r1, [r3, r2]
 219              	.L8:
 308:Generated_Source\PSoC4/ADCInput.c ****             #endif /* end ADCInput_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADCInput__FUNSIGNED */
 309:Generated_Source\PSoC4/ADCInput.c ****         }
 310:Generated_Source\PSoC4/ADCInput.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_countsPer10Volt[chNum] = (int16)(((counts * ADCInput_10MV_COUNTS) +
 220              		.loc 1 311 0 discriminator 2
 221 00f4 204B     		ldr	r3, .L12+100
 222 00f6 5843     		muls	r0, r3
 223              	.LVL20:
 224 00f8 204B     		ldr	r3, .L12+104
 225 00fa 9C46     		mov	ip, r3
 226 00fc 6044     		add	r0, r0, ip
 312:Generated_Source\PSoC4/ADCInput.c ****                             ADCInput_DEFAULT_VREF_MV_VALUE) / (ADCInput_DEFAULT_VREF_MV_VALUE * 2))
 227              		.loc 1 312 0 discriminator 2
 228 00fe 2049     		ldr	r1, .L12+108
 229 0100 FFF7FEFF 		bl	__aeabi_idiv
 230              	.LVL21:
 311:Generated_Source\PSoC4/ADCInput.c ****                             ADCInput_DEFAULT_VREF_MV_VALUE) / (ADCInput_DEFAULT_VREF_MV_VALUE * 2))
 231              		.loc 1 311 0 discriminator 2
 232 0104 00B2     		sxth	r0, r0
 233 0106 A200     		lsls	r2, r4, #2
 234 0108 1E4B     		ldr	r3, .L12+112
 235 010a D050     		str	r0, [r2, r3]
 232:Generated_Source\PSoC4/ADCInput.c ****     {
 236              		.loc 1 232 0 discriminator 2
 237 010c 0134     		adds	r4, r4, #1
 238              	.LVL22:
 239              	.L3:
 232:Generated_Source\PSoC4/ADCInput.c ****     {
 240              		.loc 1 232 0 is_stmt 0 discriminator 1
 241 010e 012C     		cmp	r4, #1
 242 0110 B7D9     		bls	.L9
 313:Generated_Source\PSoC4/ADCInput.c ****     }
 314:Generated_Source\PSoC4/ADCInput.c **** }
 243              		.loc 1 314 0 is_stmt 1
 244              		@ sp needed
 245              	.LVL23:
 246 0112 10BD     		pop	{r4, pc}
 247              	.L13:
 248              		.align	2
 249              	.L12:
 250 0114 00000000 		.word	ADCInput_ISR
 251 0118 20001A40 		.word	1075445792
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 11


 252 011c 80031A40 		.word	1075446656
 253 0120 70201010 		.word	269492336
 254 0124 70200010 		.word	268443760
 255 0128 00001A40 		.word	1075445760
 256 012c 8C000080 		.word	-2147483508
 257 0130 04001A40 		.word	1075445764
 258 0134 0000FF07 		.word	134152192
 259 0138 18001A40 		.word	1075445784
 260 013c 1C001A40 		.word	1075445788
 261 0140 04000400 		.word	262148
 262 0144 10001A40 		.word	1075445776
 263 0148 14001A40 		.word	1075445780
 264 014c 00031A40 		.word	1075446528
 265 0150 40031A40 		.word	1075446592
 266 0154 28021A40 		.word	1075446312
 267 0158 38021A40 		.word	1075446328
 268 015c 18021A40 		.word	1075446296
 269 0160 000F1A40 		.word	1075449600
 270 0164 30001A40 		.word	1075445808
 271 0168 FFFFFFDF 		.word	-536870913
 272 016c 00000000 		.word	.LANCHOR0
 273 0170 80001A40 		.word	1075445888
 274 0174 00000000 		.word	ADCInput_offset
 275 0178 10270000 		.word	10000
 276 017c E40C0000 		.word	3300
 277 0180 C8190000 		.word	6600
 278 0184 00000000 		.word	ADCInput_countsPer10Volt
 279              		.cfi_endproc
 280              	.LFE1:
 281              		.size	ADCInput_Init, .-ADCInput_Init
 282              		.section	.text.ADCInput_Enable,"ax",%progbits
 283              		.align	2
 284              		.global	ADCInput_Enable
 285              		.code	16
 286              		.thumb_func
 287              		.type	ADCInput_Enable, %function
 288              	ADCInput_Enable:
 289              	.LFB2:
 315:Generated_Source\PSoC4/ADCInput.c **** 
 316:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADCInput.c **** *
 320:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 321:Generated_Source\PSoC4/ADCInput.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADCInput.c **** *
 323:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 324:Generated_Source\PSoC4/ADCInput.c **** *  None.
 325:Generated_Source\PSoC4/ADCInput.c **** *
 326:Generated_Source\PSoC4/ADCInput.c **** * Return:
 327:Generated_Source\PSoC4/ADCInput.c **** *  None.
 328:Generated_Source\PSoC4/ADCInput.c **** *
 329:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_Enable(void)
 331:Generated_Source\PSoC4/ADCInput.c **** {
 290              		.loc 1 331 0
 291              		.cfi_startproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 12


 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 10B5     		push	{r4, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADCInput.c ****     if (0u == (ADCInput_SAR_CTRL_REG & ADCInput_ENABLE))
 298              		.loc 1 332 0
 299 0002 074B     		ldr	r3, .L16
 300 0004 1B68     		ldr	r3, [r3]
 301 0006 002B     		cmp	r3, #0
 302 0008 08DB     		blt	.L14
 333:Generated_Source\PSoC4/ADCInput.c ****     {
 334:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_CY_SAR_IP_VER != ADCInput_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADCInput.c **** 
 336:Generated_Source\PSoC4/ADCInput.c ****             while (0u != (ADCInput_SAR_STATUS_REG & ADCInput_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADCInput.c ****             {
 338:Generated_Source\PSoC4/ADCInput.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADCInput.c ****             }
 340:Generated_Source\PSoC4/ADCInput.c ****         #endif /* (ADCInput_CY_SAR_IP_VER != ADCInput_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADCInput.c ****         
 342:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_SAR_CTRL_REG |= ADCInput_ENABLE;
 303              		.loc 1 342 0
 304 000a 054A     		ldr	r2, .L16
 305 000c 1368     		ldr	r3, [r2]
 306 000e 8021     		movs	r1, #128
 307 0010 0906     		lsls	r1, r1, #24
 308 0012 0B43     		orrs	r3, r1
 309 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADCInput.c ****         
 344:Generated_Source\PSoC4/ADCInput.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADCInput.c ****         CyDelayUs(ADCInput_10US_DELAY);         
 310              		.loc 1 345 0
 311 0016 0A20     		movs	r0, #10
 312 0018 FFF7FEFF 		bl	CyDelayUs
 313              	.LVL24:
 314              	.L14:
 346:Generated_Source\PSoC4/ADCInput.c ****     }
 347:Generated_Source\PSoC4/ADCInput.c **** }
 315              		.loc 1 347 0
 316              		@ sp needed
 317 001c 10BD     		pop	{r4, pc}
 318              	.L17:
 319 001e C046     		.align	2
 320              	.L16:
 321 0020 00001A40 		.word	1075445760
 322              		.cfi_endproc
 323              	.LFE2:
 324              		.size	ADCInput_Enable, .-ADCInput_Enable
 325              		.section	.text.ADCInput_Start,"ax",%progbits
 326              		.align	2
 327              		.global	ADCInput_Start
 328              		.code	16
 329              		.thumb_func
 330              		.type	ADCInput_Start, %function
 331              	ADCInput_Start:
 332              	.LFB0:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 13


  64:Generated_Source\PSoC4/ADCInput.c ****     /* If not Initialized then initialize all required hardware and software */
 333              		.loc 1 64 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 10B5     		push	{r4, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADCInput.c ****     {
 341              		.loc 1 66 0
 342 0002 064B     		ldr	r3, .L20
 343 0004 1B78     		ldrb	r3, [r3]
 344 0006 002B     		cmp	r3, #0
 345 0008 04D1     		bne	.L19
  68:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_initVar = 1u;
 346              		.loc 1 68 0
 347 000a FFF7FEFF 		bl	ADCInput_Init
 348              	.LVL25:
  69:Generated_Source\PSoC4/ADCInput.c ****     }
 349              		.loc 1 69 0
 350 000e 0122     		movs	r2, #1
 351 0010 024B     		ldr	r3, .L20
 352 0012 1A70     		strb	r2, [r3]
 353              	.L19:
  71:Generated_Source\PSoC4/ADCInput.c **** }
 354              		.loc 1 71 0
 355 0014 FFF7FEFF 		bl	ADCInput_Enable
 356              	.LVL26:
  72:Generated_Source\PSoC4/ADCInput.c **** 
 357              		.loc 1 72 0
 358              		@ sp needed
 359 0018 10BD     		pop	{r4, pc}
 360              	.L21:
 361 001a C046     		.align	2
 362              	.L20:
 363 001c 00000000 		.word	.LANCHOR1
 364              		.cfi_endproc
 365              	.LFE0:
 366              		.size	ADCInput_Start, .-ADCInput_Start
 367              		.section	.text.ADCInput_Stop,"ax",%progbits
 368              		.align	2
 369              		.global	ADCInput_Stop
 370              		.code	16
 371              		.thumb_func
 372              		.type	ADCInput_Stop, %function
 373              	ADCInput_Stop:
 374              	.LFB3:
 348:Generated_Source\PSoC4/ADCInput.c **** 
 349:Generated_Source\PSoC4/ADCInput.c **** 
 350:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_Stop
 352:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADCInput.c **** *
 354:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 355:Generated_Source\PSoC4/ADCInput.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADCInput.c **** *  mode.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 14


 357:Generated_Source\PSoC4/ADCInput.c **** *
 358:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 359:Generated_Source\PSoC4/ADCInput.c **** *  None.
 360:Generated_Source\PSoC4/ADCInput.c **** *
 361:Generated_Source\PSoC4/ADCInput.c **** * Return:
 362:Generated_Source\PSoC4/ADCInput.c **** *  None.
 363:Generated_Source\PSoC4/ADCInput.c **** *
 364:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_Stop(void)
 366:Generated_Source\PSoC4/ADCInput.c **** {
 375              		.loc 1 366 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CTRL_REG &= (uint32)~ADCInput_ENABLE;
 380              		.loc 1 367 0
 381 0000 024A     		ldr	r2, .L23
 382 0002 1368     		ldr	r3, [r2]
 383 0004 5B00     		lsls	r3, r3, #1
 384 0006 5B08     		lsrs	r3, r3, #1
 385 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADCInput.c **** }
 386              		.loc 1 368 0
 387              		@ sp needed
 388 000a 7047     		bx	lr
 389              	.L24:
 390              		.align	2
 391              	.L23:
 392 000c 00001A40 		.word	1075445760
 393              		.cfi_endproc
 394              	.LFE3:
 395              		.size	ADCInput_Stop, .-ADCInput_Stop
 396              		.section	.text.ADCInput_StartConvert,"ax",%progbits
 397              		.align	2
 398              		.global	ADCInput_StartConvert
 399              		.code	16
 400              		.thumb_func
 401              		.type	ADCInput_StartConvert, %function
 402              	ADCInput_StartConvert:
 403              	.LFB4:
 369:Generated_Source\PSoC4/ADCInput.c **** 
 370:Generated_Source\PSoC4/ADCInput.c **** 
 371:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_StartConvert
 373:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADCInput.c **** *
 375:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 376:Generated_Source\PSoC4/ADCInput.c **** *  Description:
 377:Generated_Source\PSoC4/ADCInput.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADCInput.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADCInput.c **** *
 380:Generated_Source\PSoC4/ADCInput.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADCInput.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADCInput.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADCInput.c **** *
 384:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 15


 385:Generated_Source\PSoC4/ADCInput.c **** *  None.
 386:Generated_Source\PSoC4/ADCInput.c **** *
 387:Generated_Source\PSoC4/ADCInput.c **** * Return:
 388:Generated_Source\PSoC4/ADCInput.c **** *  None.
 389:Generated_Source\PSoC4/ADCInput.c **** *
 390:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_StartConvert(void)
 392:Generated_Source\PSoC4/ADCInput.c **** {
 404              		.loc 1 392 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_DEFAULT_SAMPLE_MODE_SEL == ADCInput__FREERUNNING)
 394:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_SAR_SAMPLE_CTRL_REG |= ADCInput_CONTINUOUS_EN;
 409              		.loc 1 394 0
 410 0000 034A     		ldr	r2, .L26
 411 0002 1368     		ldr	r3, [r2]
 412 0004 8021     		movs	r1, #128
 413 0006 4902     		lsls	r1, r1, #9
 414 0008 0B43     		orrs	r3, r1
 415 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADCInput.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_SAR_START_CTRL_REG = ADCInput_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADCInput.c ****     #endif /* End ADCInput_DEFAULT_SAMPLE_MODE == ADCInput__FREERUNNING */
 398:Generated_Source\PSoC4/ADCInput.c **** 
 399:Generated_Source\PSoC4/ADCInput.c **** }
 416              		.loc 1 399 0
 417              		@ sp needed
 418 000c 7047     		bx	lr
 419              	.L27:
 420 000e C046     		.align	2
 421              	.L26:
 422 0010 04001A40 		.word	1075445764
 423              		.cfi_endproc
 424              	.LFE4:
 425              		.size	ADCInput_StartConvert, .-ADCInput_StartConvert
 426              		.section	.text.ADCInput_StopConvert,"ax",%progbits
 427              		.align	2
 428              		.global	ADCInput_StopConvert
 429              		.code	16
 430              		.thumb_func
 431              		.type	ADCInput_StopConvert, %function
 432              	ADCInput_StopConvert:
 433              	.LFB5:
 400:Generated_Source\PSoC4/ADCInput.c **** 
 401:Generated_Source\PSoC4/ADCInput.c **** 
 402:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_StopConvert
 404:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADCInput.c **** *
 406:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 407:Generated_Source\PSoC4/ADCInput.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADCInput.c **** *
 409:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 410:Generated_Source\PSoC4/ADCInput.c **** *  None.
 411:Generated_Source\PSoC4/ADCInput.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 16


 412:Generated_Source\PSoC4/ADCInput.c **** * Return:
 413:Generated_Source\PSoC4/ADCInput.c **** *  None.
 414:Generated_Source\PSoC4/ADCInput.c **** *
 415:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_StopConvert(void)
 417:Generated_Source\PSoC4/ADCInput.c **** {
 434              		.loc 1 417 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_DEFAULT_SAMPLE_MODE_SEL == ADCInput__FREERUNNING)
 419:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADCInput_CONTINUOUS_EN);
 439              		.loc 1 419 0
 440 0000 024A     		ldr	r2, .L29
 441 0002 1168     		ldr	r1, [r2]
 442 0004 024B     		ldr	r3, .L29+4
 443 0006 0B40     		ands	r3, r1
 444 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADCInput.c ****     #endif /* ADCInput_DEFAULT_SAMPLE_MODE == ADCInput__FREERUNNING */
 421:Generated_Source\PSoC4/ADCInput.c **** }
 445              		.loc 1 421 0
 446              		@ sp needed
 447 000a 7047     		bx	lr
 448              	.L30:
 449              		.align	2
 450              	.L29:
 451 000c 04001A40 		.word	1075445764
 452 0010 FFFFFEFF 		.word	-65537
 453              		.cfi_endproc
 454              	.LFE5:
 455              		.size	ADCInput_StopConvert, .-ADCInput_StopConvert
 456              		.section	.text.ADCInput_IsEndConversion,"ax",%progbits
 457              		.align	2
 458              		.global	ADCInput_IsEndConversion
 459              		.code	16
 460              		.thumb_func
 461              		.type	ADCInput_IsEndConversion, %function
 462              	ADCInput_IsEndConversion:
 463              	.LFB6:
 422:Generated_Source\PSoC4/ADCInput.c **** 
 423:Generated_Source\PSoC4/ADCInput.c **** 
 424:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_IsEndConversion
 426:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADCInput.c **** *
 428:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 429:Generated_Source\PSoC4/ADCInput.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADCInput.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADCInput.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADCInput.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADCInput.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADCInput.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADCInput.c **** *  completed.
 436:Generated_Source\PSoC4/ADCInput.c **** *
 437:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 438:Generated_Source\PSoC4/ADCInput.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 17


 439:Generated_Source\PSoC4/ADCInput.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADCInput.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADCInput.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADCInput.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADCInput.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADCInput.c **** *
 445:Generated_Source\PSoC4/ADCInput.c **** * Return:
 446:Generated_Source\PSoC4/ADCInput.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADCInput.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADCInput.c **** *
 449:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADCInput.c **** uint32 ADCInput_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADCInput.c **** {
 464              		.loc 1 451 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL27:
 470 0000 0200     		movs	r2, r0
 471              	.LVL28:
 452:Generated_Source\PSoC4/ADCInput.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADCInput.c **** 
 454:Generated_Source\PSoC4/ADCInput.c ****     if((retMode & (ADCInput_RETURN_STATUS | ADCInput_WAIT_FOR_RESULT)) != 0u)
 472              		.loc 1 454 0
 473 0002 8307     		lsls	r3, r0, #30
 474 0004 0CD0     		beq	.L35
 475              	.LVL29:
 476              	.L34:
 455:Generated_Source\PSoC4/ADCInput.c ****     {
 456:Generated_Source\PSoC4/ADCInput.c ****         do
 457:Generated_Source\PSoC4/ADCInput.c ****         {
 458:Generated_Source\PSoC4/ADCInput.c ****             status = ADCInput_SAR_INTR_REG & ADCInput_EOS_MASK;
 477              		.loc 1 458 0 discriminator 2
 478 0006 074B     		ldr	r3, .L36
 479 0008 1B68     		ldr	r3, [r3]
 480 000a 0120     		movs	r0, #1
 481 000c 1840     		ands	r0, r3
 482              	.LVL30:
 459:Generated_Source\PSoC4/ADCInput.c ****         }while((status == 0u) && ((retMode & ADCInput_WAIT_FOR_RESULT) != 0u));
 483              		.loc 1 459 0 discriminator 2
 484 000e 01D1     		bne	.L33
 485              		.loc 1 459 0 is_stmt 0 discriminator 1
 486 0010 9307     		lsls	r3, r2, #30
 487 0012 F8D4     		bmi	.L34
 488              	.L33:
 460:Generated_Source\PSoC4/ADCInput.c **** 
 461:Generated_Source\PSoC4/ADCInput.c ****         if(status != 0u)
 489              		.loc 1 461 0 is_stmt 1
 490 0014 0028     		cmp	r0, #0
 491 0016 04D0     		beq	.L32
 462:Generated_Source\PSoC4/ADCInput.c ****         {
 463:Generated_Source\PSoC4/ADCInput.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADCInput.c ****             ADCInput_SAR_INTR_REG = ADCInput_EOS_MASK;
 492              		.loc 1 464 0
 493 0018 0122     		movs	r2, #1
 494              	.LVL31:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 18


 495 001a 024B     		ldr	r3, .L36
 496 001c 1A60     		str	r2, [r3]
 497 001e 00E0     		b	.L32
 498              	.LVL32:
 499              	.L35:
 452:Generated_Source\PSoC4/ADCInput.c **** 
 500              		.loc 1 452 0
 501 0020 0020     		movs	r0, #0
 502              	.LVL33:
 503              	.L32:
 465:Generated_Source\PSoC4/ADCInput.c ****         }
 466:Generated_Source\PSoC4/ADCInput.c ****     }
 467:Generated_Source\PSoC4/ADCInput.c **** 
 468:Generated_Source\PSoC4/ADCInput.c ****     #if(ADCInput_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADCInput.c ****         if((retMode & (ADCInput_RETURN_STATUS_INJ | ADCInput_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADCInput.c ****         {
 471:Generated_Source\PSoC4/ADCInput.c ****             do
 472:Generated_Source\PSoC4/ADCInput.c ****             {
 473:Generated_Source\PSoC4/ADCInput.c ****                 status |= ADCInput_SAR_INTR_REG & ADCInput_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADCInput.c ****             }while(((status & ADCInput_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADCInput.c ****                    ((retMode & ADCInput_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADCInput.c **** 
 477:Generated_Source\PSoC4/ADCInput.c ****             if((status & ADCInput_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADCInput.c ****             {
 479:Generated_Source\PSoC4/ADCInput.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_SAR_INTR_REG = ADCInput_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADCInput.c ****             }
 482:Generated_Source\PSoC4/ADCInput.c ****         }
 483:Generated_Source\PSoC4/ADCInput.c ****     #endif /* ADCInput_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADCInput.c **** 
 485:Generated_Source\PSoC4/ADCInput.c ****     return (status);
 486:Generated_Source\PSoC4/ADCInput.c **** }
 504              		.loc 1 486 0
 505              		@ sp needed
 506 0022 7047     		bx	lr
 507              	.L37:
 508              		.align	2
 509              	.L36:
 510 0024 10021A40 		.word	1075446288
 511              		.cfi_endproc
 512              	.LFE6:
 513              		.size	ADCInput_IsEndConversion, .-ADCInput_IsEndConversion
 514              		.section	.text.ADCInput_GetResult16,"ax",%progbits
 515              		.align	2
 516              		.global	ADCInput_GetResult16
 517              		.code	16
 518              		.thumb_func
 519              		.type	ADCInput_GetResult16, %function
 520              	ADCInput_GetResult16:
 521              	.LFB7:
 487:Generated_Source\PSoC4/ADCInput.c **** 
 488:Generated_Source\PSoC4/ADCInput.c **** 
 489:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_GetResult16
 491:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADCInput.c **** *
 493:Generated_Source\PSoC4/ADCInput.c **** * Summary:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 19


 494:Generated_Source\PSoC4/ADCInput.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADCInput.c **** *
 496:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 497:Generated_Source\PSoC4/ADCInput.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADCInput.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADCInput.c **** *
 500:Generated_Source\PSoC4/ADCInput.c **** * Return:
 501:Generated_Source\PSoC4/ADCInput.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADCInput.c **** *
 503:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADCInput.c **** int16 ADCInput_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADCInput.c **** {
 522              		.loc 1 505 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL34:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 531 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADCInput.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADCInput.c **** 
 508:Generated_Source\PSoC4/ADCInput.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADCInput.c ****     CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 532              		.loc 1 509 0
 533 0004 0128     		cmp	r0, #1
 534 0006 02D9     		bls	.L39
 535              		.loc 1 509 0 is_stmt 0 discriminator 1
 536 0008 0020     		movs	r0, #0
 537              	.LVL35:
 538 000a FFF7FEFF 		bl	CyHalt
 539              	.LVL36:
 540              	.L39:
 510:Generated_Source\PSoC4/ADCInput.c **** 
 511:Generated_Source\PSoC4/ADCInput.c ****     if(chan < ADCInput_SEQUENCED_CHANNELS_NUM)
 541              		.loc 1 511 0 is_stmt 1
 542 000e 012C     		cmp	r4, #1
 543 0010 07D8     		bhi	.L41
 512:Generated_Source\PSoC4/ADCInput.c ****     {
 513:Generated_Source\PSoC4/ADCInput.c ****         result = CY_GET_REG32((reg32 *)(ADCInput_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 544              		.loc 1 513 0
 545 0012 A400     		lsls	r4, r4, #2
 546              	.LVL37:
 547 0014 044B     		ldr	r3, .L42
 548 0016 9C46     		mov	ip, r3
 549 0018 6444     		add	r4, r4, ip
 550 001a 2068     		ldr	r0, [r4]
 551 001c 0004     		lsls	r0, r0, #16
 552 001e 000C     		lsrs	r0, r0, #16
 553              	.LVL38:
 554 0020 00E0     		b	.L40
 555              	.LVL39:
 556              	.L41:
 514:Generated_Source\PSoC4/ADCInput.c ****                 ADCInput_RESULT_MASK;
 515:Generated_Source\PSoC4/ADCInput.c ****     }
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 20


 516:Generated_Source\PSoC4/ADCInput.c ****     else
 517:Generated_Source\PSoC4/ADCInput.c ****     {
 518:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADCInput.c ****             result = ADCInput_SAR_INJ_RESULT_REG & ADCInput_RESULT_MASK;
 520:Generated_Source\PSoC4/ADCInput.c ****         #else
 521:Generated_Source\PSoC4/ADCInput.c ****             result = 0u;
 557              		.loc 1 521 0
 558 0022 0020     		movs	r0, #0
 559              	.LVL40:
 560              	.L40:
 522:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADCInput.c ****     }
 524:Generated_Source\PSoC4/ADCInput.c **** 
 525:Generated_Source\PSoC4/ADCInput.c ****     return ( (int16)result );
 561              		.loc 1 525 0
 562 0024 00B2     		sxth	r0, r0
 563              	.LVL41:
 526:Generated_Source\PSoC4/ADCInput.c **** }
 564              		.loc 1 526 0
 565              		@ sp needed
 566 0026 10BD     		pop	{r4, pc}
 567              	.L43:
 568              		.align	2
 569              	.L42:
 570 0028 80011A40 		.word	1075446144
 571              		.cfi_endproc
 572              	.LFE7:
 573              		.size	ADCInput_GetResult16, .-ADCInput_GetResult16
 574              		.section	.text.ADCInput_SetChanMask,"ax",%progbits
 575              		.align	2
 576              		.global	ADCInput_SetChanMask
 577              		.code	16
 578              		.thumb_func
 579              		.type	ADCInput_SetChanMask, %function
 580              	ADCInput_SetChanMask:
 581              	.LFB8:
 527:Generated_Source\PSoC4/ADCInput.c **** 
 528:Generated_Source\PSoC4/ADCInput.c **** 
 529:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetChanMask
 531:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADCInput.c **** *
 533:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 534:Generated_Source\PSoC4/ADCInput.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADCInput.c **** *
 536:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 537:Generated_Source\PSoC4/ADCInput.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADCInput.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADCInput.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADCInput.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADCInput.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADCInput.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADCInput.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADCInput.c **** *
 545:Generated_Source\PSoC4/ADCInput.c **** * Return:
 546:Generated_Source\PSoC4/ADCInput.c **** *  None.
 547:Generated_Source\PSoC4/ADCInput.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 21


 548:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADCInput.c **** {
 582              		.loc 1 550 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL42:
 551:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_CHAN_EN_REG = mask & ADCInput_MAX_CHANNELS_EN_MASK;
 588              		.loc 1 551 0
 589 0000 0323     		movs	r3, #3
 590 0002 1840     		ands	r0, r3
 591              	.LVL43:
 592 0004 014B     		ldr	r3, .L45
 593 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADCInput.c **** }
 594              		.loc 1 552 0
 595              		@ sp needed
 596 0008 7047     		bx	lr
 597              	.L46:
 598 000a C046     		.align	2
 599              	.L45:
 600 000c 20001A40 		.word	1075445792
 601              		.cfi_endproc
 602              	.LFE8:
 603              		.size	ADCInput_SetChanMask, .-ADCInput_SetChanMask
 604              		.section	.text.ADCInput_SetLowLimit,"ax",%progbits
 605              		.align	2
 606              		.global	ADCInput_SetLowLimit
 607              		.code	16
 608              		.thumb_func
 609              		.type	ADCInput_SetLowLimit, %function
 610              	ADCInput_SetLowLimit:
 611              	.LFB9:
 553:Generated_Source\PSoC4/ADCInput.c **** 
 554:Generated_Source\PSoC4/ADCInput.c **** #if(ADCInput_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADCInput.c **** 
 556:Generated_Source\PSoC4/ADCInput.c **** 
 557:Generated_Source\PSoC4/ADCInput.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADCInput.c ****     * Function Name: ADCInput_EnableInjection
 559:Generated_Source\PSoC4/ADCInput.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADCInput.c ****     *
 561:Generated_Source\PSoC4/ADCInput.c ****     * Summary:
 562:Generated_Source\PSoC4/ADCInput.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADCInput.c ****     *
 564:Generated_Source\PSoC4/ADCInput.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADCInput.c ****     *  None.
 566:Generated_Source\PSoC4/ADCInput.c ****     *
 567:Generated_Source\PSoC4/ADCInput.c ****     * Return:
 568:Generated_Source\PSoC4/ADCInput.c ****     *  None.
 569:Generated_Source\PSoC4/ADCInput.c ****     *
 570:Generated_Source\PSoC4/ADCInput.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADCInput.c ****     void ADCInput_EnableInjection(void)
 572:Generated_Source\PSoC4/ADCInput.c ****     {
 573:Generated_Source\PSoC4/ADCInput.c ****         ADCInput_SAR_INJ_CHAN_CONFIG_REG |= ADCInput_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADCInput.c ****     }
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 22


 575:Generated_Source\PSoC4/ADCInput.c **** 
 576:Generated_Source\PSoC4/ADCInput.c **** #endif /* ADCInput_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADCInput.c **** 
 578:Generated_Source\PSoC4/ADCInput.c **** 
 579:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetLowLimit
 581:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADCInput.c **** *
 583:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 584:Generated_Source\PSoC4/ADCInput.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADCInput.c **** *
 586:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 587:Generated_Source\PSoC4/ADCInput.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADCInput.c **** *
 589:Generated_Source\PSoC4/ADCInput.c **** * Return:
 590:Generated_Source\PSoC4/ADCInput.c **** *  None.
 591:Generated_Source\PSoC4/ADCInput.c **** *
 592:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADCInput.c **** {
 612              		.loc 1 594 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL44:
 595:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_THRES_REG &= (uint32)(~ADCInput_RANGE_LOW_MASK);
 618              		.loc 1 595 0
 619 0000 054A     		ldr	r2, .L48
 620 0002 1368     		ldr	r3, [r2]
 621 0004 1B0C     		lsrs	r3, r3, #16
 622 0006 1B04     		lsls	r3, r3, #16
 623 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_THRES_REG |= lowLimit & ADCInput_RANGE_LOW_MASK;
 624              		.loc 1 596 0
 625 000a 1368     		ldr	r3, [r2]
 626 000c 0004     		lsls	r0, r0, #16
 627              	.LVL45:
 628 000e 000C     		lsrs	r0, r0, #16
 629 0010 1843     		orrs	r0, r3
 630 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADCInput.c **** }
 631              		.loc 1 597 0
 632              		@ sp needed
 633 0014 7047     		bx	lr
 634              	.L49:
 635 0016 C046     		.align	2
 636              	.L48:
 637 0018 18001A40 		.word	1075445784
 638              		.cfi_endproc
 639              	.LFE9:
 640              		.size	ADCInput_SetLowLimit, .-ADCInput_SetLowLimit
 641              		.section	.text.ADCInput_SetHighLimit,"ax",%progbits
 642              		.align	2
 643              		.global	ADCInput_SetHighLimit
 644              		.code	16
 645              		.thumb_func
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 23


 646              		.type	ADCInput_SetHighLimit, %function
 647              	ADCInput_SetHighLimit:
 648              	.LFB10:
 598:Generated_Source\PSoC4/ADCInput.c **** 
 599:Generated_Source\PSoC4/ADCInput.c **** 
 600:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetHighLimit
 602:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADCInput.c **** *
 604:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 605:Generated_Source\PSoC4/ADCInput.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADCInput.c **** *
 607:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 608:Generated_Source\PSoC4/ADCInput.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADCInput.c **** *
 610:Generated_Source\PSoC4/ADCInput.c **** * Return:
 611:Generated_Source\PSoC4/ADCInput.c **** *  None.
 612:Generated_Source\PSoC4/ADCInput.c **** *
 613:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADCInput.c **** {
 649              		.loc 1 615 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654              	.LVL46:
 616:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_THRES_REG &= (uint32)(~ADCInput_RANGE_HIGH_MASK);
 655              		.loc 1 616 0
 656 0000 044A     		ldr	r2, .L51
 657 0002 1368     		ldr	r3, [r2]
 658 0004 1B04     		lsls	r3, r3, #16
 659 0006 1B0C     		lsrs	r3, r3, #16
 660 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADCInput_RANGE_HIGH_OFFSET);
 661              		.loc 1 617 0
 662 000a 1368     		ldr	r3, [r2]
 663 000c 0004     		lsls	r0, r0, #16
 664              	.LVL47:
 665 000e 1843     		orrs	r0, r3
 666 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADCInput.c **** }
 667              		.loc 1 618 0
 668              		@ sp needed
 669 0012 7047     		bx	lr
 670              	.L52:
 671              		.align	2
 672              	.L51:
 673 0014 18001A40 		.word	1075445784
 674              		.cfi_endproc
 675              	.LFE10:
 676              		.size	ADCInput_SetHighLimit, .-ADCInput_SetHighLimit
 677              		.section	.text.ADCInput_SetLimitMask,"ax",%progbits
 678              		.align	2
 679              		.global	ADCInput_SetLimitMask
 680              		.code	16
 681              		.thumb_func
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 24


 682              		.type	ADCInput_SetLimitMask, %function
 683              	ADCInput_SetLimitMask:
 684              	.LFB11:
 619:Generated_Source\PSoC4/ADCInput.c **** 
 620:Generated_Source\PSoC4/ADCInput.c **** 
 621:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetLimitMask
 623:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADCInput.c **** *
 625:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 626:Generated_Source\PSoC4/ADCInput.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADCInput.c **** *
 628:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 629:Generated_Source\PSoC4/ADCInput.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADCInput.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADCInput.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADCInput.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADCInput.c **** *
 634:Generated_Source\PSoC4/ADCInput.c **** * Return:
 635:Generated_Source\PSoC4/ADCInput.c **** *  None.
 636:Generated_Source\PSoC4/ADCInput.c **** *
 637:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADCInput.c **** {
 685              		.loc 1 639 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL48:
 640:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_RANGE_INTR_MASK_REG = mask & ADCInput_MAX_CHANNELS_EN_MASK;
 691              		.loc 1 640 0
 692 0000 0323     		movs	r3, #3
 693 0002 1840     		ands	r0, r3
 694              	.LVL49:
 695 0004 014B     		ldr	r3, .L54
 696 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADCInput.c **** }
 697              		.loc 1 641 0
 698              		@ sp needed
 699 0008 7047     		bx	lr
 700              	.L55:
 701 000a C046     		.align	2
 702              	.L54:
 703 000c 38021A40 		.word	1075446328
 704              		.cfi_endproc
 705              	.LFE11:
 706              		.size	ADCInput_SetLimitMask, .-ADCInput_SetLimitMask
 707              		.section	.text.ADCInput_SetSatMask,"ax",%progbits
 708              		.align	2
 709              		.global	ADCInput_SetSatMask
 710              		.code	16
 711              		.thumb_func
 712              		.type	ADCInput_SetSatMask, %function
 713              	ADCInput_SetSatMask:
 714              	.LFB12:
 642:Generated_Source\PSoC4/ADCInput.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 25


 643:Generated_Source\PSoC4/ADCInput.c **** 
 644:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetSatMask
 646:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADCInput.c **** *
 648:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 649:Generated_Source\PSoC4/ADCInput.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADCInput.c **** *
 651:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 652:Generated_Source\PSoC4/ADCInput.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADCInput.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADCInput.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADCInput.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADCInput.c **** *
 657:Generated_Source\PSoC4/ADCInput.c **** * Return:
 658:Generated_Source\PSoC4/ADCInput.c **** *  None.
 659:Generated_Source\PSoC4/ADCInput.c **** *
 660:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADCInput.c **** {
 715              		.loc 1 662 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL50:
 663:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_SAR_SATURATE_INTR_MASK_REG = mask & ADCInput_MAX_CHANNELS_EN_MASK;
 721              		.loc 1 663 0
 722 0000 0323     		movs	r3, #3
 723 0002 1840     		ands	r0, r3
 724              	.LVL51:
 725 0004 014B     		ldr	r3, .L57
 726 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADCInput.c **** }
 727              		.loc 1 664 0
 728              		@ sp needed
 729 0008 7047     		bx	lr
 730              	.L58:
 731 000a C046     		.align	2
 732              	.L57:
 733 000c 28021A40 		.word	1075446312
 734              		.cfi_endproc
 735              	.LFE12:
 736              		.size	ADCInput_SetSatMask, .-ADCInput_SetSatMask
 737              		.section	.text.ADCInput_SetOffset,"ax",%progbits
 738              		.align	2
 739              		.global	ADCInput_SetOffset
 740              		.code	16
 741              		.thumb_func
 742              		.type	ADCInput_SetOffset, %function
 743              	ADCInput_SetOffset:
 744              	.LFB13:
 665:Generated_Source\PSoC4/ADCInput.c **** 
 666:Generated_Source\PSoC4/ADCInput.c **** 
 667:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetOffset
 669:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 26


 670:Generated_Source\PSoC4/ADCInput.c **** *
 671:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 672:Generated_Source\PSoC4/ADCInput.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADCInput.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADCInput.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADCInput.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADCInput.c **** *
 677:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 678:Generated_Source\PSoC4/ADCInput.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADCInput.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADCInput.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADCInput.c **** *
 682:Generated_Source\PSoC4/ADCInput.c **** * Return:
 683:Generated_Source\PSoC4/ADCInput.c **** *  None.
 684:Generated_Source\PSoC4/ADCInput.c **** *
 685:Generated_Source\PSoC4/ADCInput.c **** * Global variables:
 686:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADCInput.c **** *
 688:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADCInput.c **** {
 745              		.loc 1 690 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              	.LVL52:
 750 0000 70B5     		push	{r4, r5, r6, lr}
 751              		.cfi_def_cfa_offset 16
 752              		.cfi_offset 4, -16
 753              		.cfi_offset 5, -12
 754              		.cfi_offset 6, -8
 755              		.cfi_offset 14, -4
 756 0002 0400     		movs	r4, r0
 757 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADCInput.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADCInput.c ****     CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 758              		.loc 1 692 0
 759 0006 0128     		cmp	r0, #1
 760 0008 02D9     		bls	.L60
 761              		.loc 1 692 0 is_stmt 0 discriminator 1
 762 000a 0020     		movs	r0, #0
 763              	.LVL53:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL54:
 766              	.L60:
 693:Generated_Source\PSoC4/ADCInput.c **** 
 694:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_offset[chan] = offset;
 767              		.loc 1 694 0 is_stmt 1
 768 0010 6400     		lsls	r4, r4, #1
 769              	.LVL55:
 770 0012 014B     		ldr	r3, .L61
 771 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADCInput.c **** }
 772              		.loc 1 695 0
 773              		@ sp needed
 774 0016 70BD     		pop	{r4, r5, r6, pc}
 775              	.L62:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 27


 776              		.align	2
 777              	.L61:
 778 0018 00000000 		.word	ADCInput_offset
 779              		.cfi_endproc
 780              	.LFE13:
 781              		.size	ADCInput_SetOffset, .-ADCInput_SetOffset
 782              		.section	.text.ADCInput_SetGain,"ax",%progbits
 783              		.align	2
 784              		.global	ADCInput_SetGain
 785              		.code	16
 786              		.thumb_func
 787              		.type	ADCInput_SetGain, %function
 788              	ADCInput_SetGain:
 789              	.LFB14:
 696:Generated_Source\PSoC4/ADCInput.c **** 
 697:Generated_Source\PSoC4/ADCInput.c **** 
 698:Generated_Source\PSoC4/ADCInput.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADCInput.c **** * Function Name: ADCInput_SetGain
 700:Generated_Source\PSoC4/ADCInput.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADCInput.c **** *
 702:Generated_Source\PSoC4/ADCInput.c **** * Summary:
 703:Generated_Source\PSoC4/ADCInput.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADCInput.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADCInput.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADCInput.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADCInput.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADCInput.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADCInput.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADCInput.c **** *
 711:Generated_Source\PSoC4/ADCInput.c **** * Parameters:
 712:Generated_Source\PSoC4/ADCInput.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADCInput.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADCInput.c **** *
 715:Generated_Source\PSoC4/ADCInput.c **** * Return:
 716:Generated_Source\PSoC4/ADCInput.c **** *  None.
 717:Generated_Source\PSoC4/ADCInput.c **** *
 718:Generated_Source\PSoC4/ADCInput.c **** * Global variables:
 719:Generated_Source\PSoC4/ADCInput.c **** *  ADCInput_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADCInput.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADCInput.c **** *
 722:Generated_Source\PSoC4/ADCInput.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADCInput.c **** void ADCInput_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADCInput.c **** {
 790              		.loc 1 724 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL56:
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0002 0400     		movs	r4, r0
 802 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADCInput.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 28


 726:Generated_Source\PSoC4/ADCInput.c ****     CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 803              		.loc 1 726 0
 804 0006 0128     		cmp	r0, #1
 805 0008 02D9     		bls	.L64
 806              		.loc 1 726 0 is_stmt 0 discriminator 1
 807 000a 0020     		movs	r0, #0
 808              	.LVL57:
 809 000c FFF7FEFF 		bl	CyHalt
 810              	.LVL58:
 811              	.L64:
 727:Generated_Source\PSoC4/ADCInput.c **** 
 728:Generated_Source\PSoC4/ADCInput.c ****     ADCInput_countsPer10Volt[chan] = adcGain;
 812              		.loc 1 728 0 is_stmt 1
 813 0010 A400     		lsls	r4, r4, #2
 814              	.LVL59:
 815 0012 014B     		ldr	r3, .L65
 816 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADCInput.c **** }
 817              		.loc 1 729 0
 818              		@ sp needed
 819              	.LVL60:
 820 0016 70BD     		pop	{r4, r5, r6, pc}
 821              	.L66:
 822              		.align	2
 823              	.L65:
 824 0018 00000000 		.word	ADCInput_countsPer10Volt
 825              		.cfi_endproc
 826              	.LFE14:
 827              		.size	ADCInput_SetGain, .-ADCInput_SetGain
 828              		.section	.text.ADCInput_CountsTo_mVolts,"ax",%progbits
 829              		.align	2
 830              		.global	ADCInput_CountsTo_mVolts
 831              		.code	16
 832              		.thumb_func
 833              		.type	ADCInput_CountsTo_mVolts, %function
 834              	ADCInput_CountsTo_mVolts:
 835              	.LFB15:
 730:Generated_Source\PSoC4/ADCInput.c **** 
 731:Generated_Source\PSoC4/ADCInput.c **** 
 732:Generated_Source\PSoC4/ADCInput.c **** #if(ADCInput_DEFAULT_JUSTIFICATION_SEL == ADCInput__RIGHT)
 733:Generated_Source\PSoC4/ADCInput.c **** 
 734:Generated_Source\PSoC4/ADCInput.c **** 
 735:Generated_Source\PSoC4/ADCInput.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADCInput.c ****     * Function Name: ADCInput_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADCInput.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADCInput.c ****     *
 739:Generated_Source\PSoC4/ADCInput.c ****     * Summary:
 740:Generated_Source\PSoC4/ADCInput.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADCInput.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADCInput.c ****     *
 743:Generated_Source\PSoC4/ADCInput.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADCInput.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADCInput.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADCInput.c ****     *
 747:Generated_Source\PSoC4/ADCInput.c ****     * Return:
 748:Generated_Source\PSoC4/ADCInput.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADCInput.c ****     *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 29


 750:Generated_Source\PSoC4/ADCInput.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADCInput.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADCInput.c ****     *
 755:Generated_Source\PSoC4/ADCInput.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADCInput.c ****     int16 ADCInput_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADCInput.c ****     {
 836              		.loc 1 757 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL61:
 841 0000 70B5     		push	{r4, r5, r6, lr}
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 4, -16
 844              		.cfi_offset 5, -12
 845              		.cfi_offset 6, -8
 846              		.cfi_offset 14, -4
 847 0002 0400     		movs	r4, r0
 848 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADCInput.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADCInput.c **** 
 760:Generated_Source\PSoC4/ADCInput.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADCInput.c ****         CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 849              		.loc 1 761 0
 850 0006 0128     		cmp	r0, #1
 851 0008 02D9     		bls	.L68
 852              		.loc 1 761 0 is_stmt 0 discriminator 1
 853 000a 0020     		movs	r0, #0
 854              	.LVL62:
 855 000c FFF7FEFF 		bl	CyHalt
 856              	.LVL63:
 857              	.L68:
 762:Generated_Source\PSoC4/ADCInput.c **** 
 763:Generated_Source\PSoC4/ADCInput.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE)
 765:Generated_Source\PSoC4/ADCInput.c ****             if((ADCInput_channelsConfig[chan] & ADCInput_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADCInput.c ****             {
 767:Generated_Source\PSoC4/ADCInput.c ****                 adcCounts /= ADCInput_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADCInput.c ****             }
 769:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE */
 770:Generated_Source\PSoC4/ADCInput.c **** 
 771:Generated_Source\PSoC4/ADCInput.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADCInput.c ****         adcCounts -= ADCInput_offset[chan];
 858              		.loc 1 772 0 is_stmt 1
 859 0010 6300     		lsls	r3, r4, #1
 860 0012 0F4A     		ldr	r2, .L71
 861 0014 995A     		ldrh	r1, [r3, r2]
 862 0016 09B2     		sxth	r1, r1
 863 0018 691A     		subs	r1, r5, r1
 864 001a 09B2     		sxth	r1, r1
 865              	.LVL64:
 773:Generated_Source\PSoC4/ADCInput.c **** 
 774:Generated_Source\PSoC4/ADCInput.c ****         mVolts = (int16)((((int32)adcCounts * ADCInput_10MV_COUNTS) + ( (adcCounts > 0) ?
 866              		.loc 1 774 0
 867 001c 0D48     		ldr	r0, .L71+4
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 30


 868 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADCInput.c ****                  (ADCInput_countsPer10Volt[chan] / 2) : (-(ADCInput_countsPer10Volt[chan] / 2)) ))
 869              		.loc 1 775 0
 870 0020 0029     		cmp	r1, #0
 871 0022 06DD     		ble	.L69
 872              		.loc 1 775 0 is_stmt 0 discriminator 1
 873 0024 A300     		lsls	r3, r4, #2
 874 0026 0C4A     		ldr	r2, .L71+8
 875 0028 9A58     		ldr	r2, [r3, r2]
 876 002a D30F     		lsrs	r3, r2, #31
 877 002c 9A18     		adds	r2, r3, r2
 878 002e 5310     		asrs	r3, r2, #1
 879 0030 06E0     		b	.L70
 880              	.L69:
 881              		.loc 1 775 0 discriminator 2
 882 0032 A300     		lsls	r3, r4, #2
 883 0034 084A     		ldr	r2, .L71+8
 884 0036 9A58     		ldr	r2, [r3, r2]
 885 0038 D30F     		lsrs	r3, r2, #31
 886 003a 9A18     		adds	r2, r3, r2
 887 003c 5210     		asrs	r2, r2, #1
 888 003e 5342     		rsbs	r3, r2, #0
 889              	.L70:
 774:Generated_Source\PSoC4/ADCInput.c ****                  (ADCInput_countsPer10Volt[chan] / 2) : (-(ADCInput_countsPer10Volt[chan] / 2)) ))
 890              		.loc 1 774 0 is_stmt 1
 891 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADCInput.c ****                  / ADCInput_countsPer10Volt[chan]);
 892              		.loc 1 776 0
 893 0042 A400     		lsls	r4, r4, #2
 894              	.LVL65:
 895 0044 044B     		ldr	r3, .L71+8
 896 0046 E158     		ldr	r1, [r4, r3]
 897              	.LVL66:
 898 0048 FFF7FEFF 		bl	__aeabi_idiv
 899              	.LVL67:
 774:Generated_Source\PSoC4/ADCInput.c ****                  (ADCInput_countsPer10Volt[chan] / 2) : (-(ADCInput_countsPer10Volt[chan] / 2)) ))
 900              		.loc 1 774 0
 901 004c 00B2     		sxth	r0, r0
 902              	.LVL68:
 777:Generated_Source\PSoC4/ADCInput.c **** 
 778:Generated_Source\PSoC4/ADCInput.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADCInput.c ****     }
 903              		.loc 1 779 0
 904              		@ sp needed
 905 004e 70BD     		pop	{r4, r5, r6, pc}
 906              	.L72:
 907              		.align	2
 908              	.L71:
 909 0050 00000000 		.word	ADCInput_offset
 910 0054 10270000 		.word	10000
 911 0058 00000000 		.word	ADCInput_countsPer10Volt
 912              		.cfi_endproc
 913              	.LFE15:
 914              		.size	ADCInput_CountsTo_mVolts, .-ADCInput_CountsTo_mVolts
 915              		.global	__aeabi_lmul
 916              		.global	__aeabi_ldivmod
 917              		.section	.text.ADCInput_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 31


 918              		.align	2
 919              		.global	ADCInput_CountsTo_uVolts
 920              		.code	16
 921              		.thumb_func
 922              		.type	ADCInput_CountsTo_uVolts, %function
 923              	ADCInput_CountsTo_uVolts:
 924              	.LFB16:
 780:Generated_Source\PSoC4/ADCInput.c **** 
 781:Generated_Source\PSoC4/ADCInput.c **** 
 782:Generated_Source\PSoC4/ADCInput.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADCInput.c ****     * Function Name: ADCInput_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADCInput.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADCInput.c ****     *
 786:Generated_Source\PSoC4/ADCInput.c ****     * Summary:
 787:Generated_Source\PSoC4/ADCInput.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADCInput.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADCInput.c ****     *
 790:Generated_Source\PSoC4/ADCInput.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADCInput.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADCInput.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADCInput.c ****     *
 794:Generated_Source\PSoC4/ADCInput.c ****     * Return:
 795:Generated_Source\PSoC4/ADCInput.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADCInput.c ****     *
 797:Generated_Source\PSoC4/ADCInput.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADCInput.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADCInput.c ****     *
 802:Generated_Source\PSoC4/ADCInput.c ****     * Theory:
 803:Generated_Source\PSoC4/ADCInput.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADCInput.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADCInput.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADCInput.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADCInput.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADCInput.c ****     *
 809:Generated_Source\PSoC4/ADCInput.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADCInput.c ****     int32 ADCInput_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADCInput.c ****     {
 925              		.loc 1 811 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL69:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 936 0002 0500     		movs	r5, r0
 937 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADCInput.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADCInput.c **** 
 814:Generated_Source\PSoC4/ADCInput.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADCInput.c ****         CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 938              		.loc 1 815 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 32


 939 0006 0128     		cmp	r0, #1
 940 0008 02D9     		bls	.L74
 941              		.loc 1 815 0 is_stmt 0 discriminator 1
 942 000a 0020     		movs	r0, #0
 943              	.LVL70:
 944 000c FFF7FEFF 		bl	CyHalt
 945              	.LVL71:
 946              	.L74:
 816:Generated_Source\PSoC4/ADCInput.c **** 
 817:Generated_Source\PSoC4/ADCInput.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE)
 819:Generated_Source\PSoC4/ADCInput.c ****             if((ADCInput_channelsConfig[chan] & ADCInput_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADCInput.c ****             {
 821:Generated_Source\PSoC4/ADCInput.c ****                 adcCounts /= ADCInput_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADCInput.c ****             }
 823:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE */
 824:Generated_Source\PSoC4/ADCInput.c **** 
 825:Generated_Source\PSoC4/ADCInput.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADCInput.c ****         adcCounts -= ADCInput_offset[chan];
 947              		.loc 1 826 0 is_stmt 1
 948 0010 6A00     		lsls	r2, r5, #1
 949 0012 084B     		ldr	r3, .L75
 950 0014 D05A     		ldrh	r0, [r2, r3]
 951 0016 00B2     		sxth	r0, r0
 952 0018 201A     		subs	r0, r4, r0
 953 001a 00B2     		sxth	r0, r0
 954              	.LVL72:
 827:Generated_Source\PSoC4/ADCInput.c **** 
 828:Generated_Source\PSoC4/ADCInput.c ****         uVolts = ((int64)adcCounts * ADCInput_10UV_COUNTS) / ADCInput_countsPer10Volt[chan];
 955              		.loc 1 828 0
 956 001c C117     		asrs	r1, r0, #31
 957 001e 064A     		ldr	r2, .L75+4
 958 0020 0023     		movs	r3, #0
 959 0022 FFF7FEFF 		bl	__aeabi_lmul
 960              	.LVL73:
 961 0026 AD00     		lsls	r5, r5, #2
 962              	.LVL74:
 963 0028 044B     		ldr	r3, .L75+8
 964 002a EA58     		ldr	r2, [r5, r3]
 965 002c D317     		asrs	r3, r2, #31
 966 002e FFF7FEFF 		bl	__aeabi_ldivmod
 967              	.LVL75:
 829:Generated_Source\PSoC4/ADCInput.c **** 
 830:Generated_Source\PSoC4/ADCInput.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADCInput.c ****     }
 968              		.loc 1 831 0
 969              		@ sp needed
 970 0032 70BD     		pop	{r4, r5, r6, pc}
 971              	.L76:
 972              		.align	2
 973              	.L75:
 974 0034 00000000 		.word	ADCInput_offset
 975 0038 80969800 		.word	10000000
 976 003c 00000000 		.word	ADCInput_countsPer10Volt
 977              		.cfi_endproc
 978              	.LFE16:
 979              		.size	ADCInput_CountsTo_uVolts, .-ADCInput_CountsTo_uVolts
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 33


 980              		.global	__aeabi_i2f
 981              		.global	__aeabi_fmul
 982              		.global	__aeabi_fdiv
 983              		.section	.text.ADCInput_CountsTo_Volts,"ax",%progbits
 984              		.align	2
 985              		.global	ADCInput_CountsTo_Volts
 986              		.code	16
 987              		.thumb_func
 988              		.type	ADCInput_CountsTo_Volts, %function
 989              	ADCInput_CountsTo_Volts:
 990              	.LFB17:
 832:Generated_Source\PSoC4/ADCInput.c **** 
 833:Generated_Source\PSoC4/ADCInput.c **** 
 834:Generated_Source\PSoC4/ADCInput.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADCInput.c ****     * Function Name: ADCInput_CountsTo_Volts
 836:Generated_Source\PSoC4/ADCInput.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADCInput.c ****     *
 838:Generated_Source\PSoC4/ADCInput.c ****     * Summary:
 839:Generated_Source\PSoC4/ADCInput.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADCInput.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADCInput.c ****     *
 842:Generated_Source\PSoC4/ADCInput.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADCInput.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADCInput.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADCInput.c ****     *
 846:Generated_Source\PSoC4/ADCInput.c ****     * Return:
 847:Generated_Source\PSoC4/ADCInput.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADCInput.c ****     *
 849:Generated_Source\PSoC4/ADCInput.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADCInput.c ****     *  ADCInput_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADCInput.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADCInput.c ****     *
 854:Generated_Source\PSoC4/ADCInput.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADCInput.c ****     float32 ADCInput_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADCInput.c ****     {
 991              		.loc 1 856 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL76:
 996 0000 70B5     		push	{r4, r5, r6, lr}
 997              		.cfi_def_cfa_offset 16
 998              		.cfi_offset 4, -16
 999              		.cfi_offset 5, -12
 1000              		.cfi_offset 6, -8
 1001              		.cfi_offset 14, -4
 1002 0002 0400     		movs	r4, r0
 1003 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADCInput.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADCInput.c **** 
 859:Generated_Source\PSoC4/ADCInput.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADCInput.c ****         CYASSERT(chan < ADCInput_TOTAL_CHANNELS_NUM);
 1004              		.loc 1 860 0
 1005 0006 0128     		cmp	r0, #1
 1006 0008 02D9     		bls	.L78
 1007              		.loc 1 860 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 34


 1008 000a 0020     		movs	r0, #0
 1009              	.LVL77:
 1010 000c FFF7FEFF 		bl	CyHalt
 1011              	.LVL78:
 1012              	.L78:
 861:Generated_Source\PSoC4/ADCInput.c **** 
 862:Generated_Source\PSoC4/ADCInput.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADCInput.c ****         #if(ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE)
 864:Generated_Source\PSoC4/ADCInput.c ****             if((ADCInput_channelsConfig[chan] & ADCInput_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADCInput.c ****             {
 866:Generated_Source\PSoC4/ADCInput.c ****                 adcCounts /= ADCInput_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADCInput.c ****             }
 868:Generated_Source\PSoC4/ADCInput.c ****         #endif /* ADCInput_DEFAULT_AVG_MODE == ADCInput__ACCUMULATE */
 869:Generated_Source\PSoC4/ADCInput.c **** 
 870:Generated_Source\PSoC4/ADCInput.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADCInput.c ****         adcCounts -= ADCInput_offset[chan];
 1013              		.loc 1 871 0 is_stmt 1
 1014 0010 6200     		lsls	r2, r4, #1
 1015 0012 0A4B     		ldr	r3, .L79
 1016 0014 D05A     		ldrh	r0, [r2, r3]
 1017 0016 00B2     		sxth	r0, r0
 1018 0018 281A     		subs	r0, r5, r0
 1019 001a 00B2     		sxth	r0, r0
 1020              	.LVL79:
 872:Generated_Source\PSoC4/ADCInput.c **** 
 873:Generated_Source\PSoC4/ADCInput.c ****         volts = ((float32)adcCounts * ADCInput_10V_COUNTS) / (float32)ADCInput_countsPer10Volt[chan
 1021              		.loc 1 873 0
 1022 001c FFF7FEFF 		bl	__aeabi_i2f
 1023              	.LVL80:
 1024 0020 0749     		ldr	r1, .L79+4
 1025 0022 FFF7FEFF 		bl	__aeabi_fmul
 1026              	.LVL81:
 1027 0026 051C     		adds	r5, r0, #0
 1028 0028 A400     		lsls	r4, r4, #2
 1029              	.LVL82:
 1030 002a 064B     		ldr	r3, .L79+8
 1031 002c E058     		ldr	r0, [r4, r3]
 1032 002e FFF7FEFF 		bl	__aeabi_i2f
 1033              	.LVL83:
 1034 0032 011C     		adds	r1, r0, #0
 1035 0034 281C     		adds	r0, r5, #0
 1036 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1037              	.LVL84:
 874:Generated_Source\PSoC4/ADCInput.c **** 
 875:Generated_Source\PSoC4/ADCInput.c ****         return( volts );
 876:Generated_Source\PSoC4/ADCInput.c ****     }
 1038              		.loc 1 876 0
 1039              		@ sp needed
 1040 003a 70BD     		pop	{r4, r5, r6, pc}
 1041              	.L80:
 1042              		.align	2
 1043              	.L79:
 1044 003c 00000000 		.word	ADCInput_offset
 1045 0040 00002041 		.word	1092616192
 1046 0044 00000000 		.word	ADCInput_countsPer10Volt
 1047              		.cfi_endproc
 1048              	.LFE17:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 35


 1049              		.size	ADCInput_CountsTo_Volts, .-ADCInput_CountsTo_Volts
 1050              		.comm	ADCInput_countsPer10Volt,8,4
 1051              		.comm	ADCInput_offset,4,4
 1052              		.global	ADCInput_initVar
 1053              		.section	.rodata
 1054              		.align	2
 1055              		.set	.LANCHOR0,. + 0
 1056              		.type	ADCInput_channelsConfig, %object
 1057              		.size	ADCInput_channelsConfig, 8
 1058              	ADCInput_channelsConfig:
 1059 0000 00000000 		.space	8
 1059      00000000 
 1060              		.type	ADCInput_InputsPlacement.4874, %object
 1061              		.size	ADCInput_InputsPlacement.4874, 2
 1062              	ADCInput_InputsPlacement.4874:
 1063 0008 00       		.byte	0
 1064 0009 01       		.byte	1
 1065              		.bss
 1066              		.set	.LANCHOR1,. + 0
 1067              		.type	ADCInput_initVar, %object
 1068              		.size	ADCInput_initVar, 1
 1069              	ADCInput_initVar:
 1070 0000 00       		.space	1
 1071              		.text
 1072              	.Letext0:
 1073              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1074              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1075              		.section	.debug_info,"",%progbits
 1076              	.Ldebug_info0:
 1077 0000 A1050000 		.4byte	0x5a1
 1078 0004 0400     		.2byte	0x4
 1079 0006 00000000 		.4byte	.Ldebug_abbrev0
 1080 000a 04       		.byte	0x4
 1081 000b 01       		.uleb128 0x1
 1082 000c AF000000 		.4byte	.LASF64
 1083 0010 0C       		.byte	0xc
 1084 0011 E0010000 		.4byte	.LASF65
 1085 0015 3E000000 		.4byte	.LASF66
 1086 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1087 001d 00000000 		.4byte	0
 1088 0021 00000000 		.4byte	.Ldebug_line0
 1089 0025 02       		.uleb128 0x2
 1090 0026 01       		.byte	0x1
 1091 0027 06       		.byte	0x6
 1092 0028 8C010000 		.4byte	.LASF0
 1093 002c 02       		.uleb128 0x2
 1094 002d 01       		.byte	0x1
 1095 002e 08       		.byte	0x8
 1096 002f 79030000 		.4byte	.LASF1
 1097 0033 02       		.uleb128 0x2
 1098 0034 02       		.byte	0x2
 1099 0035 05       		.byte	0x5
 1100 0036 87030000 		.4byte	.LASF2
 1101 003a 02       		.uleb128 0x2
 1102 003b 02       		.byte	0x2
 1103 003c 07       		.byte	0x7
 1104 003d 77020000 		.4byte	.LASF3
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 36


 1105 0041 02       		.uleb128 0x2
 1106 0042 04       		.byte	0x4
 1107 0043 05       		.byte	0x5
 1108 0044 9E010000 		.4byte	.LASF4
 1109 0048 02       		.uleb128 0x2
 1110 0049 04       		.byte	0x4
 1111 004a 07       		.byte	0x7
 1112 004b 45020000 		.4byte	.LASF5
 1113 004f 02       		.uleb128 0x2
 1114 0050 08       		.byte	0x8
 1115 0051 05       		.byte	0x5
 1116 0052 7E010000 		.4byte	.LASF6
 1117 0056 02       		.uleb128 0x2
 1118 0057 08       		.byte	0x8
 1119 0058 07       		.byte	0x7
 1120 0059 3D010000 		.4byte	.LASF7
 1121 005d 03       		.uleb128 0x3
 1122 005e 04       		.byte	0x4
 1123 005f 05       		.byte	0x5
 1124 0060 696E7400 		.ascii	"int\000"
 1125 0064 02       		.uleb128 0x2
 1126 0065 04       		.byte	0x4
 1127 0066 07       		.byte	0x7
 1128 0067 31020000 		.4byte	.LASF8
 1129 006b 04       		.uleb128 0x4
 1130 006c A7010000 		.4byte	.LASF9
 1131 0070 02       		.byte	0x2
 1132 0071 E401     		.2byte	0x1e4
 1133 0073 2C000000 		.4byte	0x2c
 1134 0077 04       		.uleb128 0x4
 1135 0078 00000000 		.4byte	.LASF10
 1136 007c 02       		.byte	0x2
 1137 007d E501     		.2byte	0x1e5
 1138 007f 3A000000 		.4byte	0x3a
 1139 0083 04       		.uleb128 0x4
 1140 0084 D4010000 		.4byte	.LASF11
 1141 0088 02       		.byte	0x2
 1142 0089 E601     		.2byte	0x1e6
 1143 008b 48000000 		.4byte	0x48
 1144 008f 04       		.uleb128 0x4
 1145 0090 0E040000 		.4byte	.LASF12
 1146 0094 02       		.byte	0x2
 1147 0095 E801     		.2byte	0x1e8
 1148 0097 33000000 		.4byte	0x33
 1149 009b 04       		.uleb128 0x4
 1150 009c 98010000 		.4byte	.LASF13
 1151 00a0 02       		.byte	0x2
 1152 00a1 E901     		.2byte	0x1e9
 1153 00a3 41000000 		.4byte	0x41
 1154 00a7 04       		.uleb128 0x4
 1155 00a8 BB020000 		.4byte	.LASF14
 1156 00ac 02       		.byte	0x2
 1157 00ad EA01     		.2byte	0x1ea
 1158 00af B3000000 		.4byte	0xb3
 1159 00b3 02       		.uleb128 0x2
 1160 00b4 04       		.byte	0x4
 1161 00b5 04       		.byte	0x4
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 37


 1162 00b6 11030000 		.4byte	.LASF15
 1163 00ba 02       		.uleb128 0x2
 1164 00bb 08       		.byte	0x8
 1165 00bc 04       		.byte	0x4
 1166 00bd CD010000 		.4byte	.LASF16
 1167 00c1 04       		.uleb128 0x4
 1168 00c2 FA020000 		.4byte	.LASF17
 1169 00c6 02       		.byte	0x2
 1170 00c7 EF01     		.2byte	0x1ef
 1171 00c9 4F000000 		.4byte	0x4f
 1172 00cd 02       		.uleb128 0x2
 1173 00ce 01       		.byte	0x1
 1174 00cf 08       		.byte	0x8
 1175 00d0 B4030000 		.4byte	.LASF18
 1176 00d4 04       		.uleb128 0x4
 1177 00d5 B5020000 		.4byte	.LASF19
 1178 00d9 02       		.byte	0x2
 1179 00da 9002     		.2byte	0x290
 1180 00dc E0000000 		.4byte	0xe0
 1181 00e0 05       		.uleb128 0x5
 1182 00e1 83000000 		.4byte	0x83
 1183 00e5 02       		.uleb128 0x2
 1184 00e6 08       		.byte	0x8
 1185 00e7 04       		.byte	0x4
 1186 00e8 D5020000 		.4byte	.LASF20
 1187 00ec 02       		.uleb128 0x2
 1188 00ed 04       		.byte	0x4
 1189 00ee 07       		.byte	0x7
 1190 00ef C3020000 		.4byte	.LASF21
 1191 00f3 06       		.uleb128 0x6
 1192 00f4 23020000 		.4byte	.LASF26
 1193 00f8 01       		.byte	0x1
 1194 00f9 5E       		.byte	0x5e
 1195 00fa 00000000 		.4byte	.LFB1
 1196 00fe 88010000 		.4byte	.LFE1-.LFB1
 1197 0102 01       		.uleb128 0x1
 1198 0103 9C       		.byte	0x9c
 1199 0104 6E010000 		.4byte	0x16e
 1200 0108 07       		.uleb128 0x7
 1201 0109 A9030000 		.4byte	.LASF22
 1202 010d 01       		.byte	0x1
 1203 010e 60       		.byte	0x60
 1204 010f 83000000 		.4byte	0x83
 1205 0113 00000000 		.4byte	.LLST0
 1206 0117 07       		.uleb128 0x7
 1207 0118 5D020000 		.4byte	.LASF23
 1208 011c 01       		.byte	0x1
 1209 011d 61       		.byte	0x61
 1210 011e 83000000 		.4byte	0x83
 1211 0122 1F000000 		.4byte	.LLST1
 1212 0126 07       		.uleb128 0x7
 1213 0127 24000000 		.4byte	.LASF24
 1214 012b 01       		.byte	0x1
 1215 012c 62       		.byte	0x62
 1216 012d 9B000000 		.4byte	0x9b
 1217 0131 78010000 		.4byte	.LLST2
 1218 0135 08       		.uleb128 0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 38


 1219 0136 E1020000 		.4byte	.LASF25
 1220 013a 01       		.byte	0x1
 1221 013b 65       		.byte	0x65
 1222 013c 83010000 		.4byte	0x183
 1223 0140 05       		.uleb128 0x5
 1224 0141 03       		.byte	0x3
 1225 0142 08000000 		.4byte	ADCInput_InputsPlacement.4874
 1226 0146 09       		.uleb128 0x9
 1227 0147 0A000000 		.4byte	.LVL0
 1228 014b 78050000 		.4byte	0x578
 1229 014f 5E010000 		.4byte	0x15e
 1230 0153 0A       		.uleb128 0xa
 1231 0154 01       		.uleb128 0x1
 1232 0155 50       		.byte	0x50
 1233 0156 01       		.uleb128 0x1
 1234 0157 3E       		.byte	0x3e
 1235 0158 0A       		.uleb128 0xa
 1236 0159 01       		.uleb128 0x1
 1237 015a 51       		.byte	0x51
 1238 015b 01       		.uleb128 0x1
 1239 015c 33       		.byte	0x33
 1240 015d 00       		.byte	0
 1241 015e 0B       		.uleb128 0xb
 1242 015f 12000000 		.4byte	.LVL1
 1243 0163 83050000 		.4byte	0x583
 1244 0167 0A       		.uleb128 0xa
 1245 0168 01       		.uleb128 0x1
 1246 0169 50       		.byte	0x50
 1247 016a 01       		.uleb128 0x1
 1248 016b 3E       		.byte	0x3e
 1249 016c 00       		.byte	0
 1250 016d 00       		.byte	0
 1251 016e 0C       		.uleb128 0xc
 1252 016f 7E010000 		.4byte	0x17e
 1253 0173 7E010000 		.4byte	0x17e
 1254 0177 0D       		.uleb128 0xd
 1255 0178 EC000000 		.4byte	0xec
 1256 017c 01       		.byte	0x1
 1257 017d 00       		.byte	0
 1258 017e 0E       		.uleb128 0xe
 1259 017f 6B000000 		.4byte	0x6b
 1260 0183 0E       		.uleb128 0xe
 1261 0184 6E010000 		.4byte	0x16e
 1262 0188 0F       		.uleb128 0xf
 1263 0189 8A000000 		.4byte	.LASF27
 1264 018d 01       		.byte	0x1
 1265 018e 4A01     		.2byte	0x14a
 1266 0190 00000000 		.4byte	.LFB2
 1267 0194 24000000 		.4byte	.LFE2-.LFB2
 1268 0198 01       		.uleb128 0x1
 1269 0199 9C       		.byte	0x9c
 1270 019a AE010000 		.4byte	0x1ae
 1271 019e 0B       		.uleb128 0xb
 1272 019f 1C000000 		.4byte	.LVL24
 1273 01a3 8E050000 		.4byte	0x58e
 1274 01a7 0A       		.uleb128 0xa
 1275 01a8 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 39


 1276 01a9 50       		.byte	0x50
 1277 01aa 01       		.uleb128 0x1
 1278 01ab 3A       		.byte	0x3a
 1279 01ac 00       		.byte	0
 1280 01ad 00       		.byte	0
 1281 01ae 10       		.uleb128 0x10
 1282 01af B9030000 		.4byte	.LASF28
 1283 01b3 01       		.byte	0x1
 1284 01b4 3F       		.byte	0x3f
 1285 01b5 00000000 		.4byte	.LFB0
 1286 01b9 20000000 		.4byte	.LFE0-.LFB0
 1287 01bd 01       		.uleb128 0x1
 1288 01be 9C       		.byte	0x9c
 1289 01bf D6010000 		.4byte	0x1d6
 1290 01c3 11       		.uleb128 0x11
 1291 01c4 0E000000 		.4byte	.LVL25
 1292 01c8 F3000000 		.4byte	0xf3
 1293 01cc 11       		.uleb128 0x11
 1294 01cd 18000000 		.4byte	.LVL26
 1295 01d1 88010000 		.4byte	0x188
 1296 01d5 00       		.byte	0
 1297 01d6 12       		.uleb128 0x12
 1298 01d7 14040000 		.4byte	.LASF29
 1299 01db 01       		.byte	0x1
 1300 01dc 6D01     		.2byte	0x16d
 1301 01de 00000000 		.4byte	.LFB3
 1302 01e2 10000000 		.4byte	.LFE3-.LFB3
 1303 01e6 01       		.uleb128 0x1
 1304 01e7 9C       		.byte	0x9c
 1305 01e8 12       		.uleb128 0x12
 1306 01e9 AD010000 		.4byte	.LASF30
 1307 01ed 01       		.byte	0x1
 1308 01ee 8701     		.2byte	0x187
 1309 01f0 00000000 		.4byte	.LFB4
 1310 01f4 14000000 		.4byte	.LFE4-.LFB4
 1311 01f8 01       		.uleb128 0x1
 1312 01f9 9C       		.byte	0x9c
 1313 01fa 12       		.uleb128 0x12
 1314 01fb F2030000 		.4byte	.LASF31
 1315 01ff 01       		.byte	0x1
 1316 0200 A001     		.2byte	0x1a0
 1317 0202 00000000 		.4byte	.LFB5
 1318 0206 14000000 		.4byte	.LFE5-.LFB5
 1319 020a 01       		.uleb128 0x1
 1320 020b 9C       		.byte	0x9c
 1321 020c 13       		.uleb128 0x13
 1322 020d 3A040000 		.4byte	.LASF33
 1323 0211 01       		.byte	0x1
 1324 0212 C201     		.2byte	0x1c2
 1325 0214 83000000 		.4byte	0x83
 1326 0218 00000000 		.4byte	.LFB6
 1327 021c 28000000 		.4byte	.LFE6-.LFB6
 1328 0220 01       		.uleb128 0x1
 1329 0221 9C       		.byte	0x9c
 1330 0222 47020000 		.4byte	0x247
 1331 0226 14       		.uleb128 0x14
 1332 0227 1B020000 		.4byte	.LASF35
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 40


 1333 022b 01       		.byte	0x1
 1334 022c C201     		.2byte	0x1c2
 1335 022e 83000000 		.4byte	0x83
 1336 0232 8B010000 		.4byte	.LLST3
 1337 0236 15       		.uleb128 0x15
 1338 0237 07040000 		.4byte	.LASF32
 1339 023b 01       		.byte	0x1
 1340 023c C401     		.2byte	0x1c4
 1341 023e 83000000 		.4byte	0x83
 1342 0242 D0010000 		.4byte	.LLST4
 1343 0246 00       		.byte	0
 1344 0247 13       		.uleb128 0x13
 1345 0248 99020000 		.4byte	.LASF34
 1346 024c 01       		.byte	0x1
 1347 024d F801     		.2byte	0x1f8
 1348 024f 8F000000 		.4byte	0x8f
 1349 0253 00000000 		.4byte	.LFB7
 1350 0257 2C000000 		.4byte	.LFE7-.LFB7
 1351 025b 01       		.uleb128 0x1
 1352 025c 9C       		.byte	0x9c
 1353 025d 91020000 		.4byte	0x291
 1354 0261 14       		.uleb128 0x14
 1355 0262 AF030000 		.4byte	.LASF36
 1356 0266 01       		.byte	0x1
 1357 0267 F801     		.2byte	0x1f8
 1358 0269 83000000 		.4byte	0x83
 1359 026d 06020000 		.4byte	.LLST5
 1360 0271 15       		.uleb128 0x15
 1361 0272 53040000 		.4byte	.LASF37
 1362 0276 01       		.byte	0x1
 1363 0277 FA01     		.2byte	0x1fa
 1364 0279 83000000 		.4byte	0x83
 1365 027d 4B020000 		.4byte	.LLST6
 1366 0281 0B       		.uleb128 0xb
 1367 0282 0E000000 		.4byte	.LVL36
 1368 0286 99050000 		.4byte	0x599
 1369 028a 0A       		.uleb128 0xa
 1370 028b 01       		.uleb128 0x1
 1371 028c 50       		.byte	0x50
 1372 028d 01       		.uleb128 0x1
 1373 028e 30       		.byte	0x30
 1374 028f 00       		.byte	0
 1375 0290 00       		.byte	0
 1376 0291 0F       		.uleb128 0xf
 1377 0292 07000000 		.4byte	.LASF38
 1378 0296 01       		.byte	0x1
 1379 0297 2502     		.2byte	0x225
 1380 0299 00000000 		.4byte	.LFB8
 1381 029d 10000000 		.4byte	.LFE8-.LFB8
 1382 02a1 01       		.uleb128 0x1
 1383 02a2 9C       		.byte	0x9c
 1384 02a3 B8020000 		.4byte	0x2b8
 1385 02a7 14       		.uleb128 0x14
 1386 02a8 DB010000 		.4byte	.LASF39
 1387 02ac 01       		.byte	0x1
 1388 02ad 2502     		.2byte	0x225
 1389 02af 83000000 		.4byte	0x83
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 41


 1390 02b3 69020000 		.4byte	.LLST7
 1391 02b7 00       		.byte	0
 1392 02b8 0F       		.uleb128 0xf
 1393 02b9 9A000000 		.4byte	.LASF40
 1394 02bd 01       		.byte	0x1
 1395 02be 5102     		.2byte	0x251
 1396 02c0 00000000 		.4byte	.LFB9
 1397 02c4 1C000000 		.4byte	.LFE9-.LFB9
 1398 02c8 01       		.uleb128 0x1
 1399 02c9 9C       		.byte	0x9c
 1400 02ca DF020000 		.4byte	0x2df
 1401 02ce 14       		.uleb128 0x14
 1402 02cf CC020000 		.4byte	.LASF41
 1403 02d3 01       		.byte	0x1
 1404 02d4 5102     		.2byte	0x251
 1405 02d6 83000000 		.4byte	0x83
 1406 02da 8A020000 		.4byte	.LLST8
 1407 02de 00       		.byte	0
 1408 02df 0F       		.uleb128 0xf
 1409 02e0 32030000 		.4byte	.LASF42
 1410 02e4 01       		.byte	0x1
 1411 02e5 6602     		.2byte	0x266
 1412 02e7 00000000 		.4byte	.LFB10
 1413 02eb 18000000 		.4byte	.LFE10-.LFB10
 1414 02ef 01       		.uleb128 0x1
 1415 02f0 9C       		.byte	0x9c
 1416 02f1 06030000 		.4byte	0x306
 1417 02f5 14       		.uleb128 0x14
 1418 02f6 28030000 		.4byte	.LASF43
 1419 02fa 01       		.byte	0x1
 1420 02fb 6602     		.2byte	0x266
 1421 02fd 83000000 		.4byte	0x83
 1422 0301 AB020000 		.4byte	.LLST9
 1423 0305 00       		.byte	0
 1424 0306 0F       		.uleb128 0xf
 1425 0307 68010000 		.4byte	.LASF44
 1426 030b 01       		.byte	0x1
 1427 030c 7E02     		.2byte	0x27e
 1428 030e 00000000 		.4byte	.LFB11
 1429 0312 10000000 		.4byte	.LFE11-.LFB11
 1430 0316 01       		.uleb128 0x1
 1431 0317 9C       		.byte	0x9c
 1432 0318 2D030000 		.4byte	0x32d
 1433 031c 14       		.uleb128 0x14
 1434 031d DB010000 		.4byte	.LASF39
 1435 0321 01       		.byte	0x1
 1436 0322 7E02     		.2byte	0x27e
 1437 0324 83000000 		.4byte	0x83
 1438 0328 CC020000 		.4byte	.LLST10
 1439 032c 00       		.byte	0
 1440 032d 0F       		.uleb128 0xf
 1441 032e 54010000 		.4byte	.LASF45
 1442 0332 01       		.byte	0x1
 1443 0333 9502     		.2byte	0x295
 1444 0335 00000000 		.4byte	.LFB12
 1445 0339 10000000 		.4byte	.LFE12-.LFB12
 1446 033d 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 42


 1447 033e 9C       		.byte	0x9c
 1448 033f 54030000 		.4byte	0x354
 1449 0343 14       		.uleb128 0x14
 1450 0344 DB010000 		.4byte	.LASF39
 1451 0348 01       		.byte	0x1
 1452 0349 9502     		.2byte	0x295
 1453 034b 83000000 		.4byte	0x83
 1454 034f ED020000 		.4byte	.LLST11
 1455 0353 00       		.byte	0
 1456 0354 0F       		.uleb128 0xf
 1457 0355 2B000000 		.4byte	.LASF46
 1458 0359 01       		.byte	0x1
 1459 035a B102     		.2byte	0x2b1
 1460 035c 00000000 		.4byte	.LFB13
 1461 0360 1C000000 		.4byte	.LFE13-.LFB13
 1462 0364 01       		.uleb128 0x1
 1463 0365 9C       		.byte	0x9c
 1464 0366 9A030000 		.4byte	0x39a
 1465 036a 14       		.uleb128 0x14
 1466 036b AF030000 		.4byte	.LASF36
 1467 036f 01       		.byte	0x1
 1468 0370 B102     		.2byte	0x2b1
 1469 0372 83000000 		.4byte	0x83
 1470 0376 0E030000 		.4byte	.LLST12
 1471 037a 14       		.uleb128 0x14
 1472 037b E1030000 		.4byte	.LASF47
 1473 037f 01       		.byte	0x1
 1474 0380 B102     		.2byte	0x2b1
 1475 0382 8F000000 		.4byte	0x8f
 1476 0386 3A030000 		.4byte	.LLST13
 1477 038a 0B       		.uleb128 0xb
 1478 038b 10000000 		.4byte	.LVL54
 1479 038f 99050000 		.4byte	0x599
 1480 0393 0A       		.uleb128 0xa
 1481 0394 01       		.uleb128 0x1
 1482 0395 50       		.byte	0x50
 1483 0396 01       		.uleb128 0x1
 1484 0397 30       		.byte	0x30
 1485 0398 00       		.byte	0
 1486 0399 00       		.byte	0
 1487 039a 0F       		.uleb128 0xf
 1488 039b 17030000 		.4byte	.LASF48
 1489 039f 01       		.byte	0x1
 1490 03a0 D302     		.2byte	0x2d3
 1491 03a2 00000000 		.4byte	.LFB14
 1492 03a6 1C000000 		.4byte	.LFE14-.LFB14
 1493 03aa 01       		.uleb128 0x1
 1494 03ab 9C       		.byte	0x9c
 1495 03ac E0030000 		.4byte	0x3e0
 1496 03b0 14       		.uleb128 0x14
 1497 03b1 AF030000 		.4byte	.LASF36
 1498 03b5 01       		.byte	0x1
 1499 03b6 D302     		.2byte	0x2d3
 1500 03b8 83000000 		.4byte	0x83
 1501 03bc 5B030000 		.4byte	.LLST14
 1502 03c0 14       		.uleb128 0x14
 1503 03c1 1C000000 		.4byte	.LASF49
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 43


 1504 03c5 01       		.byte	0x1
 1505 03c6 D302     		.2byte	0x2d3
 1506 03c8 9B000000 		.4byte	0x9b
 1507 03cc 87030000 		.4byte	.LLST15
 1508 03d0 0B       		.uleb128 0xb
 1509 03d1 10000000 		.4byte	.LVL58
 1510 03d5 99050000 		.4byte	0x599
 1511 03d9 0A       		.uleb128 0xa
 1512 03da 01       		.uleb128 0x1
 1513 03db 50       		.byte	0x50
 1514 03dc 01       		.uleb128 0x1
 1515 03dd 30       		.byte	0x30
 1516 03de 00       		.byte	0
 1517 03df 00       		.byte	0
 1518 03e0 16       		.uleb128 0x16
 1519 03e1 C8030000 		.4byte	.LASF50
 1520 03e5 01       		.byte	0x1
 1521 03e6 F402     		.2byte	0x2f4
 1522 03e8 8F000000 		.4byte	0x8f
 1523 03ec 00000000 		.4byte	.LFB15
 1524 03f0 5C000000 		.4byte	.LFE15-.LFB15
 1525 03f4 01       		.uleb128 0x1
 1526 03f5 9C       		.byte	0x9c
 1527 03f6 38040000 		.4byte	0x438
 1528 03fa 14       		.uleb128 0x14
 1529 03fb AF030000 		.4byte	.LASF36
 1530 03ff 01       		.byte	0x1
 1531 0400 F402     		.2byte	0x2f4
 1532 0402 83000000 		.4byte	0x83
 1533 0406 B7030000 		.4byte	.LLST16
 1534 040a 14       		.uleb128 0x14
 1535 040b E8030000 		.4byte	.LASF51
 1536 040f 01       		.byte	0x1
 1537 0410 F402     		.2byte	0x2f4
 1538 0412 8F000000 		.4byte	0x8f
 1539 0416 E3030000 		.4byte	.LLST17
 1540 041a 17       		.uleb128 0x17
 1541 041b AE020000 		.4byte	.LASF52
 1542 041f 01       		.byte	0x1
 1543 0420 F602     		.2byte	0x2f6
 1544 0422 8F000000 		.4byte	0x8f
 1545 0426 01       		.uleb128 0x1
 1546 0427 50       		.byte	0x50
 1547 0428 0B       		.uleb128 0xb
 1548 0429 10000000 		.4byte	.LVL63
 1549 042d 99050000 		.4byte	0x599
 1550 0431 0A       		.uleb128 0xa
 1551 0432 01       		.uleb128 0x1
 1552 0433 50       		.byte	0x50
 1553 0434 01       		.uleb128 0x1
 1554 0435 30       		.byte	0x30
 1555 0436 00       		.byte	0
 1556 0437 00       		.byte	0
 1557 0438 16       		.uleb128 0x16
 1558 0439 59030000 		.4byte	.LASF53
 1559 043d 01       		.byte	0x1
 1560 043e 2A03     		.2byte	0x32a
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 44


 1561 0440 9B000000 		.4byte	0x9b
 1562 0444 00000000 		.4byte	.LFB16
 1563 0448 40000000 		.4byte	.LFE16-.LFB16
 1564 044c 01       		.uleb128 0x1
 1565 044d 9C       		.byte	0x9c
 1566 044e 8E040000 		.4byte	0x48e
 1567 0452 14       		.uleb128 0x14
 1568 0453 AF030000 		.4byte	.LASF36
 1569 0457 01       		.byte	0x1
 1570 0458 2A03     		.2byte	0x32a
 1571 045a 83000000 		.4byte	0x83
 1572 045e 0F040000 		.4byte	.LLST18
 1573 0462 14       		.uleb128 0x14
 1574 0463 E8030000 		.4byte	.LASF51
 1575 0467 01       		.byte	0x1
 1576 0468 2A03     		.2byte	0x32a
 1577 046a 8F000000 		.4byte	0x8f
 1578 046e 3B040000 		.4byte	.LLST19
 1579 0472 18       		.uleb128 0x18
 1580 0473 3E020000 		.4byte	.LASF67
 1581 0477 01       		.byte	0x1
 1582 0478 2C03     		.2byte	0x32c
 1583 047a C1000000 		.4byte	0xc1
 1584 047e 0B       		.uleb128 0xb
 1585 047f 10000000 		.4byte	.LVL71
 1586 0483 99050000 		.4byte	0x599
 1587 0487 0A       		.uleb128 0xa
 1588 0488 01       		.uleb128 0x1
 1589 0489 50       		.byte	0x50
 1590 048a 01       		.uleb128 0x1
 1591 048b 30       		.byte	0x30
 1592 048c 00       		.byte	0
 1593 048d 00       		.byte	0
 1594 048e 16       		.uleb128 0x16
 1595 048f 22040000 		.4byte	.LASF54
 1596 0493 01       		.byte	0x1
 1597 0494 5703     		.2byte	0x357
 1598 0496 A7000000 		.4byte	0xa7
 1599 049a 00000000 		.4byte	.LFB17
 1600 049e 48000000 		.4byte	.LFE17-.LFB17
 1601 04a2 01       		.uleb128 0x1
 1602 04a3 9C       		.byte	0x9c
 1603 04a4 E6040000 		.4byte	0x4e6
 1604 04a8 14       		.uleb128 0x14
 1605 04a9 AF030000 		.4byte	.LASF36
 1606 04ad 01       		.byte	0x1
 1607 04ae 5703     		.2byte	0x357
 1608 04b0 83000000 		.4byte	0x83
 1609 04b4 67040000 		.4byte	.LLST20
 1610 04b8 14       		.uleb128 0x14
 1611 04b9 E8030000 		.4byte	.LASF51
 1612 04bd 01       		.byte	0x1
 1613 04be 5703     		.2byte	0x357
 1614 04c0 8F000000 		.4byte	0x8f
 1615 04c4 93040000 		.4byte	.LLST21
 1616 04c8 17       		.uleb128 0x17
 1617 04c9 57020000 		.4byte	.LASF55
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 45


 1618 04cd 01       		.byte	0x1
 1619 04ce 5903     		.2byte	0x359
 1620 04d0 A7000000 		.4byte	0xa7
 1621 04d4 01       		.uleb128 0x1
 1622 04d5 50       		.byte	0x50
 1623 04d6 0B       		.uleb128 0xb
 1624 04d7 10000000 		.4byte	.LVL78
 1625 04db 99050000 		.4byte	0x599
 1626 04df 0A       		.uleb128 0xa
 1627 04e0 01       		.uleb128 0x1
 1628 04e1 50       		.byte	0x50
 1629 04e2 01       		.uleb128 0x1
 1630 04e3 30       		.byte	0x30
 1631 04e4 00       		.byte	0
 1632 04e5 00       		.byte	0
 1633 04e6 0C       		.uleb128 0xc
 1634 04e7 F6040000 		.4byte	0x4f6
 1635 04eb F6040000 		.4byte	0x4f6
 1636 04ef 0D       		.uleb128 0xd
 1637 04f0 EC000000 		.4byte	0xec
 1638 04f4 01       		.byte	0x1
 1639 04f5 00       		.byte	0
 1640 04f6 0E       		.uleb128 0xe
 1641 04f7 83000000 		.4byte	0x83
 1642 04fb 08       		.uleb128 0x8
 1643 04fc 91030000 		.4byte	.LASF56
 1644 0500 01       		.byte	0x1
 1645 0501 21       		.byte	0x21
 1646 0502 0C050000 		.4byte	0x50c
 1647 0506 05       		.uleb128 0x5
 1648 0507 03       		.byte	0x3
 1649 0508 00000000 		.4byte	ADCInput_channelsConfig
 1650 050c 0E       		.uleb128 0xe
 1651 050d E6040000 		.4byte	0x4e6
 1652 0511 19       		.uleb128 0x19
 1653 0512 48030000 		.4byte	.LASF57
 1654 0516 01       		.byte	0x1
 1655 0517 18       		.byte	0x18
 1656 0518 6B000000 		.4byte	0x6b
 1657 051c 05       		.uleb128 0x5
 1658 051d 03       		.byte	0x3
 1659 051e 00000000 		.4byte	ADCInput_initVar
 1660 0522 0C       		.uleb128 0xc
 1661 0523 32050000 		.4byte	0x532
 1662 0527 32050000 		.4byte	0x532
 1663 052b 0D       		.uleb128 0xd
 1664 052c EC000000 		.4byte	0xec
 1665 0530 01       		.byte	0x1
 1666 0531 00       		.byte	0
 1667 0532 05       		.uleb128 0x5
 1668 0533 8F000000 		.4byte	0x8f
 1669 0537 19       		.uleb128 0x19
 1670 0538 67020000 		.4byte	.LASF58
 1671 053c 01       		.byte	0x1
 1672 053d 19       		.byte	0x19
 1673 053e 48050000 		.4byte	0x548
 1674 0542 05       		.uleb128 0x5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 46


 1675 0543 03       		.byte	0x3
 1676 0544 00000000 		.4byte	ADCInput_offset
 1677 0548 05       		.uleb128 0x5
 1678 0549 22050000 		.4byte	0x522
 1679 054d 0C       		.uleb128 0xc
 1680 054e 5D050000 		.4byte	0x55d
 1681 0552 5D050000 		.4byte	0x55d
 1682 0556 0D       		.uleb128 0xd
 1683 0557 EC000000 		.4byte	0xec
 1684 055b 01       		.byte	0x1
 1685 055c 00       		.byte	0
 1686 055d 05       		.uleb128 0x5
 1687 055e 9B000000 		.4byte	0x9b
 1688 0562 19       		.uleb128 0x19
 1689 0563 02020000 		.4byte	.LASF59
 1690 0567 01       		.byte	0x1
 1691 0568 1A       		.byte	0x1a
 1692 0569 73050000 		.4byte	0x573
 1693 056d 05       		.uleb128 0x5
 1694 056e 03       		.byte	0x3
 1695 056f 00000000 		.4byte	ADCInput_countsPer10Volt
 1696 0573 05       		.uleb128 0x5
 1697 0574 4D050000 		.4byte	0x54d
 1698 0578 1A       		.uleb128 0x1a
 1699 0579 00030000 		.4byte	.LASF60
 1700 057d 00030000 		.4byte	.LASF60
 1701 0581 03       		.byte	0x3
 1702 0582 C0       		.byte	0xc0
 1703 0583 1A       		.uleb128 0x1a
 1704 0584 8A020000 		.4byte	.LASF61
 1705 0588 8A020000 		.4byte	.LASF61
 1706 058c 03       		.byte	0x3
 1707 058d BD       		.byte	0xbd
 1708 058e 1A       		.uleb128 0x1a
 1709 058f C3010000 		.4byte	.LASF62
 1710 0593 C3010000 		.4byte	.LASF62
 1711 0597 03       		.byte	0x3
 1712 0598 DA       		.byte	0xda
 1713 0599 1A       		.uleb128 0x1a
 1714 059a 72030000 		.4byte	.LASF63
 1715 059e 72030000 		.4byte	.LASF63
 1716 05a2 03       		.byte	0x3
 1717 05a3 E7       		.byte	0xe7
 1718 05a4 00       		.byte	0
 1719              		.section	.debug_abbrev,"",%progbits
 1720              	.Ldebug_abbrev0:
 1721 0000 01       		.uleb128 0x1
 1722 0001 11       		.uleb128 0x11
 1723 0002 01       		.byte	0x1
 1724 0003 25       		.uleb128 0x25
 1725 0004 0E       		.uleb128 0xe
 1726 0005 13       		.uleb128 0x13
 1727 0006 0B       		.uleb128 0xb
 1728 0007 03       		.uleb128 0x3
 1729 0008 0E       		.uleb128 0xe
 1730 0009 1B       		.uleb128 0x1b
 1731 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 47


 1732 000b 55       		.uleb128 0x55
 1733 000c 17       		.uleb128 0x17
 1734 000d 11       		.uleb128 0x11
 1735 000e 01       		.uleb128 0x1
 1736 000f 10       		.uleb128 0x10
 1737 0010 17       		.uleb128 0x17
 1738 0011 00       		.byte	0
 1739 0012 00       		.byte	0
 1740 0013 02       		.uleb128 0x2
 1741 0014 24       		.uleb128 0x24
 1742 0015 00       		.byte	0
 1743 0016 0B       		.uleb128 0xb
 1744 0017 0B       		.uleb128 0xb
 1745 0018 3E       		.uleb128 0x3e
 1746 0019 0B       		.uleb128 0xb
 1747 001a 03       		.uleb128 0x3
 1748 001b 0E       		.uleb128 0xe
 1749 001c 00       		.byte	0
 1750 001d 00       		.byte	0
 1751 001e 03       		.uleb128 0x3
 1752 001f 24       		.uleb128 0x24
 1753 0020 00       		.byte	0
 1754 0021 0B       		.uleb128 0xb
 1755 0022 0B       		.uleb128 0xb
 1756 0023 3E       		.uleb128 0x3e
 1757 0024 0B       		.uleb128 0xb
 1758 0025 03       		.uleb128 0x3
 1759 0026 08       		.uleb128 0x8
 1760 0027 00       		.byte	0
 1761 0028 00       		.byte	0
 1762 0029 04       		.uleb128 0x4
 1763 002a 16       		.uleb128 0x16
 1764 002b 00       		.byte	0
 1765 002c 03       		.uleb128 0x3
 1766 002d 0E       		.uleb128 0xe
 1767 002e 3A       		.uleb128 0x3a
 1768 002f 0B       		.uleb128 0xb
 1769 0030 3B       		.uleb128 0x3b
 1770 0031 05       		.uleb128 0x5
 1771 0032 49       		.uleb128 0x49
 1772 0033 13       		.uleb128 0x13
 1773 0034 00       		.byte	0
 1774 0035 00       		.byte	0
 1775 0036 05       		.uleb128 0x5
 1776 0037 35       		.uleb128 0x35
 1777 0038 00       		.byte	0
 1778 0039 49       		.uleb128 0x49
 1779 003a 13       		.uleb128 0x13
 1780 003b 00       		.byte	0
 1781 003c 00       		.byte	0
 1782 003d 06       		.uleb128 0x6
 1783 003e 2E       		.uleb128 0x2e
 1784 003f 01       		.byte	0x1
 1785 0040 3F       		.uleb128 0x3f
 1786 0041 19       		.uleb128 0x19
 1787 0042 03       		.uleb128 0x3
 1788 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 48


 1789 0044 3A       		.uleb128 0x3a
 1790 0045 0B       		.uleb128 0xb
 1791 0046 3B       		.uleb128 0x3b
 1792 0047 0B       		.uleb128 0xb
 1793 0048 27       		.uleb128 0x27
 1794 0049 19       		.uleb128 0x19
 1795 004a 11       		.uleb128 0x11
 1796 004b 01       		.uleb128 0x1
 1797 004c 12       		.uleb128 0x12
 1798 004d 06       		.uleb128 0x6
 1799 004e 40       		.uleb128 0x40
 1800 004f 18       		.uleb128 0x18
 1801 0050 9642     		.uleb128 0x2116
 1802 0052 19       		.uleb128 0x19
 1803 0053 01       		.uleb128 0x1
 1804 0054 13       		.uleb128 0x13
 1805 0055 00       		.byte	0
 1806 0056 00       		.byte	0
 1807 0057 07       		.uleb128 0x7
 1808 0058 34       		.uleb128 0x34
 1809 0059 00       		.byte	0
 1810 005a 03       		.uleb128 0x3
 1811 005b 0E       		.uleb128 0xe
 1812 005c 3A       		.uleb128 0x3a
 1813 005d 0B       		.uleb128 0xb
 1814 005e 3B       		.uleb128 0x3b
 1815 005f 0B       		.uleb128 0xb
 1816 0060 49       		.uleb128 0x49
 1817 0061 13       		.uleb128 0x13
 1818 0062 02       		.uleb128 0x2
 1819 0063 17       		.uleb128 0x17
 1820 0064 00       		.byte	0
 1821 0065 00       		.byte	0
 1822 0066 08       		.uleb128 0x8
 1823 0067 34       		.uleb128 0x34
 1824 0068 00       		.byte	0
 1825 0069 03       		.uleb128 0x3
 1826 006a 0E       		.uleb128 0xe
 1827 006b 3A       		.uleb128 0x3a
 1828 006c 0B       		.uleb128 0xb
 1829 006d 3B       		.uleb128 0x3b
 1830 006e 0B       		.uleb128 0xb
 1831 006f 49       		.uleb128 0x49
 1832 0070 13       		.uleb128 0x13
 1833 0071 02       		.uleb128 0x2
 1834 0072 18       		.uleb128 0x18
 1835 0073 00       		.byte	0
 1836 0074 00       		.byte	0
 1837 0075 09       		.uleb128 0x9
 1838 0076 898201   		.uleb128 0x4109
 1839 0079 01       		.byte	0x1
 1840 007a 11       		.uleb128 0x11
 1841 007b 01       		.uleb128 0x1
 1842 007c 31       		.uleb128 0x31
 1843 007d 13       		.uleb128 0x13
 1844 007e 01       		.uleb128 0x1
 1845 007f 13       		.uleb128 0x13
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 49


 1846 0080 00       		.byte	0
 1847 0081 00       		.byte	0
 1848 0082 0A       		.uleb128 0xa
 1849 0083 8A8201   		.uleb128 0x410a
 1850 0086 00       		.byte	0
 1851 0087 02       		.uleb128 0x2
 1852 0088 18       		.uleb128 0x18
 1853 0089 9142     		.uleb128 0x2111
 1854 008b 18       		.uleb128 0x18
 1855 008c 00       		.byte	0
 1856 008d 00       		.byte	0
 1857 008e 0B       		.uleb128 0xb
 1858 008f 898201   		.uleb128 0x4109
 1859 0092 01       		.byte	0x1
 1860 0093 11       		.uleb128 0x11
 1861 0094 01       		.uleb128 0x1
 1862 0095 31       		.uleb128 0x31
 1863 0096 13       		.uleb128 0x13
 1864 0097 00       		.byte	0
 1865 0098 00       		.byte	0
 1866 0099 0C       		.uleb128 0xc
 1867 009a 01       		.uleb128 0x1
 1868 009b 01       		.byte	0x1
 1869 009c 49       		.uleb128 0x49
 1870 009d 13       		.uleb128 0x13
 1871 009e 01       		.uleb128 0x1
 1872 009f 13       		.uleb128 0x13
 1873 00a0 00       		.byte	0
 1874 00a1 00       		.byte	0
 1875 00a2 0D       		.uleb128 0xd
 1876 00a3 21       		.uleb128 0x21
 1877 00a4 00       		.byte	0
 1878 00a5 49       		.uleb128 0x49
 1879 00a6 13       		.uleb128 0x13
 1880 00a7 2F       		.uleb128 0x2f
 1881 00a8 0B       		.uleb128 0xb
 1882 00a9 00       		.byte	0
 1883 00aa 00       		.byte	0
 1884 00ab 0E       		.uleb128 0xe
 1885 00ac 26       		.uleb128 0x26
 1886 00ad 00       		.byte	0
 1887 00ae 49       		.uleb128 0x49
 1888 00af 13       		.uleb128 0x13
 1889 00b0 00       		.byte	0
 1890 00b1 00       		.byte	0
 1891 00b2 0F       		.uleb128 0xf
 1892 00b3 2E       		.uleb128 0x2e
 1893 00b4 01       		.byte	0x1
 1894 00b5 3F       		.uleb128 0x3f
 1895 00b6 19       		.uleb128 0x19
 1896 00b7 03       		.uleb128 0x3
 1897 00b8 0E       		.uleb128 0xe
 1898 00b9 3A       		.uleb128 0x3a
 1899 00ba 0B       		.uleb128 0xb
 1900 00bb 3B       		.uleb128 0x3b
 1901 00bc 05       		.uleb128 0x5
 1902 00bd 27       		.uleb128 0x27
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 50


 1903 00be 19       		.uleb128 0x19
 1904 00bf 11       		.uleb128 0x11
 1905 00c0 01       		.uleb128 0x1
 1906 00c1 12       		.uleb128 0x12
 1907 00c2 06       		.uleb128 0x6
 1908 00c3 40       		.uleb128 0x40
 1909 00c4 18       		.uleb128 0x18
 1910 00c5 9742     		.uleb128 0x2117
 1911 00c7 19       		.uleb128 0x19
 1912 00c8 01       		.uleb128 0x1
 1913 00c9 13       		.uleb128 0x13
 1914 00ca 00       		.byte	0
 1915 00cb 00       		.byte	0
 1916 00cc 10       		.uleb128 0x10
 1917 00cd 2E       		.uleb128 0x2e
 1918 00ce 01       		.byte	0x1
 1919 00cf 3F       		.uleb128 0x3f
 1920 00d0 19       		.uleb128 0x19
 1921 00d1 03       		.uleb128 0x3
 1922 00d2 0E       		.uleb128 0xe
 1923 00d3 3A       		.uleb128 0x3a
 1924 00d4 0B       		.uleb128 0xb
 1925 00d5 3B       		.uleb128 0x3b
 1926 00d6 0B       		.uleb128 0xb
 1927 00d7 27       		.uleb128 0x27
 1928 00d8 19       		.uleb128 0x19
 1929 00d9 11       		.uleb128 0x11
 1930 00da 01       		.uleb128 0x1
 1931 00db 12       		.uleb128 0x12
 1932 00dc 06       		.uleb128 0x6
 1933 00dd 40       		.uleb128 0x40
 1934 00de 18       		.uleb128 0x18
 1935 00df 9742     		.uleb128 0x2117
 1936 00e1 19       		.uleb128 0x19
 1937 00e2 01       		.uleb128 0x1
 1938 00e3 13       		.uleb128 0x13
 1939 00e4 00       		.byte	0
 1940 00e5 00       		.byte	0
 1941 00e6 11       		.uleb128 0x11
 1942 00e7 898201   		.uleb128 0x4109
 1943 00ea 00       		.byte	0
 1944 00eb 11       		.uleb128 0x11
 1945 00ec 01       		.uleb128 0x1
 1946 00ed 31       		.uleb128 0x31
 1947 00ee 13       		.uleb128 0x13
 1948 00ef 00       		.byte	0
 1949 00f0 00       		.byte	0
 1950 00f1 12       		.uleb128 0x12
 1951 00f2 2E       		.uleb128 0x2e
 1952 00f3 00       		.byte	0
 1953 00f4 3F       		.uleb128 0x3f
 1954 00f5 19       		.uleb128 0x19
 1955 00f6 03       		.uleb128 0x3
 1956 00f7 0E       		.uleb128 0xe
 1957 00f8 3A       		.uleb128 0x3a
 1958 00f9 0B       		.uleb128 0xb
 1959 00fa 3B       		.uleb128 0x3b
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 51


 1960 00fb 05       		.uleb128 0x5
 1961 00fc 27       		.uleb128 0x27
 1962 00fd 19       		.uleb128 0x19
 1963 00fe 11       		.uleb128 0x11
 1964 00ff 01       		.uleb128 0x1
 1965 0100 12       		.uleb128 0x12
 1966 0101 06       		.uleb128 0x6
 1967 0102 40       		.uleb128 0x40
 1968 0103 18       		.uleb128 0x18
 1969 0104 9742     		.uleb128 0x2117
 1970 0106 19       		.uleb128 0x19
 1971 0107 00       		.byte	0
 1972 0108 00       		.byte	0
 1973 0109 13       		.uleb128 0x13
 1974 010a 2E       		.uleb128 0x2e
 1975 010b 01       		.byte	0x1
 1976 010c 3F       		.uleb128 0x3f
 1977 010d 19       		.uleb128 0x19
 1978 010e 03       		.uleb128 0x3
 1979 010f 0E       		.uleb128 0xe
 1980 0110 3A       		.uleb128 0x3a
 1981 0111 0B       		.uleb128 0xb
 1982 0112 3B       		.uleb128 0x3b
 1983 0113 05       		.uleb128 0x5
 1984 0114 27       		.uleb128 0x27
 1985 0115 19       		.uleb128 0x19
 1986 0116 49       		.uleb128 0x49
 1987 0117 13       		.uleb128 0x13
 1988 0118 11       		.uleb128 0x11
 1989 0119 01       		.uleb128 0x1
 1990 011a 12       		.uleb128 0x12
 1991 011b 06       		.uleb128 0x6
 1992 011c 40       		.uleb128 0x40
 1993 011d 18       		.uleb128 0x18
 1994 011e 9742     		.uleb128 0x2117
 1995 0120 19       		.uleb128 0x19
 1996 0121 01       		.uleb128 0x1
 1997 0122 13       		.uleb128 0x13
 1998 0123 00       		.byte	0
 1999 0124 00       		.byte	0
 2000 0125 14       		.uleb128 0x14
 2001 0126 05       		.uleb128 0x5
 2002 0127 00       		.byte	0
 2003 0128 03       		.uleb128 0x3
 2004 0129 0E       		.uleb128 0xe
 2005 012a 3A       		.uleb128 0x3a
 2006 012b 0B       		.uleb128 0xb
 2007 012c 3B       		.uleb128 0x3b
 2008 012d 05       		.uleb128 0x5
 2009 012e 49       		.uleb128 0x49
 2010 012f 13       		.uleb128 0x13
 2011 0130 02       		.uleb128 0x2
 2012 0131 17       		.uleb128 0x17
 2013 0132 00       		.byte	0
 2014 0133 00       		.byte	0
 2015 0134 15       		.uleb128 0x15
 2016 0135 34       		.uleb128 0x34
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 52


 2017 0136 00       		.byte	0
 2018 0137 03       		.uleb128 0x3
 2019 0138 0E       		.uleb128 0xe
 2020 0139 3A       		.uleb128 0x3a
 2021 013a 0B       		.uleb128 0xb
 2022 013b 3B       		.uleb128 0x3b
 2023 013c 05       		.uleb128 0x5
 2024 013d 49       		.uleb128 0x49
 2025 013e 13       		.uleb128 0x13
 2026 013f 02       		.uleb128 0x2
 2027 0140 17       		.uleb128 0x17
 2028 0141 00       		.byte	0
 2029 0142 00       		.byte	0
 2030 0143 16       		.uleb128 0x16
 2031 0144 2E       		.uleb128 0x2e
 2032 0145 01       		.byte	0x1
 2033 0146 3F       		.uleb128 0x3f
 2034 0147 19       		.uleb128 0x19
 2035 0148 03       		.uleb128 0x3
 2036 0149 0E       		.uleb128 0xe
 2037 014a 3A       		.uleb128 0x3a
 2038 014b 0B       		.uleb128 0xb
 2039 014c 3B       		.uleb128 0x3b
 2040 014d 05       		.uleb128 0x5
 2041 014e 27       		.uleb128 0x27
 2042 014f 19       		.uleb128 0x19
 2043 0150 49       		.uleb128 0x49
 2044 0151 13       		.uleb128 0x13
 2045 0152 11       		.uleb128 0x11
 2046 0153 01       		.uleb128 0x1
 2047 0154 12       		.uleb128 0x12
 2048 0155 06       		.uleb128 0x6
 2049 0156 40       		.uleb128 0x40
 2050 0157 18       		.uleb128 0x18
 2051 0158 9642     		.uleb128 0x2116
 2052 015a 19       		.uleb128 0x19
 2053 015b 01       		.uleb128 0x1
 2054 015c 13       		.uleb128 0x13
 2055 015d 00       		.byte	0
 2056 015e 00       		.byte	0
 2057 015f 17       		.uleb128 0x17
 2058 0160 34       		.uleb128 0x34
 2059 0161 00       		.byte	0
 2060 0162 03       		.uleb128 0x3
 2061 0163 0E       		.uleb128 0xe
 2062 0164 3A       		.uleb128 0x3a
 2063 0165 0B       		.uleb128 0xb
 2064 0166 3B       		.uleb128 0x3b
 2065 0167 05       		.uleb128 0x5
 2066 0168 49       		.uleb128 0x49
 2067 0169 13       		.uleb128 0x13
 2068 016a 02       		.uleb128 0x2
 2069 016b 18       		.uleb128 0x18
 2070 016c 00       		.byte	0
 2071 016d 00       		.byte	0
 2072 016e 18       		.uleb128 0x18
 2073 016f 34       		.uleb128 0x34
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 53


 2074 0170 00       		.byte	0
 2075 0171 03       		.uleb128 0x3
 2076 0172 0E       		.uleb128 0xe
 2077 0173 3A       		.uleb128 0x3a
 2078 0174 0B       		.uleb128 0xb
 2079 0175 3B       		.uleb128 0x3b
 2080 0176 05       		.uleb128 0x5
 2081 0177 49       		.uleb128 0x49
 2082 0178 13       		.uleb128 0x13
 2083 0179 00       		.byte	0
 2084 017a 00       		.byte	0
 2085 017b 19       		.uleb128 0x19
 2086 017c 34       		.uleb128 0x34
 2087 017d 00       		.byte	0
 2088 017e 03       		.uleb128 0x3
 2089 017f 0E       		.uleb128 0xe
 2090 0180 3A       		.uleb128 0x3a
 2091 0181 0B       		.uleb128 0xb
 2092 0182 3B       		.uleb128 0x3b
 2093 0183 0B       		.uleb128 0xb
 2094 0184 49       		.uleb128 0x49
 2095 0185 13       		.uleb128 0x13
 2096 0186 3F       		.uleb128 0x3f
 2097 0187 19       		.uleb128 0x19
 2098 0188 02       		.uleb128 0x2
 2099 0189 18       		.uleb128 0x18
 2100 018a 00       		.byte	0
 2101 018b 00       		.byte	0
 2102 018c 1A       		.uleb128 0x1a
 2103 018d 2E       		.uleb128 0x2e
 2104 018e 00       		.byte	0
 2105 018f 3F       		.uleb128 0x3f
 2106 0190 19       		.uleb128 0x19
 2107 0191 3C       		.uleb128 0x3c
 2108 0192 19       		.uleb128 0x19
 2109 0193 6E       		.uleb128 0x6e
 2110 0194 0E       		.uleb128 0xe
 2111 0195 03       		.uleb128 0x3
 2112 0196 0E       		.uleb128 0xe
 2113 0197 3A       		.uleb128 0x3a
 2114 0198 0B       		.uleb128 0xb
 2115 0199 3B       		.uleb128 0x3b
 2116 019a 0B       		.uleb128 0xb
 2117 019b 00       		.byte	0
 2118 019c 00       		.byte	0
 2119 019d 00       		.byte	0
 2120              		.section	.debug_loc,"",%progbits
 2121              	.Ldebug_loc0:
 2122              	.LLST0:
 2123 0000 7E000000 		.4byte	.LVL5
 2124 0004 82000000 		.4byte	.LVL6
 2125 0008 0200     		.2byte	0x2
 2126 000a 30       		.byte	0x30
 2127 000b 9F       		.byte	0x9f
 2128 000c 82000000 		.4byte	.LVL6
 2129 0010 12010000 		.4byte	.LVL23
 2130 0014 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 54


 2131 0016 54       		.byte	0x54
 2132 0017 00000000 		.4byte	0
 2133 001b 00000000 		.4byte	0
 2134              	.LLST1:
 2135 001f 76000000 		.4byte	.LVL2
 2136 0023 7A000000 		.4byte	.LVL3
 2137 0027 0100     		.2byte	0x1
 2138 0029 50       		.byte	0x50
 2139 002a 7A000000 		.4byte	.LVL3
 2140 002e 7C000000 		.4byte	.LVL4
 2141 0032 0100     		.2byte	0x1
 2142 0034 52       		.byte	0x52
 2143 0035 7C000000 		.4byte	.LVL4
 2144 0039 82000000 		.4byte	.LVL6
 2145 003d 0100     		.2byte	0x1
 2146 003f 53       		.byte	0x53
 2147 0040 8E000000 		.4byte	.LVL7
 2148 0044 A0000000 		.4byte	.LVL9
 2149 0048 0100     		.2byte	0x1
 2150 004a 53       		.byte	0x53
 2151 004b A0000000 		.4byte	.LVL9
 2152 004f A4000000 		.4byte	.LVL10
 2153 0053 0200     		.2byte	0x2
 2154 0055 72       		.byte	0x72
 2155 0056 00       		.sleb128 0
 2156 0057 A4000000 		.4byte	.LVL10
 2157 005b B0000000 		.4byte	.LVL11
 2158 005f 0700     		.2byte	0x7
 2159 0061 74       		.byte	0x74
 2160 0062 00       		.sleb128 0
 2161 0063 32       		.byte	0x32
 2162 0064 24       		.byte	0x24
 2163 0065 7C       		.byte	0x7c
 2164 0066 00       		.sleb128 0
 2165 0067 22       		.byte	0x22
 2166 0068 B0000000 		.4byte	.LVL11
 2167 006c B4000000 		.4byte	.LVL12
 2168 0070 1500     		.2byte	0x15
 2169 0072 70       		.byte	0x70
 2170 0073 00       		.sleb128 0
 2171 0074 0A       		.byte	0xa
 2172 0075 0037     		.2byte	0x3700
 2173 0077 1A       		.byte	0x1a
 2174 0078 74       		.byte	0x74
 2175 0079 00       		.sleb128 0
 2176 007a 03       		.byte	0x3
 2177 007b 08000000 		.4byte	.LANCHOR0+8
 2178 007f 22       		.byte	0x22
 2179 0080 94       		.byte	0x94
 2180 0081 01       		.byte	0x1
 2181 0082 08       		.byte	0x8
 2182 0083 FF       		.byte	0xff
 2183 0084 1A       		.byte	0x1a
 2184 0085 21       		.byte	0x21
 2185 0086 9F       		.byte	0x9f
 2186 0087 B4000000 		.4byte	.LVL12
 2187 008b BE000000 		.4byte	.LVL13
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 55


 2188 008f 1400     		.2byte	0x14
 2189 0091 70       		.byte	0x70
 2190 0092 00       		.sleb128 0
 2191 0093 0A       		.byte	0xa
 2192 0094 0037     		.2byte	0x3700
 2193 0096 1A       		.byte	0x1a
 2194 0097 72       		.byte	0x72
 2195 0098 00       		.sleb128 0
 2196 0099 74       		.byte	0x74
 2197 009a 00       		.sleb128 0
 2198 009b 22       		.byte	0x22
 2199 009c 23       		.byte	0x23
 2200 009d 08       		.uleb128 0x8
 2201 009e 94       		.byte	0x94
 2202 009f 01       		.byte	0x1
 2203 00a0 08       		.byte	0x8
 2204 00a1 FF       		.byte	0xff
 2205 00a2 1A       		.byte	0x1a
 2206 00a3 21       		.byte	0x21
 2207 00a4 9F       		.byte	0x9f
 2208 00a5 BE000000 		.4byte	.LVL13
 2209 00a9 CE000000 		.4byte	.LVL14
 2210 00ad 1500     		.2byte	0x15
 2211 00af 70       		.byte	0x70
 2212 00b0 00       		.sleb128 0
 2213 00b1 0A       		.byte	0xa
 2214 00b2 0037     		.2byte	0x3700
 2215 00b4 1A       		.byte	0x1a
 2216 00b5 74       		.byte	0x74
 2217 00b6 00       		.sleb128 0
 2218 00b7 03       		.byte	0x3
 2219 00b8 08000000 		.4byte	.LANCHOR0+8
 2220 00bc 22       		.byte	0x22
 2221 00bd 94       		.byte	0x94
 2222 00be 01       		.byte	0x1
 2223 00bf 08       		.byte	0x8
 2224 00c0 FF       		.byte	0xff
 2225 00c1 1A       		.byte	0x1a
 2226 00c2 21       		.byte	0x21
 2227 00c3 9F       		.byte	0x9f
 2228 00c4 CE000000 		.4byte	.LVL14
 2229 00c8 D4000000 		.4byte	.LVL15
 2230 00cc 1400     		.2byte	0x14
 2231 00ce 70       		.byte	0x70
 2232 00cf 00       		.sleb128 0
 2233 00d0 0A       		.byte	0xa
 2234 00d1 0037     		.2byte	0x3700
 2235 00d3 1A       		.byte	0x1a
 2236 00d4 72       		.byte	0x72
 2237 00d5 00       		.sleb128 0
 2238 00d6 74       		.byte	0x74
 2239 00d7 00       		.sleb128 0
 2240 00d8 22       		.byte	0x22
 2241 00d9 23       		.byte	0x23
 2242 00da 08       		.uleb128 0x8
 2243 00db 94       		.byte	0x94
 2244 00dc 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 56


 2245 00dd 08       		.byte	0x8
 2246 00de FF       		.byte	0xff
 2247 00df 1A       		.byte	0x1a
 2248 00e0 21       		.byte	0x21
 2249 00e1 9F       		.byte	0x9f
 2250 00e2 D4000000 		.4byte	.LVL15
 2251 00e6 D6000000 		.4byte	.LVL16
 2252 00ea 1500     		.2byte	0x15
 2253 00ec 70       		.byte	0x70
 2254 00ed 00       		.sleb128 0
 2255 00ee 0A       		.byte	0xa
 2256 00ef 0037     		.2byte	0x3700
 2257 00f1 1A       		.byte	0x1a
 2258 00f2 74       		.byte	0x74
 2259 00f3 00       		.sleb128 0
 2260 00f4 03       		.byte	0x3
 2261 00f5 08000000 		.4byte	.LANCHOR0+8
 2262 00f9 22       		.byte	0x22
 2263 00fa 94       		.byte	0x94
 2264 00fb 01       		.byte	0x1
 2265 00fc 08       		.byte	0x8
 2266 00fd FF       		.byte	0xff
 2267 00fe 1A       		.byte	0x1a
 2268 00ff 21       		.byte	0x21
 2269 0100 9F       		.byte	0x9f
 2270 0101 D6000000 		.4byte	.LVL16
 2271 0105 DA000000 		.4byte	.LVL17
 2272 0109 1E00     		.2byte	0x1e
 2273 010b 74       		.byte	0x74
 2274 010c 00       		.sleb128 0
 2275 010d 32       		.byte	0x32
 2276 010e 24       		.byte	0x24
 2277 010f 03       		.byte	0x3
 2278 0110 00000000 		.4byte	.LANCHOR0
 2279 0114 22       		.byte	0x22
 2280 0115 06       		.byte	0x6
 2281 0116 0A       		.byte	0xa
 2282 0117 0037     		.2byte	0x3700
 2283 0119 1A       		.byte	0x1a
 2284 011a 74       		.byte	0x74
 2285 011b 00       		.sleb128 0
 2286 011c 03       		.byte	0x3
 2287 011d 08000000 		.4byte	.LANCHOR0+8
 2288 0121 22       		.byte	0x22
 2289 0122 94       		.byte	0x94
 2290 0123 01       		.byte	0x1
 2291 0124 08       		.byte	0x8
 2292 0125 FF       		.byte	0xff
 2293 0126 1A       		.byte	0x1a
 2294 0127 21       		.byte	0x21
 2295 0128 9F       		.byte	0x9f
 2296 0129 DA000000 		.4byte	.LVL17
 2297 012d DC000000 		.4byte	.LVL18
 2298 0131 1500     		.2byte	0x15
 2299 0133 70       		.byte	0x70
 2300 0134 00       		.sleb128 0
 2301 0135 0A       		.byte	0xa
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 57


 2302 0136 0037     		.2byte	0x3700
 2303 0138 1A       		.byte	0x1a
 2304 0139 74       		.byte	0x74
 2305 013a 00       		.sleb128 0
 2306 013b 03       		.byte	0x3
 2307 013c 08000000 		.4byte	.LANCHOR0+8
 2308 0140 22       		.byte	0x22
 2309 0141 94       		.byte	0x94
 2310 0142 01       		.byte	0x1
 2311 0143 08       		.byte	0x8
 2312 0144 FF       		.byte	0xff
 2313 0145 1A       		.byte	0x1a
 2314 0146 21       		.byte	0x21
 2315 0147 9F       		.byte	0x9f
 2316 0148 DC000000 		.4byte	.LVL18
 2317 014c 0E010000 		.4byte	.LVL22
 2318 0150 1E00     		.2byte	0x1e
 2319 0152 74       		.byte	0x74
 2320 0153 00       		.sleb128 0
 2321 0154 32       		.byte	0x32
 2322 0155 24       		.byte	0x24
 2323 0156 03       		.byte	0x3
 2324 0157 00000000 		.4byte	.LANCHOR0
 2325 015b 22       		.byte	0x22
 2326 015c 06       		.byte	0x6
 2327 015d 0A       		.byte	0xa
 2328 015e 0037     		.2byte	0x3700
 2329 0160 1A       		.byte	0x1a
 2330 0161 74       		.byte	0x74
 2331 0162 00       		.sleb128 0
 2332 0163 03       		.byte	0x3
 2333 0164 08000000 		.4byte	.LANCHOR0+8
 2334 0168 22       		.byte	0x22
 2335 0169 94       		.byte	0x94
 2336 016a 01       		.byte	0x1
 2337 016b 08       		.byte	0x8
 2338 016c FF       		.byte	0xff
 2339 016d 1A       		.byte	0x1a
 2340 016e 21       		.byte	0x21
 2341 016f 9F       		.byte	0x9f
 2342 0170 00000000 		.4byte	0
 2343 0174 00000000 		.4byte	0
 2344              	.LLST2:
 2345 0178 DE000000 		.4byte	.LVL19
 2346 017c F8000000 		.4byte	.LVL20
 2347 0180 0100     		.2byte	0x1
 2348 0182 50       		.byte	0x50
 2349 0183 00000000 		.4byte	0
 2350 0187 00000000 		.4byte	0
 2351              	.LLST3:
 2352 018b 00000000 		.4byte	.LVL27
 2353 018f 06000000 		.4byte	.LVL29
 2354 0193 0100     		.2byte	0x1
 2355 0195 50       		.byte	0x50
 2356 0196 06000000 		.4byte	.LVL29
 2357 019a 1A000000 		.4byte	.LVL31
 2358 019e 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 58


 2359 01a0 52       		.byte	0x52
 2360 01a1 1A000000 		.4byte	.LVL31
 2361 01a5 20000000 		.4byte	.LVL32
 2362 01a9 0400     		.2byte	0x4
 2363 01ab F3       		.byte	0xf3
 2364 01ac 01       		.uleb128 0x1
 2365 01ad 50       		.byte	0x50
 2366 01ae 9F       		.byte	0x9f
 2367 01af 20000000 		.4byte	.LVL32
 2368 01b3 22000000 		.4byte	.LVL33
 2369 01b7 0100     		.2byte	0x1
 2370 01b9 50       		.byte	0x50
 2371 01ba 22000000 		.4byte	.LVL33
 2372 01be 28000000 		.4byte	.LFE6
 2373 01c2 0400     		.2byte	0x4
 2374 01c4 F3       		.byte	0xf3
 2375 01c5 01       		.uleb128 0x1
 2376 01c6 50       		.byte	0x50
 2377 01c7 9F       		.byte	0x9f
 2378 01c8 00000000 		.4byte	0
 2379 01cc 00000000 		.4byte	0
 2380              	.LLST4:
 2381 01d0 02000000 		.4byte	.LVL28
 2382 01d4 06000000 		.4byte	.LVL29
 2383 01d8 0200     		.2byte	0x2
 2384 01da 30       		.byte	0x30
 2385 01db 9F       		.byte	0x9f
 2386 01dc 0E000000 		.4byte	.LVL30
 2387 01e0 20000000 		.4byte	.LVL32
 2388 01e4 0100     		.2byte	0x1
 2389 01e6 50       		.byte	0x50
 2390 01e7 20000000 		.4byte	.LVL32
 2391 01eb 22000000 		.4byte	.LVL33
 2392 01ef 0200     		.2byte	0x2
 2393 01f1 30       		.byte	0x30
 2394 01f2 9F       		.byte	0x9f
 2395 01f3 22000000 		.4byte	.LVL33
 2396 01f7 28000000 		.4byte	.LFE6
 2397 01fb 0100     		.2byte	0x1
 2398 01fd 50       		.byte	0x50
 2399 01fe 00000000 		.4byte	0
 2400 0202 00000000 		.4byte	0
 2401              	.LLST5:
 2402 0206 00000000 		.4byte	.LVL34
 2403 020a 0A000000 		.4byte	.LVL35
 2404 020e 0100     		.2byte	0x1
 2405 0210 50       		.byte	0x50
 2406 0211 0A000000 		.4byte	.LVL35
 2407 0215 14000000 		.4byte	.LVL37
 2408 0219 0100     		.2byte	0x1
 2409 021b 54       		.byte	0x54
 2410 021c 14000000 		.4byte	.LVL37
 2411 0220 22000000 		.4byte	.LVL39
 2412 0224 0400     		.2byte	0x4
 2413 0226 F3       		.byte	0xf3
 2414 0227 01       		.uleb128 0x1
 2415 0228 50       		.byte	0x50
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 59


 2416 0229 9F       		.byte	0x9f
 2417 022a 22000000 		.4byte	.LVL39
 2418 022e 24000000 		.4byte	.LVL40
 2419 0232 0100     		.2byte	0x1
 2420 0234 54       		.byte	0x54
 2421 0235 24000000 		.4byte	.LVL40
 2422 0239 2C000000 		.4byte	.LFE7
 2423 023d 0400     		.2byte	0x4
 2424 023f F3       		.byte	0xf3
 2425 0240 01       		.uleb128 0x1
 2426 0241 50       		.byte	0x50
 2427 0242 9F       		.byte	0x9f
 2428 0243 00000000 		.4byte	0
 2429 0247 00000000 		.4byte	0
 2430              	.LLST6:
 2431 024b 20000000 		.4byte	.LVL38
 2432 024f 22000000 		.4byte	.LVL39
 2433 0253 0100     		.2byte	0x1
 2434 0255 50       		.byte	0x50
 2435 0256 24000000 		.4byte	.LVL40
 2436 025a 26000000 		.4byte	.LVL41
 2437 025e 0100     		.2byte	0x1
 2438 0260 50       		.byte	0x50
 2439 0261 00000000 		.4byte	0
 2440 0265 00000000 		.4byte	0
 2441              	.LLST7:
 2442 0269 00000000 		.4byte	.LVL42
 2443 026d 04000000 		.4byte	.LVL43
 2444 0271 0100     		.2byte	0x1
 2445 0273 50       		.byte	0x50
 2446 0274 04000000 		.4byte	.LVL43
 2447 0278 10000000 		.4byte	.LFE8
 2448 027c 0400     		.2byte	0x4
 2449 027e F3       		.byte	0xf3
 2450 027f 01       		.uleb128 0x1
 2451 0280 50       		.byte	0x50
 2452 0281 9F       		.byte	0x9f
 2453 0282 00000000 		.4byte	0
 2454 0286 00000000 		.4byte	0
 2455              	.LLST8:
 2456 028a 00000000 		.4byte	.LVL44
 2457 028e 0E000000 		.4byte	.LVL45
 2458 0292 0100     		.2byte	0x1
 2459 0294 50       		.byte	0x50
 2460 0295 0E000000 		.4byte	.LVL45
 2461 0299 1C000000 		.4byte	.LFE9
 2462 029d 0400     		.2byte	0x4
 2463 029f F3       		.byte	0xf3
 2464 02a0 01       		.uleb128 0x1
 2465 02a1 50       		.byte	0x50
 2466 02a2 9F       		.byte	0x9f
 2467 02a3 00000000 		.4byte	0
 2468 02a7 00000000 		.4byte	0
 2469              	.LLST9:
 2470 02ab 00000000 		.4byte	.LVL46
 2471 02af 0E000000 		.4byte	.LVL47
 2472 02b3 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 60


 2473 02b5 50       		.byte	0x50
 2474 02b6 0E000000 		.4byte	.LVL47
 2475 02ba 18000000 		.4byte	.LFE10
 2476 02be 0400     		.2byte	0x4
 2477 02c0 F3       		.byte	0xf3
 2478 02c1 01       		.uleb128 0x1
 2479 02c2 50       		.byte	0x50
 2480 02c3 9F       		.byte	0x9f
 2481 02c4 00000000 		.4byte	0
 2482 02c8 00000000 		.4byte	0
 2483              	.LLST10:
 2484 02cc 00000000 		.4byte	.LVL48
 2485 02d0 04000000 		.4byte	.LVL49
 2486 02d4 0100     		.2byte	0x1
 2487 02d6 50       		.byte	0x50
 2488 02d7 04000000 		.4byte	.LVL49
 2489 02db 10000000 		.4byte	.LFE11
 2490 02df 0400     		.2byte	0x4
 2491 02e1 F3       		.byte	0xf3
 2492 02e2 01       		.uleb128 0x1
 2493 02e3 50       		.byte	0x50
 2494 02e4 9F       		.byte	0x9f
 2495 02e5 00000000 		.4byte	0
 2496 02e9 00000000 		.4byte	0
 2497              	.LLST11:
 2498 02ed 00000000 		.4byte	.LVL50
 2499 02f1 04000000 		.4byte	.LVL51
 2500 02f5 0100     		.2byte	0x1
 2501 02f7 50       		.byte	0x50
 2502 02f8 04000000 		.4byte	.LVL51
 2503 02fc 10000000 		.4byte	.LFE12
 2504 0300 0400     		.2byte	0x4
 2505 0302 F3       		.byte	0xf3
 2506 0303 01       		.uleb128 0x1
 2507 0304 50       		.byte	0x50
 2508 0305 9F       		.byte	0x9f
 2509 0306 00000000 		.4byte	0
 2510 030a 00000000 		.4byte	0
 2511              	.LLST12:
 2512 030e 00000000 		.4byte	.LVL52
 2513 0312 0C000000 		.4byte	.LVL53
 2514 0316 0100     		.2byte	0x1
 2515 0318 50       		.byte	0x50
 2516 0319 0C000000 		.4byte	.LVL53
 2517 031d 12000000 		.4byte	.LVL55
 2518 0321 0100     		.2byte	0x1
 2519 0323 54       		.byte	0x54
 2520 0324 12000000 		.4byte	.LVL55
 2521 0328 1C000000 		.4byte	.LFE13
 2522 032c 0400     		.2byte	0x4
 2523 032e F3       		.byte	0xf3
 2524 032f 01       		.uleb128 0x1
 2525 0330 50       		.byte	0x50
 2526 0331 9F       		.byte	0x9f
 2527 0332 00000000 		.4byte	0
 2528 0336 00000000 		.4byte	0
 2529              	.LLST13:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 61


 2530 033a 00000000 		.4byte	.LVL52
 2531 033e 0F000000 		.4byte	.LVL54-1
 2532 0342 0100     		.2byte	0x1
 2533 0344 51       		.byte	0x51
 2534 0345 0F000000 		.4byte	.LVL54-1
 2535 0349 1C000000 		.4byte	.LFE13
 2536 034d 0400     		.2byte	0x4
 2537 034f F3       		.byte	0xf3
 2538 0350 01       		.uleb128 0x1
 2539 0351 51       		.byte	0x51
 2540 0352 9F       		.byte	0x9f
 2541 0353 00000000 		.4byte	0
 2542 0357 00000000 		.4byte	0
 2543              	.LLST14:
 2544 035b 00000000 		.4byte	.LVL56
 2545 035f 0C000000 		.4byte	.LVL57
 2546 0363 0100     		.2byte	0x1
 2547 0365 50       		.byte	0x50
 2548 0366 0C000000 		.4byte	.LVL57
 2549 036a 12000000 		.4byte	.LVL59
 2550 036e 0100     		.2byte	0x1
 2551 0370 54       		.byte	0x54
 2552 0371 12000000 		.4byte	.LVL59
 2553 0375 1C000000 		.4byte	.LFE14
 2554 0379 0400     		.2byte	0x4
 2555 037b F3       		.byte	0xf3
 2556 037c 01       		.uleb128 0x1
 2557 037d 50       		.byte	0x50
 2558 037e 9F       		.byte	0x9f
 2559 037f 00000000 		.4byte	0
 2560 0383 00000000 		.4byte	0
 2561              	.LLST15:
 2562 0387 00000000 		.4byte	.LVL56
 2563 038b 0F000000 		.4byte	.LVL58-1
 2564 038f 0100     		.2byte	0x1
 2565 0391 51       		.byte	0x51
 2566 0392 0F000000 		.4byte	.LVL58-1
 2567 0396 16000000 		.4byte	.LVL60
 2568 039a 0100     		.2byte	0x1
 2569 039c 55       		.byte	0x55
 2570 039d 16000000 		.4byte	.LVL60
 2571 03a1 1C000000 		.4byte	.LFE14
 2572 03a5 0800     		.2byte	0x8
 2573 03a7 F3       		.byte	0xf3
 2574 03a8 01       		.uleb128 0x1
 2575 03a9 50       		.byte	0x50
 2576 03aa 32       		.byte	0x32
 2577 03ab 24       		.byte	0x24
 2578 03ac 73       		.byte	0x73
 2579 03ad 00       		.sleb128 0
 2580 03ae 22       		.byte	0x22
 2581 03af 00000000 		.4byte	0
 2582 03b3 00000000 		.4byte	0
 2583              	.LLST16:
 2584 03b7 00000000 		.4byte	.LVL61
 2585 03bb 0C000000 		.4byte	.LVL62
 2586 03bf 0100     		.2byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 62


 2587 03c1 50       		.byte	0x50
 2588 03c2 0C000000 		.4byte	.LVL62
 2589 03c6 44000000 		.4byte	.LVL65
 2590 03ca 0100     		.2byte	0x1
 2591 03cc 54       		.byte	0x54
 2592 03cd 44000000 		.4byte	.LVL65
 2593 03d1 5C000000 		.4byte	.LFE15
 2594 03d5 0400     		.2byte	0x4
 2595 03d7 F3       		.byte	0xf3
 2596 03d8 01       		.uleb128 0x1
 2597 03d9 50       		.byte	0x50
 2598 03da 9F       		.byte	0x9f
 2599 03db 00000000 		.4byte	0
 2600 03df 00000000 		.4byte	0
 2601              	.LLST17:
 2602 03e3 00000000 		.4byte	.LVL61
 2603 03e7 0F000000 		.4byte	.LVL63-1
 2604 03eb 0100     		.2byte	0x1
 2605 03ed 51       		.byte	0x51
 2606 03ee 0F000000 		.4byte	.LVL63-1
 2607 03f2 1C000000 		.4byte	.LVL64
 2608 03f6 0400     		.2byte	0x4
 2609 03f8 F3       		.byte	0xf3
 2610 03f9 01       		.uleb128 0x1
 2611 03fa 51       		.byte	0x51
 2612 03fb 9F       		.byte	0x9f
 2613 03fc 1C000000 		.4byte	.LVL64
 2614 0400 48000000 		.4byte	.LVL66
 2615 0404 0100     		.2byte	0x1
 2616 0406 51       		.byte	0x51
 2617 0407 00000000 		.4byte	0
 2618 040b 00000000 		.4byte	0
 2619              	.LLST18:
 2620 040f 00000000 		.4byte	.LVL69
 2621 0413 0C000000 		.4byte	.LVL70
 2622 0417 0100     		.2byte	0x1
 2623 0419 50       		.byte	0x50
 2624 041a 0C000000 		.4byte	.LVL70
 2625 041e 28000000 		.4byte	.LVL74
 2626 0422 0100     		.2byte	0x1
 2627 0424 55       		.byte	0x55
 2628 0425 28000000 		.4byte	.LVL74
 2629 0429 40000000 		.4byte	.LFE16
 2630 042d 0400     		.2byte	0x4
 2631 042f F3       		.byte	0xf3
 2632 0430 01       		.uleb128 0x1
 2633 0431 50       		.byte	0x50
 2634 0432 9F       		.byte	0x9f
 2635 0433 00000000 		.4byte	0
 2636 0437 00000000 		.4byte	0
 2637              	.LLST19:
 2638 043b 00000000 		.4byte	.LVL69
 2639 043f 0F000000 		.4byte	.LVL71-1
 2640 0443 0100     		.2byte	0x1
 2641 0445 51       		.byte	0x51
 2642 0446 0F000000 		.4byte	.LVL71-1
 2643 044a 1C000000 		.4byte	.LVL72
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 63


 2644 044e 0400     		.2byte	0x4
 2645 0450 F3       		.byte	0xf3
 2646 0451 01       		.uleb128 0x1
 2647 0452 51       		.byte	0x51
 2648 0453 9F       		.byte	0x9f
 2649 0454 1C000000 		.4byte	.LVL72
 2650 0458 25000000 		.4byte	.LVL73-1
 2651 045c 0100     		.2byte	0x1
 2652 045e 50       		.byte	0x50
 2653 045f 00000000 		.4byte	0
 2654 0463 00000000 		.4byte	0
 2655              	.LLST20:
 2656 0467 00000000 		.4byte	.LVL76
 2657 046b 0C000000 		.4byte	.LVL77
 2658 046f 0100     		.2byte	0x1
 2659 0471 50       		.byte	0x50
 2660 0472 0C000000 		.4byte	.LVL77
 2661 0476 2A000000 		.4byte	.LVL82
 2662 047a 0100     		.2byte	0x1
 2663 047c 54       		.byte	0x54
 2664 047d 2A000000 		.4byte	.LVL82
 2665 0481 48000000 		.4byte	.LFE17
 2666 0485 0400     		.2byte	0x4
 2667 0487 F3       		.byte	0xf3
 2668 0488 01       		.uleb128 0x1
 2669 0489 50       		.byte	0x50
 2670 048a 9F       		.byte	0x9f
 2671 048b 00000000 		.4byte	0
 2672 048f 00000000 		.4byte	0
 2673              	.LLST21:
 2674 0493 00000000 		.4byte	.LVL76
 2675 0497 0F000000 		.4byte	.LVL78-1
 2676 049b 0100     		.2byte	0x1
 2677 049d 51       		.byte	0x51
 2678 049e 0F000000 		.4byte	.LVL78-1
 2679 04a2 1C000000 		.4byte	.LVL79
 2680 04a6 0400     		.2byte	0x4
 2681 04a8 F3       		.byte	0xf3
 2682 04a9 01       		.uleb128 0x1
 2683 04aa 51       		.byte	0x51
 2684 04ab 9F       		.byte	0x9f
 2685 04ac 1C000000 		.4byte	.LVL79
 2686 04b0 1F000000 		.4byte	.LVL80-1
 2687 04b4 0100     		.2byte	0x1
 2688 04b6 50       		.byte	0x50
 2689 04b7 00000000 		.4byte	0
 2690 04bb 00000000 		.4byte	0
 2691              		.section	.debug_aranges,"",%progbits
 2692 0000 A4000000 		.4byte	0xa4
 2693 0004 0200     		.2byte	0x2
 2694 0006 00000000 		.4byte	.Ldebug_info0
 2695 000a 04       		.byte	0x4
 2696 000b 00       		.byte	0
 2697 000c 0000     		.2byte	0
 2698 000e 0000     		.2byte	0
 2699 0010 00000000 		.4byte	.LFB1
 2700 0014 88010000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 64


 2701 0018 00000000 		.4byte	.LFB2
 2702 001c 24000000 		.4byte	.LFE2-.LFB2
 2703 0020 00000000 		.4byte	.LFB0
 2704 0024 20000000 		.4byte	.LFE0-.LFB0
 2705 0028 00000000 		.4byte	.LFB3
 2706 002c 10000000 		.4byte	.LFE3-.LFB3
 2707 0030 00000000 		.4byte	.LFB4
 2708 0034 14000000 		.4byte	.LFE4-.LFB4
 2709 0038 00000000 		.4byte	.LFB5
 2710 003c 14000000 		.4byte	.LFE5-.LFB5
 2711 0040 00000000 		.4byte	.LFB6
 2712 0044 28000000 		.4byte	.LFE6-.LFB6
 2713 0048 00000000 		.4byte	.LFB7
 2714 004c 2C000000 		.4byte	.LFE7-.LFB7
 2715 0050 00000000 		.4byte	.LFB8
 2716 0054 10000000 		.4byte	.LFE8-.LFB8
 2717 0058 00000000 		.4byte	.LFB9
 2718 005c 1C000000 		.4byte	.LFE9-.LFB9
 2719 0060 00000000 		.4byte	.LFB10
 2720 0064 18000000 		.4byte	.LFE10-.LFB10
 2721 0068 00000000 		.4byte	.LFB11
 2722 006c 10000000 		.4byte	.LFE11-.LFB11
 2723 0070 00000000 		.4byte	.LFB12
 2724 0074 10000000 		.4byte	.LFE12-.LFB12
 2725 0078 00000000 		.4byte	.LFB13
 2726 007c 1C000000 		.4byte	.LFE13-.LFB13
 2727 0080 00000000 		.4byte	.LFB14
 2728 0084 1C000000 		.4byte	.LFE14-.LFB14
 2729 0088 00000000 		.4byte	.LFB15
 2730 008c 5C000000 		.4byte	.LFE15-.LFB15
 2731 0090 00000000 		.4byte	.LFB16
 2732 0094 40000000 		.4byte	.LFE16-.LFB16
 2733 0098 00000000 		.4byte	.LFB17
 2734 009c 48000000 		.4byte	.LFE17-.LFB17
 2735 00a0 00000000 		.4byte	0
 2736 00a4 00000000 		.4byte	0
 2737              		.section	.debug_ranges,"",%progbits
 2738              	.Ldebug_ranges0:
 2739 0000 00000000 		.4byte	.LFB1
 2740 0004 88010000 		.4byte	.LFE1
 2741 0008 00000000 		.4byte	.LFB2
 2742 000c 24000000 		.4byte	.LFE2
 2743 0010 00000000 		.4byte	.LFB0
 2744 0014 20000000 		.4byte	.LFE0
 2745 0018 00000000 		.4byte	.LFB3
 2746 001c 10000000 		.4byte	.LFE3
 2747 0020 00000000 		.4byte	.LFB4
 2748 0024 14000000 		.4byte	.LFE4
 2749 0028 00000000 		.4byte	.LFB5
 2750 002c 14000000 		.4byte	.LFE5
 2751 0030 00000000 		.4byte	.LFB6
 2752 0034 28000000 		.4byte	.LFE6
 2753 0038 00000000 		.4byte	.LFB7
 2754 003c 2C000000 		.4byte	.LFE7
 2755 0040 00000000 		.4byte	.LFB8
 2756 0044 10000000 		.4byte	.LFE8
 2757 0048 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 65


 2758 004c 1C000000 		.4byte	.LFE9
 2759 0050 00000000 		.4byte	.LFB10
 2760 0054 18000000 		.4byte	.LFE10
 2761 0058 00000000 		.4byte	.LFB11
 2762 005c 10000000 		.4byte	.LFE11
 2763 0060 00000000 		.4byte	.LFB12
 2764 0064 10000000 		.4byte	.LFE12
 2765 0068 00000000 		.4byte	.LFB13
 2766 006c 1C000000 		.4byte	.LFE13
 2767 0070 00000000 		.4byte	.LFB14
 2768 0074 1C000000 		.4byte	.LFE14
 2769 0078 00000000 		.4byte	.LFB15
 2770 007c 5C000000 		.4byte	.LFE15
 2771 0080 00000000 		.4byte	.LFB16
 2772 0084 40000000 		.4byte	.LFE16
 2773 0088 00000000 		.4byte	.LFB17
 2774 008c 48000000 		.4byte	.LFE17
 2775 0090 00000000 		.4byte	0
 2776 0094 00000000 		.4byte	0
 2777              		.section	.debug_line,"",%progbits
 2778              	.Ldebug_line0:
 2779 0000 9A020000 		.section	.debug_str,"MS",%progbits,1
 2779      02005000 
 2779      00000201 
 2779      FB0E0D00 
 2779      01010101 
 2780              	.LASF10:
 2781 0000 75696E74 		.ascii	"uint16\000"
 2781      313600
 2782              	.LASF38:
 2783 0007 41444349 		.ascii	"ADCInput_SetChanMask\000"
 2783      6E707574 
 2783      5F536574 
 2783      4368616E 
 2783      4D61736B 
 2784              	.LASF49:
 2785 001c 61646347 		.ascii	"adcGain\000"
 2785      61696E00 
 2786              	.LASF24:
 2787 0024 636F756E 		.ascii	"counts\000"
 2787      747300
 2788              	.LASF46:
 2789 002b 41444349 		.ascii	"ADCInput_SetOffset\000"
 2789      6E707574 
 2789      5F536574 
 2789      4F666673 
 2789      657400
 2790              	.LASF66:
 2791 003e 443A5C47 		.ascii	"D:\\GIT\\Microcontroller System Design Projects\\HW"
 2791      49545C4D 
 2791      6963726F 
 2791      636F6E74 
 2791      726F6C6C 
 2792 006e 352D4D69 		.ascii	"5-MiniScope\\MiniScope.cydsn\000"
 2792      6E695363 
 2792      6F70655C 
 2792      4D696E69 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 66


 2792      53636F70 
 2793              	.LASF27:
 2794 008a 41444349 		.ascii	"ADCInput_Enable\000"
 2794      6E707574 
 2794      5F456E61 
 2794      626C6500 
 2795              	.LASF40:
 2796 009a 41444349 		.ascii	"ADCInput_SetLowLimit\000"
 2796      6E707574 
 2796      5F536574 
 2796      4C6F774C 
 2796      696D6974 
 2797              	.LASF64:
 2798 00af 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2798      43313120 
 2798      352E342E 
 2798      31203230 
 2798      31363036 
 2799 00e2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2799      20726576 
 2799      6973696F 
 2799      6E203233 
 2799      37373135 
 2800 0115 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2800      66756E63 
 2800      74696F6E 
 2800      2D736563 
 2800      74696F6E 
 2801              	.LASF7:
 2802 013d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2802      206C6F6E 
 2802      6720756E 
 2802      7369676E 
 2802      65642069 
 2803              	.LASF45:
 2804 0154 41444349 		.ascii	"ADCInput_SetSatMask\000"
 2804      6E707574 
 2804      5F536574 
 2804      5361744D 
 2804      61736B00 
 2805              	.LASF44:
 2806 0168 41444349 		.ascii	"ADCInput_SetLimitMask\000"
 2806      6E707574 
 2806      5F536574 
 2806      4C696D69 
 2806      744D6173 
 2807              	.LASF6:
 2808 017e 6C6F6E67 		.ascii	"long long int\000"
 2808      206C6F6E 
 2808      6720696E 
 2808      7400
 2809              	.LASF0:
 2810 018c 7369676E 		.ascii	"signed char\000"
 2810      65642063 
 2810      68617200 
 2811              	.LASF13:
 2812 0198 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 67


 2812      3200
 2813              	.LASF4:
 2814 019e 6C6F6E67 		.ascii	"long int\000"
 2814      20696E74 
 2814      00
 2815              	.LASF9:
 2816 01a7 75696E74 		.ascii	"uint8\000"
 2816      3800
 2817              	.LASF30:
 2818 01ad 41444349 		.ascii	"ADCInput_StartConvert\000"
 2818      6E707574 
 2818      5F537461 
 2818      7274436F 
 2818      6E766572 
 2819              	.LASF62:
 2820 01c3 43794465 		.ascii	"CyDelayUs\000"
 2820      6C617955 
 2820      7300
 2821              	.LASF16:
 2822 01cd 646F7562 		.ascii	"double\000"
 2822      6C6500
 2823              	.LASF11:
 2824 01d4 75696E74 		.ascii	"uint32\000"
 2824      333200
 2825              	.LASF39:
 2826 01db 6D61736B 		.ascii	"mask\000"
 2826      00
 2827              	.LASF65:
 2828 01e0 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADCInput.c\000"
 2828      72617465 
 2828      645F536F 
 2828      75726365 
 2828      5C50536F 
 2829              	.LASF59:
 2830 0202 41444349 		.ascii	"ADCInput_countsPer10Volt\000"
 2830      6E707574 
 2830      5F636F75 
 2830      6E747350 
 2830      65723130 
 2831              	.LASF35:
 2832 021b 7265744D 		.ascii	"retMode\000"
 2832      6F646500 
 2833              	.LASF26:
 2834 0223 41444349 		.ascii	"ADCInput_Init\000"
 2834      6E707574 
 2834      5F496E69 
 2834      7400
 2835              	.LASF8:
 2836 0231 756E7369 		.ascii	"unsigned int\000"
 2836      676E6564 
 2836      20696E74 
 2836      00
 2837              	.LASF67:
 2838 023e 75566F6C 		.ascii	"uVolts\000"
 2838      747300
 2839              	.LASF5:
 2840 0245 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 68


 2840      20756E73 
 2840      69676E65 
 2840      6420696E 
 2840      7400
 2841              	.LASF55:
 2842 0257 766F6C74 		.ascii	"volts\000"
 2842      7300
 2843              	.LASF23:
 2844 025d 746D7052 		.ascii	"tmpRegVal\000"
 2844      65675661 
 2844      6C00
 2845              	.LASF58:
 2846 0267 41444349 		.ascii	"ADCInput_offset\000"
 2846      6E707574 
 2846      5F6F6666 
 2846      73657400 
 2847              	.LASF3:
 2848 0277 73686F72 		.ascii	"short unsigned int\000"
 2848      7420756E 
 2848      7369676E 
 2848      65642069 
 2848      6E7400
 2849              	.LASF61:
 2850 028a 4379496E 		.ascii	"CyIntSetVector\000"
 2850      74536574 
 2850      56656374 
 2850      6F7200
 2851              	.LASF34:
 2852 0299 41444349 		.ascii	"ADCInput_GetResult16\000"
 2852      6E707574 
 2852      5F476574 
 2852      52657375 
 2852      6C743136 
 2853              	.LASF52:
 2854 02ae 6D566F6C 		.ascii	"mVolts\000"
 2854      747300
 2855              	.LASF19:
 2856 02b5 72656733 		.ascii	"reg32\000"
 2856      3200
 2857              	.LASF14:
 2858 02bb 666C6F61 		.ascii	"float32\000"
 2858      74333200 
 2859              	.LASF21:
 2860 02c3 73697A65 		.ascii	"sizetype\000"
 2860      74797065 
 2860      00
 2861              	.LASF41:
 2862 02cc 6C6F774C 		.ascii	"lowLimit\000"
 2862      696D6974 
 2862      00
 2863              	.LASF20:
 2864 02d5 6C6F6E67 		.ascii	"long double\000"
 2864      20646F75 
 2864      626C6500 
 2865              	.LASF25:
 2866 02e1 41444349 		.ascii	"ADCInput_InputsPlacement\000"
 2866      6E707574 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 69


 2866      5F496E70 
 2866      75747350 
 2866      6C616365 
 2867              	.LASF17:
 2868 02fa 696E7436 		.ascii	"int64\000"
 2868      3400
 2869              	.LASF60:
 2870 0300 4379496E 		.ascii	"CyIntSetPriority\000"
 2870      74536574 
 2870      5072696F 
 2870      72697479 
 2870      00
 2871              	.LASF15:
 2872 0311 666C6F61 		.ascii	"float\000"
 2872      7400
 2873              	.LASF48:
 2874 0317 41444349 		.ascii	"ADCInput_SetGain\000"
 2874      6E707574 
 2874      5F536574 
 2874      4761696E 
 2874      00
 2875              	.LASF43:
 2876 0328 68696768 		.ascii	"highLimit\000"
 2876      4C696D69 
 2876      7400
 2877              	.LASF42:
 2878 0332 41444349 		.ascii	"ADCInput_SetHighLimit\000"
 2878      6E707574 
 2878      5F536574 
 2878      48696768 
 2878      4C696D69 
 2879              	.LASF57:
 2880 0348 41444349 		.ascii	"ADCInput_initVar\000"
 2880      6E707574 
 2880      5F696E69 
 2880      74566172 
 2880      00
 2881              	.LASF53:
 2882 0359 41444349 		.ascii	"ADCInput_CountsTo_uVolts\000"
 2882      6E707574 
 2882      5F436F75 
 2882      6E747354 
 2882      6F5F7556 
 2883              	.LASF63:
 2884 0372 43794861 		.ascii	"CyHalt\000"
 2884      6C7400
 2885              	.LASF1:
 2886 0379 756E7369 		.ascii	"unsigned char\000"
 2886      676E6564 
 2886      20636861 
 2886      7200
 2887              	.LASF2:
 2888 0387 73686F72 		.ascii	"short int\000"
 2888      7420696E 
 2888      7400
 2889              	.LASF56:
 2890 0391 41444349 		.ascii	"ADCInput_channelsConfig\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 70


 2890      6E707574 
 2890      5F636861 
 2890      6E6E656C 
 2890      73436F6E 
 2891              	.LASF22:
 2892 03a9 63684E75 		.ascii	"chNum\000"
 2892      6D00
 2893              	.LASF36:
 2894 03af 6368616E 		.ascii	"chan\000"
 2894      00
 2895              	.LASF18:
 2896 03b4 63686172 		.ascii	"char\000"
 2896      00
 2897              	.LASF28:
 2898 03b9 41444349 		.ascii	"ADCInput_Start\000"
 2898      6E707574 
 2898      5F537461 
 2898      727400
 2899              	.LASF50:
 2900 03c8 41444349 		.ascii	"ADCInput_CountsTo_mVolts\000"
 2900      6E707574 
 2900      5F436F75 
 2900      6E747354 
 2900      6F5F6D56 
 2901              	.LASF47:
 2902 03e1 6F666673 		.ascii	"offset\000"
 2902      657400
 2903              	.LASF51:
 2904 03e8 61646343 		.ascii	"adcCounts\000"
 2904      6F756E74 
 2904      7300
 2905              	.LASF31:
 2906 03f2 41444349 		.ascii	"ADCInput_StopConvert\000"
 2906      6E707574 
 2906      5F53746F 
 2906      70436F6E 
 2906      76657274 
 2907              	.LASF32:
 2908 0407 73746174 		.ascii	"status\000"
 2908      757300
 2909              	.LASF12:
 2910 040e 696E7431 		.ascii	"int16\000"
 2910      3600
 2911              	.LASF29:
 2912 0414 41444349 		.ascii	"ADCInput_Stop\000"
 2912      6E707574 
 2912      5F53746F 
 2912      7000
 2913              	.LASF54:
 2914 0422 41444349 		.ascii	"ADCInput_CountsTo_Volts\000"
 2914      6E707574 
 2914      5F436F75 
 2914      6E747354 
 2914      6F5F566F 
 2915              	.LASF33:
 2916 043a 41444349 		.ascii	"ADCInput_IsEndConversion\000"
 2916      6E707574 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccHDjPtC.s 			page 71


 2916      5F497345 
 2916      6E64436F 
 2916      6E766572 
 2917              	.LASF37:
 2918 0453 72657375 		.ascii	"result\000"
 2918      6C7400
 2919              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
